{"version":3,"sources":["Components/HomeSection/assets/img/1.jpg","Components/HomeSection/assets/img/2.jpg","Components/HomeSection/assets/img/3.png","Components/HomeSection/assets/img/Steps/MSA.png","Components/HomeSection/assets/img/Steps/pw.png","Components/HomeSection/assets/img/Steps/game.jpg","Redux/Actions/Mode.js","Components/Drawer/DrawerList.js","Redux/Actions/PairAlign.js","util/FASTA.js","Components/CommonInput/FileUpload.js","Validators/sequence.js","Components/CommonInput/TextInput.js","util/fetch.js","GenomeAPI/GenomeAPI.js","Redux/Actions/Snackbar.js","Components/CommonInput/APIinput.js","Components/CommonInput/RangeSelector.js","Components/CommonInput/NameInput.js","Components/CommonInput/CommonInput.js","Components/PairAlign/AlgoSelector.js","Components/CommonScoreSchema/NumberInput.js","Redux/Actions/Score.js","Components/CommonScoreSchema/ScoreSchema.js","Components/CommonScoreSchema/TracebackPrioritySelector.js","Components/CommonScoreSchema/DNAMatrixInput.js","Components/CommonScoreSchema/SimilarityMatrixInput.js","Components/CommonScoreSchema/ExtendedScoreSchema.js","Components/CommonScoreSchema/ScoringMethodSelector.js","Components/CommonScoreSchema/Score.js","Components/PairAlign/PairAlignInput.js","config/config.js","API/PairAlign.js","Components/PairAlign/PairAlignAlignment.js","Components/PairAlign/Matrix/Cell.js","Components/PairAlign/Matrix/HeaderCell.js","Components/PairAlign/Matrix/LeftHeaderCell.js","Components/PairAlign/Matrix/Matrix.js","util/traceback.js","Components/PairAlign/PlayableResut.js","Components/PairAlign/PairAlignReport.js","Components/PairAlign/Matrix/ExtendedCell.js","Components/PairAlign/Matrix/ExtendedMatrix.js","Components/PairAlign/PairAlignResult.js","Components/PairAlign/LoadingOverlay.js","Components/GeomeType/GenomeTypeInput.js","util/substring.js","Components/PairAlign/PairAlignContent.js","Redux/Actions/MSA.js","Components/MSA/Input/MSASequencesInput.js","Components/MSA/Input/DropDownInput.js","Validators/MSA/MSAOrderValidator.js","util/msaHelpData.js","Components/MSA/Input/PairingOrderList.js","Components/MSA/MSATree.js","Components/MSA/Input/HelpModal.js","Components/MSA/Input/MSAOrderInput.js","Components/MSA/Input/MSAAlgoSelector.js","Components/MSA/MSAInput.js","API/MSA.js","Components/MSA/MSAAlignment.js","Components/MSA/MSAReport.js","Components/MSA/MSAResult.js","Components/MSA/LoadingOverlay.js","Components/MSA/MSAContent.js","Components/HomeSection/ViewMore.js","Components/HomeSection/SingleService.js","Components/HomeSection/Services.js","Components/HomeSection/Details/PWCoreDetails.js","Components/HomeSection/Details/PairwiseDetails.js","Components/HomeSection/Details/MSACoreDetails.js","Components/HomeSection/Details/MSADetails.js","Components/HomeSection/Snackbar.js","Components/HomeSection/Alert.js","Components/HomeSection/Game.js","Components/HomeSection/DialogScreen.js","Components/HomeSection/StepByStep.js","Components/HomeSection/Steps.js","Components/HomeSection/Rating.js","Components/HomeSection/Feedback.js","Components/HomeSection/HomeSection.js","Components/GameSection/Base.js","Components/GameSection/GameInstruction.js","Components/GameSection/GamePlay.js","Components/GameSection/GameAlignTable.js","Components/GameSection/GameLable.js","Components/GameSection/GameAlign.js","Components/GameSection/GameTextInput.js","Redux/Actions/Game.js","Components/GameSection/GameFileUpload.js","Components/GameSection/GameInput.js","Components/GameSection/GameResult.js","Components/GameSection/GameIntroduction.js","Components/GameSection/GameSection.js","Components/CommonAlert/SnackbarAlert.js","Components/MainContent.js","Components/Drawer/MainDrawer.js","Components/MainWrapper.js","App.js","serviceWorker.js","Components/PairAlign/DummyData.js","util/DNAmatrixdata.js","Components/MSA/DummyData.js","Redux/Reducers/index.js","Redux/Reducers/Mode.js","Redux/Reducers/PairAlign.js","Redux/Reducers/Score.js","Redux/Reducers/MSA.js","Redux/Reducers/Game.js","Redux/Reducers/Snackbar.js","index.js","Components/HomeSection/assets/css/image.module.css","assets/icons/dna.svg","styles/GenomeStyles.module.css"],"names":["module","exports","setDrawerOpen","openStatus","type","payload","setTheme","themeValue","useStyles","makeStyles","theme","toolbar","mixins","navItem","paddingTop","paddingBottom","margin","marginBottom","borderWidth","borderColor","borderRadius","width","navItemSelected","borderStyle","backgroundColor","DrawerList","props","themeSelectorValue","classes","dispatch","useDispatch","currentMode","useSelector","state","mode","currentTheme","navItems","key","Icon","src","DnaIcon","alt","className","Divider","List","map","item","index","ListItem","button","onClick","closeDrawer","ListItemIcon","ListItemText","primary","primaryTypographyProps","variant","secondary","style","textAlign","marginTop","FormControlLabel","control","Switch","checked","onChange","event","target","name","color","label","setP1Input","input","setP1Range","setP1Name","setP2Input","setP2Range","setP2Name","parseFASTA","raw","Promise","resolve","reject","charAt","splitted","trim","split","length","description","sequence","status","shift","slice","join","replace","toUpperCase","match","FileUpload","fileReader","handleFileRead","e","a","content","result","parsedData","inputHandler","MSAkey","nameInputHandler","handleError","error","abort","console","log","Tooltip","title","interactive","arrow","Button","component","size","id","accept","file","files","FileReader","onerror","onloadend","pop","toLowerCase","readAsText","display","validateSequence","pattern","TextInput","genomeType","useState","errorStatus","seterrorStatus","useEffect","value","DNAseq","TextField","fullWidth","multiline","rowsMax","placeholder","helperText","inputProps","spellCheck","fetchPost","url","data","cb","options","method","headers","body","JSON","stringify","fetch","then","res","clone","json","jsonRes","undefined","response","catch","err","fetchGet","qParams","concat","forEach","fetchGenomeById","callback","setSnackBar","message","APIinput","inputValue","setinputValue","loading","setloading","seterror","onReceiveData","seq","Grid","container","disabled","marginLeft","CircularProgress","thickness","href","rel","Typography","root","valuetext","RangeSelector","rangeValues","range","getInputHandler","val","Number","newArr","rangeInputHandler","placement","Slider","min","Math","sequenceLength","max","step","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","spacing","align","justify","alignItems","Input","NameInput","sequenceName","CommonInput","cancelButton","IconButton","closeHandler","testid","height","xs","AlgoSelector","pAlgo","FormControl","FormLabel","RadioGroup","aria-label","Radio","NumberInput","ms","inputSelector","React","setErrorStatus","floor","acceptedType","setMatchScore","setMisMatchPenalty","setGapPenalty","setGapOpenPenalty","setGapExtendPenalty","editDNASimilarityMatrix","identifier","CommonScore","direction","formControl","minWidth","TracebackPrioritySelector","tracebackPriority","InputLabel","Select","labelId","MenuItem","bases","table","cell","DNAMatrixInput","b","matrix","DNASimilarityMatrix","isInteger","tableBody","i","row","j","push","Box","alignContent","SimilarityMatrixInput","matrixName","similarityMatrixName","menuItems","FormHelperText","CommonExtendedScore","ScoringMethodSelector","scoringMethod","Score","scoreInput","PairAlignInput","boxShadow","padding","P1","P2","apiHost","pairAign","algorithm","seqA","seqB","mismatch","gap","seq_a","seq_b","pairAignExtended","openGap","extendGap","priority","DNAmatrix","opening_gap","extending_gap","seq_type","sub_mat","fetchNW","fetchNWExtended","fetchSW","fetchSWExtended","avatar","fontSize","emptyRow","PairAlignAlignment","algnA","alignment","algn_a","algnB","algn_b","totalLen","makeSegment","classA","classB","upper","Avatar","genomeStyles","lower","middle","itemCount","itemSize","layout","Cell","left","directions","indexOf","diagonal","up","HeaderCell","LeftHeaderCell","justifyContent","verticalAlign","headerCell","inpath","hideScroll","background","Matrix","headerRef","createRef","leftHeaderRef","gridRef","inputLenA","inputLenB","scoreMatrix","score_matrix","directionMatrix","direction_matrix","path","alignments","selected","pathSet","Set","p","add","current","scrollToItem","columnIndex","rowIndex","makeHeaderCell","cIdx","makeLeftHeaderCell","rIdx","leftHeaderCell","makeCell","inPath","has","onClickCell","columnCount","columnWidth","rowCount","rowHeight","ref","overflowX","overflowY","onScroll","scrollLeft","scrollTop","scrollTo","defaultProps","getTracebackAlignment","starting","directionPath","alignA","alignB","element","PlayableResut","initialModifiedResult","modifiedResult","setmodifiedResult","setdirectionPath","addToDirectionPath","newDirPath","addToPath","r","newPath","lastItem","removeFromPath","removeFromDirectionPath","hasBelowCellInPath","hasRightCellInPath","hasDiagCellInPath","orientation","flexItem","DNAbases","PairAlignReport","downloadTxtFile","bind","sequences","sequenceNames","seqAname","seqBname","document","createElement","Blob","getElementById","innerText","URL","createObjectURL","download","appendChild","click","scores","this","date","Date","dateStr","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","inputSequences","line","gapOpen","gapExtend","DNASimilarityScores","base1","base2","pair","hasOwnProperty","alignmets","identity","paper","tabIndex","printableComponent","wrapped","Component","withStyles","palette","border","shadows","wordWrap","matrixIds","arrows","colors","zeroPadding","ExtendedCell","cellData","directionArrow","directionMatrices","bgColor","inPathSegment","cellSize","borderRight","rowSpan","ExtendedMatrix","reportModal","PairAlignResult","divRef","useRef","scrollIntoView","behavior","playableResult","selectedAlignment","setselectedAlignment","reportOpen","setReportOpen","lg","toFixed","score","Modal","open","onClose","aria-describedby","backdrop","zIndex","drawer","circularProgress","LoadingOverlay","Backdrop","GenomeTypeInput","getSubstring","start","end","PairAlignContent","setResult","matchScore","mismatchPenalty","gapPenalty","gapOpenPenalty","gapExtendPenalty","algo","onReceive","setMSAInput","setMSAInputRange","setMSAInputName","removeMSA","setMSAOrder","order","MSASequencesInput","MSASeq","inputs","maxHeight","submitButton","DropDownInput","seq1","setseq1","seq2","setseq2","items","availableSet","disabledStatus","newSeq1","newSeq2","onSubmitPair","msaOrderValidate","sequencesN","currentSequences","Array","fill","_","currentSet","flag","delete","sampleSequences","samplePairings","sampleGraph","availableIconsGrid","PairingOrderList","makeAvatar","character","orderList","pairingOrder","tree","sampleTree","MSATree","treeData","setSelected","treeType","sequencesNames","htmlId","graph","G6","TreeGraph","fitView","modes","default","collapsed","get","defaultNode","anchorPoints","stroke","defaultEdge","startArrow","getHeight","getWidth","getVGap","getHGap","getSide","centerX","node","x","nodeLabel","labelCfg","position","children","offset","on","defaultCfg","render","modal","seqListItem","HelpModal","setOpen","seqList","bottomInfo","Link","closeAfterTransition","BackdropComponent","BackdropProps","timeout","Fade","in","MSAOrderInput","msaOrder","setpairingOrder","useCallback","setavailableSet","setnextProfileIndex","nextProfileIndex","pairingValidityStatus","available","newOrder","newSet","MSAAlgoSelector","msaAlgo","msaSequences","msaOrderInput","MSAInput","fetchMSAProgressive","formattedOrder","fetchMSAProgressiveOptimal","MSAAlignment","makeBase","styleClass","onclick","MSAReport","MSAResult","selectedProfile","setselectedProfile","nInputSequences","intermediateProf","heading","profiles","canvas","getElementsByTagName","link","setAttribute","toDataURL","MSAContent","sequences_","typography","pxToRem","fontWeight","fontWeightRegular","ViewMore","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","subTitle","DivDecoration","image","maxWidth","overflow","SingleService","Paper","services","analyzeImage","visualizeImage","gamePlayImage","flexGrow","Services","subHeading","service","PWCoreDetails","gutterBottom","borderBottom","expanded","MuiExpansionPanel","minHeight","MuiExpansionPanelSummary","MuiExpansionPanelDetails","PairwiseDetails","panel","setExpanded","square","newExpanded","MSACoreDetails","SimpleSnackbar","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","action","Fragment","DialogTitle","closeButton","right","top","grey","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","viewResult","handleClickOpen","startIcon","Dialog","dividers","autoFocus","cardHeader","list","not","filter","intersection","TransferList","setChecked","Alertcomponent","setAlertcomponent","setLeft","setRight","pairwise","msa","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","numberOfChecked","customList","Card","CardHeader","subheader","dense","role","Checkbox","disableRipple","rightAnswerAlert","wrongAnswerAlert","checkResult","appBar","flex","Transition","forwardRef","Slide","FullScreenDialog","fullScreen","TransitionComponent","AppBar","Toolbar","edge","marginRight","actionsContainer","resetContainer","details","VerticalLinearStepper","HeadTitle","title1","title2","title3","title4","step1","step2","step3","step4","activeStep","setActiveStep","steps","drawerOpenStatus","drawerOpen","handleNext","prevActiveStep","handleBack","Stepper","Step","StepLabel","StepContent","img","getStepContent","elevation","pairwiseData","pwImage","MSAData","msaImage","gameData","gameImage","TabPanel","hidden","a11yProps","paddingLeft","paddingRight","ScrollableTabsButtonAuto","setValue","Tabs","indicatorColor","textColor","scrollButtons","centered","Tab","icon","iOSBoxShadow","marks","IOSSlider","thumb","active","valueLabel","track","rail","opacity","mark","markActive","CustomizedSlider","createData","rate","rows","Feedback","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","scope","HomeSection","A","C","G","T","ga","Base","base","GameInstruction","GamePlay","iconTable","float","GameAlignTable","align1","align2","indexLine","labe","GameLable","bestIdentity","bestMatch","gameplay","box","resetBtn","submitBtn","bestStateBtn","GameAlign","initialInput","setAlign","prev","setPrev","matches","bestAlign","setBestAlign","row1","row2","baseA","titleA","baseB","titleB","lastIndex","substring","changeSeqA","changeSeqB","prevState","usePrevious","endIcon","fetchAlign","GameTextInput","inputErr","setInputErr","inputAction","setGameInputA","setGameInputB","GameFileUpload","GameInput","GameSeqA","GameSeqB","scLabel","sc","tablerow","GameResult","aligns","mismatchPenanlty","matchSc","mismatchSc","gapSc","ele","GameIntroduction","GameSection","setInput","setAlignment","scoreErr","setErrMsg","inputA","inputB","callbackAlign","remain","repeat","SnackbarAlert","snackbarInfo","snackBar","MainContent","menuButton","drawerPaper","headerBox","MainDrawer","useTheme","handleDrawerToggle","CssBaseline","noWrap","Drawer","anchor","ModalProps","keepMounted","MainWrapper","darkTheme","createMuiTheme","App","Boolean","window","location","hostname","paInput","DNAsimilaritymatrixdata","initialData","allReducers","combineReducers","prev1_","prev1__","prev1___","prev2_","prev2__","prev2___","newMatrix","newKey","prev_","prev__","prev___","new_","prev2","myStore","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","store","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64f21956.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.eff3baf8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.a44f7dee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.7d298726.png\";","module.exports = __webpack_public_path__ + \"static/media/MSA.f1cd5369.png\";","module.exports = __webpack_public_path__ + \"static/media/pw.26d40194.png\";","module.exports = __webpack_public_path__ + \"static/media/game.f98482e5.jpg\";","export const setMode = (mode)=>{\n    return {\n        type: 'SET_MODE',\n        payload: mode,\n    };\n};\n\nexport const setGenomeType = (genomeType)=>{\n    return {\n        type: 'SET_GENOME_TYPE',\n        payload: genomeType,\n    };\n};\n\nexport const setDrawerOpen = (openStatus)=>{\n    return {\n        type: 'SET_DRAWER_OPEN',\n        payload: openStatus,\n    };\n};\n\nexport const setTheme = (themeValue)=>{\n    return {\n        type: 'SET_THEME',\n        payload: themeValue,\n    };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport DnaIcon from '../../assets/icons/dna.svg';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setMode, setTheme} from '../../Redux/Actions/Mode';\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    navItem: {\n        paddingTop: 0,\n        paddingBottom: 0,\n        margin: 'auto',\n        marginBottom: 10,\n        borderWidth: 2,\n        borderColor: 'blue',\n        borderRadius: 30,\n        width: 270,\n    },\n    navItemSelected: {\n\n        borderStyle: 'solid',\n        backgroundColor: '#00000020',\n\n    },\n}));\n\n/**\n * Component to display navigation manus in drawer.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport function DrawerList(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const currentMode = useSelector((state) => state.mode);\n    const currentTheme = useSelector((state) => state.currentTheme);\n    let themeSelectorValue;\n    if (currentTheme === 'dark') {\n        themeSelectorValue = true;\n    }\n\n    const onThemeChange = (event)=>{\n        if (event.target.checked === true) {\n            dispatch(setTheme('dark'));\n        } else {\n            dispatch(setTheme('light'));\n        }\n    };\n\n\n    // array with menu name, description and icon\n    const navItems =\n        [['Home',\n            'Homepage with instructions',\n            <HomeIcon key='0' />],\n        ['PairAlign',\n            'Align a pair of sequences',\n            <Icon key='1'><img src={DnaIcon} alt=\"PairAlign Icon\" /></Icon>],\n        ['MSA',\n            'Align multiple sequences',\n            <span key='2'> <Icon><img src={DnaIcon} alt=\"MSA Icon\" /></Icon>\n                <Icon><img src={DnaIcon} alt=\"MSA Icon\" /></Icon></span>],\n        ['Alignment Game',\n            'Test your skill on detecting alignments',\n            <SportsEsportsIcon key='3' />]];\n\n    return (\n        <div>\n            <div className={classes.toolbar} />\n            <Divider />\n            <List>\n                {navItems.map((item, index) => (\n                    <ListItem\n                        // currently selected nav manu has a different styling\n                        className={`${classes.navItem} ${index === currentMode ?\n                            classes.navItemSelected : null}`}\n                        button key={item[0]} onClick={() => {\n                            dispatch(setMode(index));\n                            props.closeDrawer();\n                        }}>\n                        <ListItemIcon>{item[2]}</ListItemIcon>\n                        <ListItemText\n                            primary={item[0]}\n                            primaryTypographyProps={{variant: 'h6'}}\n                            secondary={item[1]} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <div style={{textAlign: 'center', marginTop: 3}}>\n            <FormControlLabel\n                control={\n                    <Switch\n                        checked={themeSelectorValue}\n                        onChange={onThemeChange}\n                        name=\"themeValue\"\n                        color=\"primary\"\n                    />\n                }\n                label=\"Dark Mode\"\n            />\n            </div>\n        </div>\n    );\n}\n\nDrawerList.propTypes = {\n    closeDrawer: PropTypes.func,\n};\n","export const setP1Input = (input)=>{\n    return {\n        type: 'SET_P1',\n        payload: input,\n    };\n};\n\nexport const setP1Range = (input)=>{\n    return {\n        type: 'SET_P1_RANGE',\n        payload: input,\n    };\n};\n\nexport const setP1Name = (input)=>{\n    return {\n        type: 'SET_P1_NAME',\n        payload: input,\n    };\n};\n\n\nexport const setP2Input = (input)=>{\n    return {\n        type: 'SET_P2',\n        payload: input,\n    };\n};\n\nexport const setP2Range = (input)=>{\n    return {\n        type: 'SET_P2_RANGE',\n        payload: input,\n    };\n};\n\nexport const setP2Name = (input)=>{\n    return {\n        type: 'SET_P2_NAME',\n        payload: input,\n    };\n};\n\nexport const setPAlgo = (algo)=>{\n    return {\n        type: 'SET_P_ALGO',\n        payload: algo,\n    };\n};\n","\n\nexport const parseFASTA = function(raw) {\n    return new Promise((resolve, reject) => {\n        if (raw.charAt(0)!=='>') {\n            resolve({description: '', sequence: '', status: false});\n            return;\n        }\n        raw = raw.trim();\n        const splitted = raw.split('\\n');\n        if (splitted.length<2) {\n            resolve({description: '', sequence: '', status: false});\n            return;\n        }\n        const description = splitted.shift().slice(1).trim();\n        const sequence = splitted.join('').replace(\n            /(\\r\\n|\\n|\\r)/gm, '').trim().toUpperCase();\n\n        const pattern = /^[A-Za-z]+$/;\n        const testStatus = sequence.match(pattern);\n\n        if (testStatus) {\n            resolve({description, sequence, status: true});\n            return;\n        } else {\n            resolve({description: '', sequence: '', status: false});\n        }\n    });\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Tooltip} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\nimport {parseFASTA} from '../../util/FASTA';\n\n/**\n * Component to upload .txt files in FASTA format\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function FileUpload(props) {\n    let fileReader;\n    const dispatch = useDispatch();\n\n\n    const handleFileRead = async (e) => {\n        const content = fileReader.result;\n        // validate for FASTA format\n        const parsedData = await parseFASTA(content);\n\n        if (props.type === 'MSA') {\n            dispatch(props.inputHandler(parsedData.sequence, props.MSAkey));\n            dispatch(props.nameInputHandler(parsedData.description,\n                props.MSAkey));\n        } else {\n            dispatch(props.inputHandler(parsedData.sequence));\n            dispatch(props.nameInputHandler(parsedData.description));\n        }\n    };\n\n    const handleError = (error) => {\n        fileReader.abort();\n        console.log(error);\n    };\n\n    const handleFileChosen = (file) => {\n        if (file) {\n            fileReader = new FileReader();\n            fileReader.onerror = handleError;\n            fileReader.onloadend = handleFileRead;\n            const extension = file.name.split('.').pop().toLowerCase();\n            // check for .txt file type\n            if (extension === 'txt') {\n                fileReader.readAsText(file);\n            } else {\n                console.log('invalid file type');\n            }\n        }\n    };\n\n    return <div className='upload-expense'>\n        <Tooltip\n            title=\".txt file in single sequence FASTA format\"\n            interactive arrow>\n            <Button variant=\"contained\" color=\"primary\"\n                component=\"label\" size=\"small\">\n                Upload Text File\n            <input type='file'\n                    id='file'\n                    className='input-file'\n                    accept='.txt'\n                    onChange={(e) => handleFileChosen(e.target.files[0])}\n                    style={{display: 'none'}}\n                />\n            </Button>\n        </Tooltip>\n    </div>;\n};\n\n// refer <CommonInput/> component for details\nFileUpload.propTypes = {\n    type: PropTypes.string,\n    inputHandler: PropTypes.func,\n    nameInputHandler: PropTypes.func,\n    MSAkey: PropTypes.number,\n};\n","export default function validateSequence(sequence, type) {\n    if (sequence ==='') {\n        return true;\n    }\n    let pattern;\n    if (type==='DNA') {\n        pattern = /^[AGCTagct]+$/;\n    } else {\n        pattern = /^[ABCDEFGHIKLMNPQRSTVWXYZabcdefghiklmnpqrstvwxyz]+$/;\n    }\n\n    const testStatus = sequence.match(pattern);\n    if (testStatus) {\n        return true;\n    } else {\n        return false;\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport {useDispatch, useSelector} from 'react-redux';\nimport validateSequence from '../../Validators/sequence';\n\n/**\n * Component to input the sequence as a text input\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function TextInput(props) {\n    const dispatch = useDispatch();\n\n    /**\n     * genome type is needed to validate the sequence\n     */\n    const genomeType = useSelector((state) => state.genomeType);\n    const [errorStatus, seterrorStatus] = useState(false);\n\n    /**\n     * validate again when genome type is changed\n     */\n    useEffect(() => {\n        seterrorStatus(!validateSequence(props.value, genomeType));\n    }, [genomeType, props.value]);\n\n    const DNAseq = props.value;\n\n    const onInputChange = (event) => {\n        seterrorStatus(\n            !validateSequence(event.target.value.trim(), genomeType));\n        if (props.type === 'MSA') {\n            dispatch(props.inputHandler(\n                event.target.value.trim().toUpperCase(),\n                props.MSAkey));\n        } else {\n            dispatch(props.inputHandler(\n                event.target.value.trim().trim().toUpperCase()));\n        }\n    };\n    return (\n\n        <div>\n            <TextField\n            fullWidth\n                multiline\n                rowsMax={4}\n                placeholder='Type your genome sequence'\n                label='Type your genome sequence'\n                value={DNAseq}\n                onChange={onInputChange}\n                error = {errorStatus}\n                helperText={errorStatus ?\n                    `Invalid ${genomeType} sequence` : null}\n                inputProps={{spellCheck: 'false'}}>\n\n            </TextField>\n        </div>\n    );\n}\n\n// refer <CommonInput/> for details\nTextInput.propTypes = {\n    type: PropTypes.string,\n    inputHandler: PropTypes.func,\n    MSAkey: PropTypes.number,\n    value: PropTypes.string,\n};\n","export const fetchPost = async (url, data, cb)=>{\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    };\n    fetch(url, options)\n    .then(async (res) => {\n        if (res.status === 200) {\n            const jsonRes = await res.clone().json();\n            cb({error: undefined, response: jsonRes});\n        } else {\n            cb({error: res.status});\n        }\n    }).catch((err) => {\n        cb({error: -1});\n    });\n};\n\nexport const fetchGet = async (url, qParams, cb) =>{\n    if (qParams.length >0) {\n        url = url.concat('?');\n        qParams.forEach((e) => {\n            url = url.concat(`${e[0]}=${e[1]}&`);\n        });\n        url = url.slice(0, -1);\n    }\n    const options = {\n        method: 'GET',\n\n    };\n    fetch(url, options)\n    .then(async (res) => {\n        if (res.status === 200) {\n            const jsonRes = await res.clone().json();\n            cb({error: undefined, response: jsonRes});\n        } else {\n            cb({error: res.status});\n        }\n    }).catch((err) => {\n        cb({error: -1});\n    });\n};\n","import {fetchGet} from '../util/fetch';\n\n\nexport const fetchGenomeById = async function(id, callback) {\n    // const url = 'https://api.genome.ucsc.edu/list/ucscGenomes';\n    const url = `https://rest.ensembl.org/sequence/id/${id}`;\n    const qParams = [['content-type', 'application/json']];\n    // function onSuccess(jsonResp) {\n    //     callback({id: jsonResp.id, seq: jsonResp.seq});\n    // }\n    await fetchGet(url, qParams, callback);\n};\n","export const setSnackBar = (message)=>{\n    return {\n        type: 'SET_SNACKBAR_MESSAGE',\n        payload: {message},\n    };\n};\n\nexport const closeSnackbar = ()=>{\n    return {\n        type: 'CLOSE_SNACKBAR',\n        payload: {},\n    };\n};\n","import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {Button, Typography, Tooltip} from '@material-ui/core';\nimport {fetchGenomeById} from '../../GenomeAPI/GenomeAPI';\nimport {useDispatch} from 'react-redux';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport {setSnackBar} from '../../Redux/Actions/Snackbar';\n\nimport PropTypes from 'prop-types';\n\n/**\n * Component to fetch sequence from Ensemble.org\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function APIinput(props) {\n    const dispatch = useDispatch();\n    /**\n     * user input sequence id value\n     */\n    const [inputValue, setinputValue] = useState('ENSG00000248378');\n\n    /**\n     * loading status while fetching data to diaplyed circular progress icon\n     */\n    const [loading, setloading] = useState(false);\n    const [error, seterror] = useState(false);\n\n    /**\n     *\n     * @param {Object} data - data from API\n     * @param {Number} data.error - HTTP status code if error occured\n     * @param {Object} data.response - JSON response from API\n     * @param {String} data.response.seq - sequence string\n     */\n    const onReceiveData = (data) => {\n        setloading(false);\n        if (data.error === undefined) {\n            if (props.type === 'MSA') {\n                dispatch(props.inputHandler(\n                    data.response.seq.trim().toUpperCase(),\n                    props.MSAkey));\n            } else {\n                dispatch(props.inputHandler(\n                    data.response.seq.trim().toUpperCase()));\n            }\n            seterror(false);\n        } else if (data.error === 400) {\n            seterror(true);\n        } else {\n            seterror(false);\n            dispatch(setSnackBar(\n                'Importing data from API failed. Try again later'));\n        }\n    };\n\n    const onInputChange = (e) => {\n        seterror(false);\n        setinputValue(e.target.value);\n    };\n\n    const onClickSearchButton = () => {\n        setloading(true);\n        fetchGenomeById(inputValue, onReceiveData);\n    };\n\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item>\n                    <TextField\n                        label=\"Ensembl id\"\n                        variant=\"outlined\"\n                        value={inputValue}\n                        disabled={loading}\n                        error={error}\n                        helperText={error ? 'Could not find id' : null}\n                        onChange={onInputChange} />\n                </Grid>\n                <Grid item>\n                    <div style={{marginLeft: 3, width: 170}}>\n                        {loading ? <CircularProgress thickness={5} /> :\n                            <Tooltip\n                            title={\n                            <>Search sequence id in  &nbsp;\n                                <a href=\"https://www.ensembl.org/\"\n                                target=\"_blank\" rel=\"noopener noreferrer\"\n                                style={{color: 'white'}}>\n                                    ensembl.org\n                                </a>\n                                &nbsp; genome browser\n                            </>\n                            }\n                            interactive arrow>\n                            <Button onClick={onClickSearchButton}>\n                                <Typography variant='button'>\n                                Search in Ensembl Database\n                                </Typography>\n                            </Button>\n                            </Tooltip>\n                        }\n                    </div>\n                </Grid>\n            </Grid>\n\n\n        </div>\n    );\n}\n\nAPIinput.propTypes = {\n    inputHandler: PropTypes.func,\n    type: PropTypes.string,\n    MSAkey: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Input from '@material-ui/core/Input';\nimport {Grid, Tooltip} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n        marginLeft: '50%',\n        marginTop: 20,\n\n    },\n    input: {\n        width: 50,\n    },\n});\n\n/**\n * Helper function for Slider component\n * @param {Number} value - slider value\n * @return {String} value converted to string type\n */\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n/**\n * Component to display range slider to select a range from sequence\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function RangeSelector(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    // const [value, setValue] = React.useState([1, 1000]);\n    const rangeValues = props.range;\n\n    const handleChange = (event, newValue) => {\n        if (props.type === 'MSA') {\n            dispatch(props.rangeInputHandler(newValue,\n                props.MSAkey));\n        } else {\n            dispatch(props.rangeInputHandler(newValue));\n        }\n    };\n\n\n    const getInputHandler = (index) => {\n        return (event) => {\n            const val = event.target.value === '' ? '' :\n                Number(event.target.value);\n            const newArr = [...rangeValues];\n            newArr[index] = val;\n            if (props.type === 'MSA') {\n                dispatch(props.rangeInputHandler(newArr,\n                    props.MSAkey));\n            } else {\n                dispatch(props.rangeInputHandler(newArr));\n            }\n        };\n    };\n\n    return (\n        <div className={classes.root}>\n            <Tooltip\n                title=\"Select a segment from the sequence\"\n                placement=\"right\"\n                interactive arrow>\n                <b>\n                    Select required range in the sequence\n                </b>\n            </Tooltip>\n\n            <Slider\n                value={rangeValues}\n                min={Math.min(1, props.sequenceLength)}\n                max={props.sequenceLength}\n                step={1}\n                onChange={handleChange}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n            />\n            <Grid container spacing={5} align=\"center\"\n                justify=\"center\"\n                alignItems=\"center\">\n                <Grid item>\n                    Left\n                    <br />\n                    <Input\n\n                        className={classes.input}\n                        value={rangeValues[0]}\n                        label=\"Left\"\n                        onChange={getInputHandler(0)}\n                        // onBlur={handleBlur}\n                        inputProps={{\n                            'min': Math.min(1, props.sequenceLength),\n                            'max': props.sequenceLength,\n                            'type': 'number',\n                            'aria-labelledby': 'input-slider',\n                        }}\n                    />\n                </Grid>\n                <Grid item>\n                    Right\n                    <br />\n                    <Input\n\n                        className={classes.input}\n                        value={rangeValues[1]}\n                        label=\"Right\"\n                        onChange={getInputHandler(1)}\n                        // onBlur={handleBlur}\n                        inputProps={{\n                            'min': Math.min(1, props.sequenceLength),\n                            'max': props.sequenceLength,\n                            'type': 'number',\n                            'aria-labelledby': 'input-slider',\n                        }}\n                    />\n                </Grid>\n            </Grid>\n\n\n        </div>\n    );\n}\n\n\nRangeSelector.propTypes = {\n    sequenceLength: PropTypes.number,\n    rangeInputHandler: PropTypes.func,\n    MSAkey: PropTypes.number,\n    type: PropTypes.string,\n    range: PropTypes.arrayOf(PropTypes.number),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport {useDispatch} from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n    input: {\n        width: 300,\n    },\n}));\n\n\n/**\n * Component to input a name for the input sequence\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function NameInput(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const sequenceName = props.sequenceName;\n\n    const onInputChange = (event) => {\n        if (props.type === 'MSA') {\n            dispatch(props.nameInputHandler(event.target.value.trim(),\n                props.MSAkey));\n        } else {\n            dispatch(props.nameInputHandler(event.target.value.trim()));\n        }\n    };\n\n\n    return (\n        <div>\n            <TextField\n                className={classes.input}\n                label=\"Give a unique name for the sequence\"\n                value={sequenceName}\n                onChange={onInputChange}\n            />\n\n        </div>\n    );\n}\n\n// refer <CommonInput/> for details\nNameInput.propTypes = {\n    sequenceName: PropTypes.string,\n    nameInputHandler: PropTypes.func,\n    MSAkey: PropTypes.number,\n    type: PropTypes.string,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileUpload from '../CommonInput/FileUpload';\nimport TextInput from '../CommonInput/TextInput';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport {IconButton, Grid, Tooltip, Divider} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\nimport APIinput from './APIinput';\nimport RangeSelector from './RangeSelector';\nimport NameInput from './NameInput';\n\n/**\n * Wrapper component to display sequence input section.\n * Contains file upload, fetching sequence from Ensembl API, text input\n * , range selector and name input for sequence.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function CommonInput(props) {\n    const dispatch = useDispatch();\n\n    /**\n     * removing the input section\n     * (for MSA only)\n     */\n    const onclickCancelButton = () => {\n        dispatch(props.closeHandler(props.MSAkey));\n    };\n\n    const cancelButton = props.type === 'MSA' ?\n        <Tooltip\n            title=\"Remove this sequence\"\n            interactive arrow\n            placement='right'>\n            <IconButton\n                onClick={onclickCancelButton}\n                testid='MSASeqCloseButton'>\n                <HighlightOffIcon color=\"error\" />\n            </IconButton>\n        </Tooltip> : '';\n\n\n    return (\n        <div>\n\n            <h3>{props.title} {cancelButton}</h3>\n            <Divider\n            variant='fullWidth'\n            style={{height: 2, color: 'black'}}/>\n            <br/>\n            <div style={{marginBottom: 30}}>\n                {/* name input */}\n                <NameInput\n                nameInputHandler={props.nameInputHandler}\n                MSAkey={props.MSAkey}\n                type={props.type}\n                sequenceName={props.sequenceName}\n                />\n            </div>\n\n            <Grid\n                container\n                spacing={6}\n                justify=\"center\"\n                alignItems=\"center\"\n            >\n                <Grid item>\n                    <FileUpload\n                        inputHandler={props.inputHandler}\n                        nameInputHandler={props.nameInputHandler}\n                        MSAkey={props.MSAkey}\n\n                        value={props.value}\n                        type={props.type} />\n                </Grid>\n                <b>or</b>\n                <Grid item>\n                    <APIinput\n                        inputHandler={props.inputHandler}\n                        MSAkey={props.MSAkey}\n\n                        type={props.type} />\n                </Grid>\n                <b>or</b>\n                <Grid item xs={6}>\n                    <TextInput\n                        inputHandler={props.inputHandler}\n                        MSAkey={props.MSAkey}\n                        value={props.value}\n                        type={props.type} />\n                </Grid>\n            </Grid>\n            <div style={{textAlign: 'center'}}>\n                <RangeSelector\n                rangeInputHandler={props.rangeInputHandler}\n                MSAkey={props.MSAkey}\n                range={props.range}\n                type={props.type}\n                sequenceLength={props.value.length}\n                />\n            </div>\n\n\n        </div>\n    );\n}\n/**\n * Since this component is reused to input several sequences in both pairalign\n * and MSA mode, dispatch functions for redux store and current value\n * fetched from redux-store should be dynamic. They are passed as props.\n * These props are passed to subsequent child components\n */\n\nCommonInput.propTypes = {\n    /**\n     * functions to dispatch for each attribute change\n     */\n    inputHandler: PropTypes.func,\n    rangeInputHandler: PropTypes.func,\n    nameInputHandler: PropTypes.func,\n    closeHandler: PropTypes.func,\n    title: PropTypes.string,\n\n    /**\n     * identify which MSA sequence\n     */\n    MSAkey: PropTypes.number,\n    value: PropTypes.string,\n\n    /**\n     * identify pairalign or MSA sequence\n     */\n    type: PropTypes.string,\n    sequenceName: PropTypes.string,\n    range: PropTypes.arrayOf(PropTypes.number),\n};\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setPAlgo} from '../../Redux/Actions/PairAlign';\n\n/**\n * Component to select PairAlign algorithm\n * @return {React.ReactElement}\n */\nexport default function AlgoSelector() {\n    const dispatch = useDispatch();\n\n    /**\n     * Callback function when radio button group value changed\n     * @param {Object} event - event for radio button group change\n     * @param {String} event.target.value - new value for radio button group\n     */\n    const handleChange = (event)=>{\n        dispatch(setPAlgo(event.target.value));\n    };\n\n    const value = useSelector((state) => state.pAlgo);\n    return (\n        <div>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Select Algorithm</FormLabel>\n            <RadioGroup aria-label=\"algorithm\"\n                value={value} name='algorithm' onChange={handleChange}>\n                <FormControlLabel\n                    value='GLOBAL'\n                    control={<Radio />}\n                    label=\"Needleman Wunsch\" />\n                <FormControlLabel\n                    value='LOCAL'\n                    control={<Radio />}\n                    label=\"Smith Waterman\" />\n\n            </RadioGroup>\n            </FormControl>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport {useSelector, useDispatch} from 'react-redux';\n\n/**\n * Component to input an integer value.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function NumberInput(props) {\n    const dispatch = useDispatch();\n    // current value from redux store\n    const ms = useSelector((state) => state[props.inputSelector]);\n\n    const [errorStatus, setErrorStatus] = React.useState(false);\n\n    const onInputChange = (event) => {\n        const val = Math.floor(Number(event.target.value));\n        if (val) {\n            // accepting positive numbers\n            if (props.acceptedType === '1') {\n                if (val > 0) {\n                    dispatch(props.inputHandler(val));\n                    setErrorStatus(false);\n                } else {\n                    dispatch(props.inputHandler(event.target.value));\n                    setErrorStatus(true);\n                }\n            } else if (props.acceptedType === '-1') {\n                // accepting negative numbers\n                if (val < 0) {\n                    dispatch(props.inputHandler(val));\n                    setErrorStatus(false);\n                } else {\n                    dispatch(props.inputHandler(event.target.value));\n                    setErrorStatus(true);\n                }\n            }\n        } else {\n            dispatch(props.inputHandler(event.target.value));\n            setErrorStatus(true);\n        }\n    };\n\n    return (\n\n        <div>\n            <TextField\n                error={errorStatus}\n                label={props.label}\n                value={ms}\n                helperText={errorStatus ? props.helperText : ''}\n                variant=\"outlined\"\n                type=\"number\"\n                onChange={onInputChange}\n            />\n        </div>\n    );\n}\n\nNumberInput.propTypes = {\n    inputSelector: PropTypes.string,\n    inputHandler: PropTypes.func,\n\n    /**\n     * '1' for positive integer acceptance\n     * '-1' for negative integer acceptance\n     */\n    acceptedType: PropTypes.string,\n    label: PropTypes.string,\n    helperText: PropTypes.string,\n};\n","export const setMatchScore = (input)=>{\n    return {\n        type: 'SET_MATCH',\n        payload: input,\n    };\n};\n\nexport const setMisMatchPenalty = (input)=>{\n    return {\n        type: 'SET_MISMATCH',\n        payload: input,\n    };\n};\n\n\nexport const setGapPenalty = (input)=>{\n    return {\n        type: 'SET_GAP',\n        payload: input,\n    };\n};\n\nexport const setGapOpenPenalty = (input)=>{\n    return {\n        type: 'SET_GAP_OPEN',\n        payload: input,\n    };\n};\n\nexport const setGapExtendPenalty = (input)=>{\n    return {\n        type: 'SET_GAP_EXTEND',\n        payload: input,\n    };\n};\n\nexport const setScoringMethod = (input)=>{\n    return {\n        type: 'SET_SCORING_METHOD',\n        payload: input,\n    };\n};\n\nexport const setTracebackPriority = (input)=>{\n    return {\n        type: 'SET_TRACEBACK_PRIORITY',\n        payload: input,\n    };\n};\n\nexport const setSimilarityMatrixName = (input)=>{\n    return {\n        type: 'SET_SIMILARITY_MATRIX_NAME',\n        payload: input,\n    };\n};\n\nexport const editDNASimilarityMatrix = (identifier, value)=>{\n    return {\n        type: 'EDIT_DNA_SIMILARIY_MATRIX',\n        payload: {identifier, value},\n    };\n};\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport NumberInput from './NumberInput';\nimport {\n    setMatchScore, setMisMatchPenalty,\n    setGapPenalty,\n} from '../../Redux/Actions/Score';\n\n/**\n * Wrapper component to display basic score schema input\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function CommonScore(props) {\n    return (\n        <div>\n\n            <Grid container direction=\"row\" spacing={3}>\n                <Grid item>\n                    {/* match score input */}\n                    <NumberInput\n                        inputHandler={setMatchScore}\n                        inputSelector=\"matchScore\"\n                        label=\"Match Score\"\n                        helperText=\"Must be a positive integer\"\n                        acceptedType='1' />\n                </Grid>\n                <Grid item>\n                    {/* mismatch penalty input */}\n                    <NumberInput\n                        inputHandler={setMisMatchPenalty}\n                        inputSelector=\"mismatchPenalty\"\n                        label=\"Mismatch Penalty\"\n                        helperText=\"Must be a negative integer\"\n                        acceptedType='-1' />\n                </Grid>\n\n                <Grid item>\n                    {/* gap penalty input */}\n                    <NumberInput\n                        inputHandler={setGapPenalty}\n                        inputSelector=\"gapPenalty\"\n                        label=\"Gap Penalty\"\n                        helperText=\"Must be a negative integer\"\n                        acceptedType='-1' />\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setTracebackPriority} from '../../Redux/Actions/Score';\n\n/**\n * Component to select between LOWROAD and HIGHROAD traceback priorities\n * Contains 2 radio buttons.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      minWidth: 200,\n    },\n}));\n\nexport default function TracebackPrioritySelector() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        dispatch(setTracebackPriority(event.target.value));\n    };\n\n    const value = useSelector((state) => state.tracebackPriority);\n    return (\n        <div>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"priority-select-input-label\">\n                    Select Traceback Priority\n                </InputLabel>\n                <Select\n                    labelId=\"priority-select-input-label\"\n                    id=\"priority-select-input\"\n                    value={value}\n                    onChange={handleChange}\n                    label='Select Traceback Priority'\n                >\n                    <MenuItem value={'LOWROAD'}>Low road</MenuItem>\n                    <MenuItem value={'HIGHROAD'}>High road</MenuItem>\n                </Select>\n            </FormControl>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {Box, TextField} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {editDNASimilarityMatrix} from '../../Redux/Actions/Score';\n\nconst bases = ['A', 'G', 'C', 'T'];\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        width: 200,\n        height: 200,\n        margin: '0 auto',\n    },\n    cell: {\n        borderWidth: 1,\n        borderStyle: 'solid',\n        minWidth: 50,\n    },\n}));\n\n/**\n * Function to get the id of each cell in similarity matrix\n * @param {String} a - DNA base in the row of the cell\n * @param {String} b - DNA base in the column of the cell\n * @return {String} a and b parameters concatenated in revese alphabetic order\n */\nconst getIdentifier = function(a, b) {\n    if (a < b) {\n        return b.concat(a);\n    } else {\n        return a.concat(b);\n    }\n};\n\n/**\n * Component to input similarity matrix for DNA algorithms\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function DNAMatrixInput() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const matrix = useSelector((state) => state.DNASimilarityMatrix);\n\n    const onChange = (e) => {\n        const val = Math.floor(Number(e.target.value));\n        if (Number.isInteger(val)) {\n            dispatch(editDNASimilarityMatrix(e.target.id, val));\n        } else {\n            dispatch(editDNASimilarityMatrix(e.target.id, e.target.value));\n        }\n    };\n\n    const tableBody = [];\n    for (let i = 0; i < bases.length + 1; i++) {\n        const row = [];\n        for (let j = 0; j < bases.length + 1; j++) {\n            const key = `${i}${j}`;\n            // i=0, j=0 denotes header cells\n            // header cells contain symbol of base\n            if (i === 0 && j === 0) {\n                row.push(<th key={key} className={classes.cell}>...</th>);\n            } else if (i === 0) {\n                row.push(\n                    <th key={key} className={classes.cell}>{bases[j - 1]}</th>);\n            } else if (j === 0) {\n                row.push(\n                    <th key={key} className={classes.cell}>{bases[i - 1]}</th>);\n            } else {\n                const identifier = getIdentifier(bases[i - 1], bases[j - 1]);\n                // textfield input for each cell\n                row.push(\n                    <td key={key} className={classes.cell}>\n                        <TextField\n                            id={identifier}\n                            size=\"small\"\n                            type='number'\n                            onChange={onChange}\n                            value={matrix[identifier]}\n                        />\n                    </td>,\n                );\n            }\n        }\n        tableBody.push(<tr key={i}>{row}</tr>);\n    }\n\n    return (\n        <div>\n            <Box alignContent='center' alignItems='center'>\n                <table className={classes.table}>\n                    <tbody>\n                        {tableBody}\n                    </tbody>\n                </table>\n            </Box>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setSimilarityMatrixName} from '../../Redux/Actions/Score';\nimport DNAMatrixInput from './DNAMatrixInput';\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 250,\n    },\n}));\n\n/**\n * Component to input similarity matrix type\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function SimilarityMatrixInput() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const handleMatrixNameChange = (event) => {\n        dispatch(setSimilarityMatrixName(event.target.value));\n    };\n    const matrixName = useSelector((state) => state.similarityMatrixName);\n\n    const genomeType = useSelector((state) => state.genomeType);\n\n    // default type is telling backend to choose match score, mismatch penalty\n    // as similarity scores\n\n    const proteinMatrices = ['BLOSUM30', 'BLOSUM45',\n        'BLOSUM50', 'BLOSUM60', 'BLOSUM90'];\n    const menuItems = [];\n    menuItems.push(<MenuItem key={'DEFAULT'}\n        value={'DEFAULT'}>Default</MenuItem>);\n    if (genomeType === 'DNA') {\n        menuItems.push(<MenuItem key={'CUSTOM'}\n            value={'CUSTOM'}>Custom</MenuItem>);\n    } else if (genomeType === 'PROTEIN') {\n        proteinMatrices.forEach((matrixName) => {\n            menuItems.push(\n                <MenuItem key={matrixName}\n                    value={matrixName}>{matrixName}</MenuItem>,\n            );\n        });\n    }\n    const helperText = matrixName === 'DEFAULT' ? null :\n        <> *Note that this matrix will override <br />\n    above match score and mismatch penalty</>;\n    return (\n        <div>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"similarity-matrix-name-input-label\">\n                    Select Similarity Matrix Type\n                </InputLabel>\n                <Select\n                    labelId=\"similarity-matrix-name-input-label\"\n                    id=\"similarity-matrix-name-input\"\n                    value={matrixName}\n                    onChange={handleMatrixNameChange}\n                    label='Select Similarity Matrix Type'\n                >\n                    {menuItems}\n                </Select>\n                <FormHelperText>{helperText}</FormHelperText>\n            </FormControl>\n            {/* DNA similarity matrix input is only displayed when genomeType\n            is DNA and similarity matrix type is CUSTOM */}\n            {genomeType === 'DNA' && matrixName === 'CUSTOM' ?\n                <DNAMatrixInput /> : null}\n\n        </div>\n    );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport NumberInput from './NumberInput';\nimport {\n    setMatchScore, setMisMatchPenalty,\n    setGapExtendPenalty, setGapOpenPenalty,\n} from '../../Redux/Actions/Score';\nimport TracebackPrioritySelector from './TracebackPrioritySelector';\nimport SimilarityMatrixInput from './SimilarityMatrixInput';\n\n/**\n * Component to display extended score schema input.\n * Contains match score, mismatch penalty, gap open score,\n * gap extend score, traceback priority selector,\n * custom similarity matrix input selector\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function CommonExtendedScore(props) {\n    return (\n        <div>\n            <Grid container direction='column' spacing={4}>\n                <Grid item container direction=\"row\" spacing={3}>\n                    <Grid item>\n                        <NumberInput\n                            inputHandler={setMatchScore}\n                            inputSelector=\"matchScore\"\n                            label=\"Match Score\"\n                            helperText=\"Must be a positive integer\"\n                            acceptedType='1' />\n                    </Grid>\n                    <Grid item>\n                        <NumberInput\n                            inputHandler={setMisMatchPenalty}\n                            inputSelector=\"mismatchPenalty\"\n                            label=\"Mismatch Penalty\"\n                            helperText=\"Must be a negative integer\"\n                            acceptedType='-1' />\n                    </Grid>\n\n                    <Grid item>\n                        <NumberInput\n                            inputHandler={setGapOpenPenalty}\n                            inputSelector=\"gapOpenPenalty\"\n                            label=\"Gap Open Penalty\"\n                            helperText=\"Must be a negative integer\"\n                            acceptedType='-1' />\n                    </Grid>\n\n                    <Grid item>\n                        <NumberInput\n                            inputHandler={setGapExtendPenalty}\n                            inputSelector=\"gapExtendPenalty\"\n                            label=\"Gap Extend Penalty\"\n                            helperText=\"Must be a negative integer\"\n                            acceptedType='-1' />\n                    </Grid>\n                    <Grid item>\n                        <TracebackPrioritySelector />\n                    </Grid>\n\n                </Grid>\n                <Grid item>\n                    <SimilarityMatrixInput />\n                </Grid>\n            </Grid>\n\n\n        </div>\n    );\n}\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setScoringMethod} from '../../Redux/Actions/Score';\n\n/**\n * Component to select between basic and extended scoring methods.\n * Contains 2 radio buttons.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function ScoringMethodSelector() {\n    const dispatch = useDispatch();\n\n    const handleChange = (event)=>{\n        dispatch(setScoringMethod(event.target.value));\n    };\n\n    const value = useSelector((state) => state.scoringMethod);\n    return (\n        <div>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Select Scoring Method</FormLabel>\n            <RadioGroup aria-label=\"scoring-method\"\n                value={value} name='scoring-method' onChange={handleChange}>\n                <FormControlLabel\n                    value='BASIC' control={<Radio />} label=\"Basic\" />\n                <FormControlLabel\n                    value='EXTENDED' control={<Radio />} label=\"Extended\" />\n\n            </RadioGroup>\n            </FormControl>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport CommonScore from './ScoreSchema';\nimport CommonExtendedScore from './ExtendedScoreSchema';\nimport {Grid} from '@material-ui/core';\nimport ScoringMethodSelector from './ScoringMethodSelector';\n\n/**\n * Wrapper component for score schema input.\n * Includes a selector to select between basic and extended score methods\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function Score() {\n    const scoringMethod = useSelector((state) => state.scoringMethod);\n    const scoreInput = scoringMethod === 'BASIC' ? <CommonScore /> :\n        <CommonExtendedScore />;\n    return (\n        <div>\n            <Grid container direction='column' spacing={2}>\n                <Grid item>\n                    <ScoringMethodSelector />\n                </Grid>\n                <Grid item>\n                    {scoreInput}\n                </Grid>\n            </Grid>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {setP1Input, setP2Input,\n    setP1Range, setP2Range,\n    setP1Name, setP2Name} from '../../Redux/Actions/PairAlign';\nimport CommonInput from '../CommonInput/CommonInput';\nimport Grid from '@material-ui/core/Grid';\nimport {useSelector} from 'react-redux';\nimport AlgoSelector from './AlgoSelector';\nimport Score from '../CommonScoreSchema/Score';\nimport {Box} from '@material-ui/core';\n\n/**\n * Wrapper component for the input section of PairAlign mode.\n * Contains 2 sequence input sections, algorithm selector and score schema input\n * @return {React.ReactElement}\n */\nexport default function PairAlignInput() {\n    return (\n        <div>\n            <Grid container direction=\"column\" spacing={3}>\n                <Grid >\n                    <Box boxShadow={3} padding={5}>\n                        <CommonInput inputHandler={setP1Input}\n                            rangeInputHandler={setP1Range}\n                            nameInputHandler={setP1Name}\n                            value={useSelector((state) => state.P1.seq)}\n                            range={useSelector((state) => state.P1.range)}\n                            sequenceName={useSelector((state) => state.P1.name)}\n                            title=\"Input Sequence 1 for Pair Wise Alignment\"\n                            type=\"PA\" />\n                    </Box>\n                </Grid>\n                <Grid >\n                    <Box boxShadow={3} padding={5}>\n                        <CommonInput inputHandler={setP2Input}\n                            rangeInputHandler={setP2Range}\n                            nameInputHandler={setP2Name}\n                            value={useSelector((state) => state.P2.seq)}\n                            range={useSelector((state) => state.P2.range)}\n                            sequenceName={useSelector((state) => state.P2.name)}\n                            title=\"Input Sequence 2 for Pair Wise Alignment\"\n                            type=\"PA\" />\n                    </Box>\n                </Grid>\n                <Grid item>\n                    <Box boxShadow={3} padding={5}>\n                        <AlgoSelector />\n                    </Box>\n                </Grid>\n                <Grid item>\n                    <Box boxShadow={3} padding={5}>\n                        <Score />\n                    </Box>\n                </Grid>\n\n\n            </Grid>\n\n\n        </div>\n    );\n}\n","export const apiHost = process.env.NODE_ENV === 'production' ? 'https://bioviz-api.herokuapp.com' : 'http://localhost:5000';\nexport const LEFT = 1;\nexport const DIAGONAL = 2;\nexport const UP = 3;\n","import {fetchPost} from '../util/fetch';\nimport {apiHost} from '../config/config';\n\n\nfunction pairAign(algorithm = 1) {\n    const url = algorithm === 1 ? apiHost + '/pair/nw' : apiHost + '/pair/sw';\n    return (\n        async (seqA, seqB, match, mismatch, gap, callback) => {\n            const data = {match, mismatch, gap};\n            data.seq_a = seqA;\n            data.seq_b = seqB;\n            await fetchPost(url, data, callback);\n        }\n    );\n}\n\nfunction pairAignExtended(algorithm = 1) {\n    const url = algorithm === 1 ? apiHost + '/pair/nw-affine' :\n        apiHost + '/pair/sw-affine';\n    return (\n        async (seqA, seqB, match, mismatch, openGap, extendGap,\n            priority, genomeType, matrixName, DNAmatrix, callback) => {\n            const data = {match, mismatch, priority};\n            data.seq_a = seqA;\n            data.seq_b = seqB;\n            data.opening_gap = openGap;\n            data.extending_gap = extendGap;\n            data.seq_type = genomeType;\n            if (genomeType === 'PROTEIN') {\n                data.sub_mat = matrixName;\n            } else {\n                if (matrixName === 'DEFAULT') {\n                    data.sub_mat = 'DEFAULT';\n                } else {\n                    data.sub_mat = DNAmatrix;\n                }\n            }\n            await fetchPost(url, data, callback);\n        }\n    );\n}\n\nexport const fetchNW = pairAign(1);\nexport const fetchNWExtended = pairAignExtended(1);\n\nexport const fetchSW = pairAign(2);\nexport const fetchSWExtended = pairAignExtended(2);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Avatar} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {FixedSizeList} from 'react-window';\nimport genomeStyles from '../../styles/GenomeStyles.module.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        height: '20px',\n        width: '20px',\n        fontSize: '12px',\n\n    },\n    // A: {\n    //     color: 'white',\n    //     backgroundColor: 'red',\n    // },\n    // C: {\n    //     color: 'white',\n    //     backgroundColor: 'blue',\n    // },\n    // G: {\n    //     color: 'white',\n    //     backgroundColor: 'purple',\n    // },\n    // T: {\n    //     color: 'white',\n    //     backgroundColor: 'green',\n    // },\n    // ga: {\n    //     color: 'black',\n    //     backgroundColor: 'black',\n    // },\n    emptyRow: {\n        height: '25px',\n        textAlign: 'center',\n    },\n\n}));\n\n\n/**\n * Component to display the alignment result of PairAlign.\n * Displays different colors for each DNA/Protein base\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function PairAlignAlignment(props) {\n    const classes = useStyles();\n    const algnA = props.alignment.algn_a;\n    const algnB = props.alignment.algn_b;\n    const totalLen = algnA.length;\n\n\n    /**\n     * function to create a pair of bases for alignment visualization.\n     * @param {Object} param\n     * @param {Number} param.index - index of the base pair\n     * @return {React.ReactElement}\n     */\n    const makeSegment = ({index, style}) => {\n        /**\n         * style class is chosen according to the character\n         */\n        const classA = algnA.charAt(index) === '-' ? 'gap' :\n            props.genomeType.concat('-', algnA.charAt(index).toUpperCase());\n        const classB = algnB.charAt(index) === '-' ? 'gap' :\n            props.genomeType.concat('-', algnB.charAt(index).toUpperCase());\n\n        const upper = <Avatar variant=\"square\"\n            className={`${classes.avatar} ${genomeStyles['genome-base']}\n             ${genomeStyles[classA]}`}>\n            {algnA.charAt(index)}</Avatar>;\n\n\n        const lower = <Avatar variant=\"square\"\n            className={`${classes.avatar} ${genomeStyles['genome-base']}\n             ${genomeStyles[classB]}`}>\n            {algnB.charAt(index)}</Avatar>;\n\n        const middle = (algnA.charAt(index) === algnB.charAt(index) &&\n            algnA.charAt(index) !== '-') ? '\\u007C' : '';\n\n        return (\n            <div style={style}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {upper}\n                            </td>\n                        </tr>\n                        <tr className={classes.emptyRow}>\n                            <td><b>{middle}</b></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                {lower}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n\n\n            </div>\n        );\n    };\n    makeSegment.propTypes = {\n        index: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n\n    return (\n        <div>\n            <FixedSizeList\n                height={100}\n                itemCount={totalLen}\n                itemSize={20}\n                layout=\"horizontal\"\n                width={Math.min(500, 20 * totalLen)}\n            >\n                {makeSegment}\n            </FixedSizeList>\n        </div>\n    );\n}\n\nPairAlignAlignment.propTypes = {\n    genomeType: PropTypes.string,\n    alignment: PropTypes.shape({\n        algn_a: PropTypes.string,\n        algn_b: PropTypes.string,\n    }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {LEFT, DIAGONAL, UP} from '../../../config/config';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import {Button} from '@material-ui/core';\n// import {makeStyles} from '@material-ui/core/styles';\n\n\n// const useStyles = makeStyles((theme) => ({\n\n//     customWidth: {\n//         maxWidth: 'none',\n//     },\n\n// }));\n\n/**\n * Function to create matrix cell component.\n * (in basic scoring method)\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function Cell(props) {\n    /**\n     * Arrow symbols in unicode notation\n     */\n    const left = props.directions.indexOf(LEFT) >= 0 ? '\\u2190' :\n        '\\u00A0\\u00A0';\n    const diagonal = props.directions.indexOf(DIAGONAL) >= 0 ? '\\u2196' :\n        '\\u00A0\\u00A0';\n    const up = props.directions.indexOf(UP) >= 0 ? '\\u2191' :\n        '\\u00A0\\u00A0';\n    return (\n        <div>\n            <table>\n                <tbody>\n                    <tr>\n                        <td>{diagonal}</td>\n                        <td>{up}</td>\n                    </tr>\n                    <tr>\n                        <td>{left}</td>\n                        <td>{props.value}</td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n    );\n}\n\nCell.propTypes = {\n    value: PropTypes.number,\n    directions: PropTypes.arrayOf(PropTypes.number),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function HeaderCell(props) {\n    return (\n        <div>\n            {props.index}\n            <br/>\n             {props.value}\n        </div>\n    );\n}\n\nHeaderCell.propTypes = {\n    value: PropTypes.string,\n    index: PropTypes.number,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function LeftHeaderCell(props) {\n    return (\n        <div>\n            {props.index} {props.value}\n        </div>\n    );\n}\n\nLeftHeaderCell.propTypes = {\n    value: PropTypes.string,\n    index: PropTypes.number,\n};\n\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport Cell from './Cell';\nimport HeaderCell from './HeaderCell';\nimport {FixedSizeGrid} from 'react-window';\nimport {makeStyles} from '@material-ui/core/styles';\nimport LeftHeaderCell from './LeftHeaderCell';\nimport {Grid} from '@material-ui/core';\n\n\nconst useStyles = makeStyles((theme) => ({\n    cell: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        verticalAlign: 'middle',\n        borderWidth: 1,\n        borderStyle: 'solid',\n\n    },\n    headerCell: {\n        backgroundColor: '#0000FF30',\n    },\n    inpath: {\n        backgroundColor: 'lightgreen',\n    },\n    /**\n     * Making scroll bars small for better usability\n     */\n    hideScroll: {\n        '&::-webkit-scrollbar': {\n            width: '0.2em',\n            height: '0.2em',\n        },\n        '&::-webkit-scrollbar-button': {\n            background: '#aaa',\n        },\n        '&::-webkit-scrollbar-track-piece': {\n            background: '#000',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            background: '#fff',\n        },\n    },\n    matrix: {\n        borderWidth: 1,\n        borderStyle: 'solid',\n        padding: 10,\n    },\n}));\n\nconst cellSize = 40;\n\n/**\n * Component to display DP matrix for basic scoring method (without affine gaps)\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function Matrix(props) {\n    /**\n     * Ref s are used to synchronize matrix scrolling with\n     * header rows and header columns\n     */\n    const headerRef = React.createRef();\n    const leftHeaderRef = React.createRef();\n    const gridRef = React.createRef();\n\n    const classes = useStyles();\n\n    const inputLenA = props.input.seqA.length;\n    const inputLenB = props.input.seqB.length;\n    const scoreMatrix = props.result.score_matrix;\n    const directionMatrix = props.result.direction_matrix;\n    const path = props.result.alignments.length>0 ?\n        props.result.alignments[props.selected].path : [];\n    const pathSet = new Set();\n\n    /**\n     * [i, j] pairs in path array is converted to strings\n     * for fast lookup using a Set data type\n     */\n    path.forEach((p) => {\n        pathSet.add(`${p[0]}${p[1]}${p[0] * p[1]}`);\n    });\n\n    /**\n     * During initial rendering, scroll to the begining\n     * of the path in the matrix\n     */\n    const scrollToPath = () => {\n        if (path.length > 0) {\n            gridRef.current.scrollToItem({\n                align: 'center',\n                columnIndex: path[path.length - 1][1],\n                rowIndex: path[path.length - 1][0],\n            });\n        }\n    };\n    useEffect(() => {\n        scrollToPath();\n    });\n\n    /**\n     * Function to create a header cell\n     * @param {Object} param\n     * @param {Number} param.columnIndex - column index of cell\n     * @return {React.ReactElement}\n     */\n    const makeHeaderCell = ({columnIndex, style}) => {\n        const cIdx = columnIndex;\n        const headerCell = cIdx === 0 ? 'Seq. 2' :\n            <HeaderCell value={props.input.seqB[cIdx - 1]} index={cIdx} />;\n        return (\n            <div style={style}\n                className={`${classes.cell} ${classes.headerCell}`}>\n                {headerCell}\n            </div>\n        );\n    };\n    makeHeaderCell.propTypes = {\n        columnIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n\n    /**\n     * Function to create a left header cell\n     * @param {Object} param\n     * @param {Number} param.rowIndex - row index of cell\n     * @return {React.ReactElement}\n     */\n    const makeLeftHeaderCell = ({rowIndex, style}) => {\n        const rIdx = rowIndex;\n        const leftHeaderCell = rIdx === 0 ? 'Seq. 1' :\n            <LeftHeaderCell value={props.input.seqA[rIdx - 1]} index={rIdx} />;\n        return (\n            <div style={style}\n                className={`${classes.cell} ${classes.headerCell}`}>\n                {leftHeaderCell}\n            </div>\n        );\n    };\n    makeLeftHeaderCell.propTypes = {\n        rowIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n\n    /**\n     * Function to create a cell in matrix\n     * @param {Object} param\n     * @param {Number} param.columnIndex - column index of cell\n     * @param {Number} param.rowIndex - row index of cell\n     * @return {React.ReactElement}\n     */\n    const makeCell = ({columnIndex, rowIndex, style}) => {\n        const cIdx = columnIndex;\n        const rIdx = rowIndex;\n\n\n        const cell = <Cell\n            value={scoreMatrix[rIdx][cIdx]}\n            directions={directionMatrix[rIdx][cIdx]} />;\n\n        /**\n         * Check the current cell is included in path\n         */\n        const inPath = pathSet.has(\n            `${rIdx}${cIdx}${(rIdx) * (cIdx)}`,\n        );\n\n\n        return (\n            <div style={style} onClick={() => {\n                props.onClickCell(rIdx, cIdx);\n            }}\n                className={`${classes.cell} ${inPath ? classes.inpath : ''}`}>\n                {cell}\n            </div>\n        );\n    };\n\n    makeCell.propTypes = {\n        columnIndex: PropTypes.number.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n    return (\n        <div className={classes.matrix}>\n            <Grid container direction=\"row\" spacing={1} align=\"center\"\n                justify=\"center\"\n                alignItems=\"center\">\n                <Grid item>\n                    <div style={{height: cellSize}}>&nbsp;</div>\n                    <br />\n                    <FixedSizeGrid\n                        className=\"Grid\"\n                        columnCount={1}\n                        columnWidth={cellSize}\n                        height={300}\n                        rowCount={inputLenA + 1}\n                        rowHeight={cellSize}\n                        width={cellSize}\n                        ref={leftHeaderRef}\n                        style={{\n                            overflowX: 'hidden',\n                            overflowY: 'hidden',\n                        }}\n                    >\n\n                        {makeLeftHeaderCell}\n                    </FixedSizeGrid>\n                </Grid>\n                <Grid item>\n                    <FixedSizeGrid\n                        className=\"Grid\"\n                        columnCount={inputLenB + 1}\n                        columnWidth={cellSize}\n                        height={cellSize}\n                        rowCount={1}\n                        rowHeight={cellSize}\n                        width={300}\n                        ref={headerRef}\n                        style={{\n                            overflowX: 'hidden',\n                            overflowY: 'hidden',\n                        }}\n\n                    >\n                        {makeHeaderCell}\n                    </FixedSizeGrid>\n                    <br />\n\n                    <FixedSizeGrid\n                        className={classes.hideScroll}\n                        columnCount={inputLenB + 1}\n                        columnWidth={cellSize}\n                        height={300}\n                        rowCount={inputLenA + 1}\n                        rowHeight={cellSize}\n                        width={300}\n                        ref={gridRef}\n                        /**\n                         * Synchronize matrix scrolling with\n                         * header row and header column\n                         */\n                        onScroll={({scrollLeft, scrollTop}) => {\n                            headerRef.current.scrollTo({scrollLeft});\n                            leftHeaderRef.current.scrollTo({scrollTop});\n                        }\n                        }\n\n                    >\n                        {makeCell}\n                    </FixedSizeGrid>\n\n                </Grid>\n            </Grid>\n\n        </div>\n\n    );\n}\nMatrix.defaultProps = {\n    onClickCell: () => { },\n};\n\nMatrix.propTypes = {\n    input: PropTypes.shape({\n        seqA: PropTypes.string,\n        seqB: PropTypes.string,\n    }),\n    result: PropTypes.shape({\n        score_matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n        direction_matrix: PropTypes.arrayOf(\n            PropTypes.arrayOf(\n                PropTypes.arrayOf(PropTypes.number))),\n        alignments: PropTypes.arrayOf(\n            PropTypes.shape({\n                path: PropTypes.arrayOf(\n                    PropTypes.arrayOf(PropTypes.number)),\n            })),\n    }),\n    selected: PropTypes.number,\n    onClickCell: PropTypes.func,\n};\n\n","export const getTracebackAlignment = (seqA, seqB, starting, directionPath)=>{\n    let alignA='';\n    let alignB='';\n    const current = [...starting];\n    directionPath.forEach((element) => {\n        if (element === 'UP') {\n            alignA = seqA.charAt(current[0]-1).concat(alignA);\n            alignB = '-'.concat(alignB);\n            current[0]--;\n        } else if (element === 'LEFT') {\n            alignA = '-'.concat(alignA);\n            alignB = seqB.charAt(current[1]-1).concat(alignB);\n            current[1]--;\n        } else if (element === 'DIAG') {\n            alignA = seqA.charAt(current[0]-1).concat(alignA);\n            alignB = seqB.charAt(current[1]-1).concat(alignB);\n            current[0]--;\n            current[1]--;\n        }\n    });\n    return {algn_a: alignA, algn_b: alignB};\n};\n","import React, {useState} from 'react';\nimport Matrix from './Matrix/Matrix';\nimport PairAlignAlignment from './PairAlignAlignment';\nimport {getTracebackAlignment} from '../../util/traceback';\nimport {Grid, Button, Divider} from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\n/**\n * Component to show interactive clickable DP matrix.\n * Cells can be clicked to show a desired path.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function PlayableResut(props) {\n    /**\n     * storing modified path in new variable because\n     * original result object should not be changed\n     */\n    const initialModifiedResult = {};\n\n    initialModifiedResult.score_matrix = props.result.score_matrix;\n    initialModifiedResult.direction_matrix = props.result.direction_matrix;\n    initialModifiedResult.alignments = [{path: []}];\n    const [modifiedResult, setmodifiedResult] = useState(initialModifiedResult);\n\n    /**\n     * stores direction path\n     * ex: ['LEFT','UP','DIAG']\n     */\n    const [directionPath, setdirectionPath] = useState([]);\n\n    const addToDirectionPath = (direction) => {\n        const newDirPath = directionPath.concat([direction]);\n        setdirectionPath(newDirPath);\n        console.log(newDirPath);\n    };\n\n    const removeFromDirectionPath = () => {\n        const newDirPath = directionPath;\n        newDirPath.pop();\n        setdirectionPath(newDirPath);\n        console.log(newDirPath);\n    };\n\n    const resetAllPath = () => {\n        setdirectionPath([]);\n        const r = modifiedResult;\n        r.alignments[0].path = [];\n        setmodifiedResult({...r});\n    };\n\n    const addToPath = (rIdx, cIdx) => {\n        console.log('adding to path');\n        const r = modifiedResult;\n        const newPath = (r.alignments[0].path).concat([[rIdx, cIdx]]);\n        r.alignments[0].path = newPath;\n        setmodifiedResult({...r});\n    };\n\n    const removeFromPath = () => {\n        console.log('removing from path');\n        const r = modifiedResult;\n        r.alignments[0].path.pop();\n        setmodifiedResult({...r});\n    };\n\n\n    /**\n     * Callback function when cell is clicked\n     * @param {Number} rIdx  - row index of clicked cell\n     * @param {Number} cIdx  - column indec of clicked cell\n     */\n    const editPath = (rIdx, cIdx) => {\n        const path = modifiedResult.alignments[0].path;\n\n        console.log('ineditpath');\n        if (path.length === 0) {\n            addToPath(rIdx, cIdx);\n            return;\n        }\n        const lastItem = path[path.length - 1];\n        if (lastItem[0] === rIdx && lastItem[1] === cIdx) {\n            removeFromPath();\n            removeFromDirectionPath();\n            return;\n        }\n        const inputLenA = props.input.seqA.length;\n        const inputLenB = props.input.seqB.length;\n\n        if (rIdx === inputLenA && cIdx === inputLenB && path.length === 0) {\n            addToPath(rIdx, cIdx);\n            return;\n        }\n        const hasBelowCellInPath = lastItem[1] === cIdx &&\n            lastItem[0] === (rIdx + 1);\n        const hasRightCellInPath = lastItem[0] === rIdx &&\n            lastItem[1] === (cIdx + 1);\n        const hasDiagCellInPath = lastItem[0] === (rIdx + 1) &&\n            lastItem[1] === (cIdx + 1);\n        if (rIdx === inputLenA && hasRightCellInPath) {\n            addToDirectionPath('LEFT');\n            addToPath(rIdx, cIdx);\n            return;\n        }\n        if (cIdx === inputLenB && hasBelowCellInPath) {\n            addToPath(rIdx, cIdx);\n            addToDirectionPath('UP');\n            return;\n        }\n        if (hasBelowCellInPath || hasDiagCellInPath || hasRightCellInPath) {\n            if (hasBelowCellInPath) {\n                addToDirectionPath('UP');\n            } else if (hasDiagCellInPath) {\n                addToDirectionPath('DIAG');\n            } else {\n                addToDirectionPath('LEFT');\n            }\n            addToPath(rIdx, cIdx);\n\n            return;\n        }\n    };\n\n    /**\n     * Changing displayed alignment according to the new path\n     */\n    let alignment = null;\n    if (directionPath.length > 0 &&\n        modifiedResult.alignments[0].path.length > 0) {\n        const path = [...modifiedResult.alignments[0].path];\n        alignment = <PairAlignAlignment\n            genomeType={props.input.genomeType}\n            alignment={getTracebackAlignment(props.input.seqA,\n                props.input.seqB,\n                path[0],\n                directionPath)} />;\n    } else {\n        alignment = null;\n    }\n\n\n    return (\n        <div style={{marginTop: 30}}>\n            <Divider />\n            <h3>Try your own path in DP matrix</h3>\n            <Grid align=\"center\"\n                justify=\"center\"\n                container spacing={2}>\n                <Grid item>\n                    Select your own path.\n                    <br />\n                    Click on a cell to add to / remove from path\n                    <br />\n                    <br />\n                    <Matrix\n                        input={props.input}\n                        result={modifiedResult}\n                        selected={0}\n                        onClickCell={editPath} />\n                    <br />\n                    <Button onClick={resetAllPath}>Reset Your Path</Button>\n                </Grid>\n                <Divider\n                    orientation=\"vertical\"\n                    flexItem\n                    style={{marginLeft: 20}} />\n                <Grid item xs={6}>\n                    <h4>Generated alignment will appear here</h4>\n                    <br />\n                    {alignment}\n                </Grid>\n            </Grid>\n\n\n        </div>\n    );\n}\n\n\nPlayableResut.propTypes = {\n    input: PropTypes.shape({\n        seqA: PropTypes.string,\n        seqB: PropTypes.string,\n        genomeType: PropTypes.string,\n    }),\n    result: PropTypes.shape({\n        score_matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n        direction_matrix: PropTypes.arrayOf(\n            PropTypes.arrayOf(\n                PropTypes.arrayOf(PropTypes.number))),\n        alignments: PropTypes.arrayOf(\n            PropTypes.shape({\n                path: PropTypes.arrayOf(\n                    PropTypes.arrayOf(PropTypes.number)),\n            })),\n    }),\n\n};\n","import React, {Component, Fragment} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\nimport {Button} from '@material-ui/core';\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        width: '90%',\n        height: '90%',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2),\n    },\n    wrapped: {\n        wordWrap: 'break-word',\n    },\n    printableComponent: {\n        overflowY: 'auto',\n        height: '90%',\n        padding: theme.spacing(2),\n\n    },\n    line: {\n        width: '100%',\n        textAlign: 'left',\n        marginLeft: 0,\n    },\n});\n\nconst DNAbases = ['A', 'G', 'C', 'T'];\n\n/**\n * Class component to display PairAlign report\n */\nclass PairAlignReport extends Component {\n    constructor(props) {\n        super(props);\n        this.downloadTxtFile = this.downloadTxtFile.bind(this);\n        this.sequences = [this.props.input.seqA, this.props.input.seqB];\n        this.sequenceNames = [this.props.input.seqAname,\n            this.props.input.seqBname];\n    }\n\n    /**\n     * Displays a prompt to download the content of the component\n     * as a text file\n     */\n    downloadTxtFile() {\n        const element = document.createElement('a');\n        const file = new Blob(\n            [document.getElementById('printable-component').innerText],\n            {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = 'report.txt';\n        document.body.appendChild(element);\n        element.click();\n    }\n\n\n    render() {\n        const {classes} = this.props;\n        const date = new Date();\n        const dateStr = date.getFullYear() + '-' +\n            (date.getMonth() + 1) + '-' +\n            date.getDate() + ' ' +\n            date.getHours() + ':' +\n            date.getMinutes() + ':' +\n            date.getSeconds();\n\n        const inputSequences = this.sequences.map((seq, index) => {\n            return <Fragment key={index}>\n                <br />{`>${this.sequenceNames[index]}`}<br />{seq}<br />\n            </Fragment>;\n        });\n        const line = <hr className={classes.line} />;\n        let scores;\n        if (this.props.input.scoringMethod === 'BASIC') {\n            scores = <>\n                Match Score : {this.props.input.match}<br />\n        Mismatch Penalty : {this.props.input.mismatch}<br />\n        Gap Penalty : {this.props.input.gap}<br />\n            </>;\n        } else {\n            scores = <>\n                Match Score : {this.props.input.match}<br />\n        Mismatch Penalty : {this.props.input.mismatch}<br />\n        Gap Open Penalty : {this.props.input.gapOpen}<br />\n        Gap Extend Penalty : {this.props.input.gapExtend}<br />\n            </>;\n        }\n\n        let DNASimilarityScores = null;\n\n        /**\n         * Displaying DNA similarity matrix for each pair of bases\n         */\n        if (this.props.input.genomeType === 'DNA' &&\n            this.props.input.similarityMatrixName === 'CUSTOM' &&\n            this.props.input.scoringMethod === 'EXTENDED') {\n            DNASimilarityScores = [];\n            DNAbases.forEach((base1) => {\n                DNAbases.forEach((base2) => {\n                    const pair = base1.concat(base2);\n                    if (this.props.input.DNASimilarityMatrix.hasOwnProperty(\n                        pair)) {\n                        DNASimilarityScores.push(\n                            <Fragment key={pair}>\n                                {pair} : {\n                                    this.props.input.DNASimilarityMatrix[pair]}\n                                <br />\n                            </Fragment>);\n                    }\n                });\n            });\n        }\n\n\n        const alignmets = this.props.result.alignments.map((element, index) => {\n            return <Fragment key={index}><br />Alignment {index + 1}<br />\n                {`>${this.sequenceNames[0]}`}<br />\n                {element.algn_a}<br />\n                {`>${this.sequenceNames[1]}`}<br />\n                {element.algn_b}<br />\n                {`Identity : ${element.identity}`}<br />\n                <br />\n            </Fragment>;\n        });\n\n\n        return (\n            <div className={classes.paper} tabIndex={-1}>\n                <Button variant='outlined'\n                    onClick={this.downloadTxtFile}>\n                    Download as a text file\n                </Button>\n                <div\n                    id='printable-component'\n                    className={classes.printableComponent}>\n                    Report created with BioViz\n                <br />\n            on {dateStr}\n                    <br />\n                    {line}\n                    <br />\n            InputSequences\n                <div className={classes.wrapped}>\n                        {inputSequences}\n                    </div>\n                    {line}\n                    <br />\n            Scoring method : {this.props.input.scoringMethod}\n                    <br />\n                    <div>\n                        {scores}\n                    </div>\n                    <br />\n            Similarity Matrix : {this.props.input.similarityMatrixName}\n                    <br />\n                    {DNASimilarityScores}\n                    <br />\n                    {line}\n                    <br />\n\n            Alignments\n                <div>\n                        {alignmets}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nPairAlignReport.propTypes = {\n    classes: PropTypes.object,\n    result: PropTypes.shape({\n        alignments: PropTypes.arrayOf(\n            PropTypes.shape({\n                algn_a: PropTypes.string,\n                algn_b: PropTypes.string,\n            }),\n        ),\n    }),\n    input: PropTypes.shape({\n        scoringMethod: PropTypes.string,\n        similarityMatrixName: PropTypes.string,\n        genomeType: PropTypes.string,\n        seqA: PropTypes.string,\n        seqAname: PropTypes.string,\n        seqB: PropTypes.string,\n        seqBname: PropTypes.string,\n        match: PropTypes.number,\n        mismatch: PropTypes.number,\n        gap: PropTypes.number,\n        gapOpen: PropTypes.number,\n        gapExtend: PropTypes.number,\n        DNASimilarityMatrix: (props, propName, componentName) => {\n            const keys = Object.keys(props[propName]);\n            for (let index = 0; index < keys.length; index++) {\n                if (!(DNAbases.includes(keys[index][0]) &&\n                        DNAbases.includes(keys[index][1]))) {\n                    return new Error(\n                        'Invalid key `' + keys[index] + '` supplied to ' +\n                        '`' + componentName +\n                        '`; expected to match with two characters in' +\n                        DNAbases + '.',\n                    );\n                }\n            }\n        },\n    }),\n};\nexport default withStyles(useStyles)(PairAlignReport);\n","import React, {Fragment} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n/**\n * In JSON response from backend matrices are denoted by\n * M -> 0\n * I1 -> 1\n * I2 -> 2\n */\nconst matrixIds = ['M', 'I\\u2081', 'I\\u2082'];\n\n/**\n * Unicode values for arrows\n */\nconst arrows = ['\\u2190', '\\u2196', '\\u2191'];\n\n\nconst colors = ['#00000030', '#00000060', '#00000075'];\nconst inPathColor = '#00FF0040';\n\nconst useStyles = makeStyles((theme) => ({\n    zeroPadding: {\n        '& tr': {\n            '& td': {\n                padding: 0,\n            },\n        },\n\n    },\n    table: {\n        '& tbody': {\n            '& tr': {\n\n                borderWidth: 1,\n                borderStyle: 'dashed',\n\n            },\n        },\n\n        'width': '100%',\n        'height': '100%',\n        'borderSpacing': 0,\n    },\n}));\n\n\n/**\n * Function to create matrix cell component.\n * (in extended scoring method)\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function ExtendedCell(props) {\n    const classes = useStyles();\n    const cellData = [];\n\n    /**\n     * Looping for all 3 matrices in a particular cell\n     */\n    for (let index = 0; index < 3; index++) {\n        let directionArrow = '';\n        let directionMatrices = [];\n        if (props.directions[index].length > 0) {\n            if (props.directions[index][0] !== 0) {\n                directionArrow = arrows[props.directions[index][0][1] - 1];\n                directionMatrices = props.directions[index].map((element) => {\n                    return matrixIds[element[0]];\n                });\n            }\n        }\n\n        /**\n         * Rendering symbol for infinity\n         */\n        if (props.scores[index] === '-inf') {\n            props.scores[index] = '-\\u221E';\n        }\n\n        /**\n         * determining which part in the cell is in the path\n         */\n        const bgColor = index === props.inPathSegment ?\n            inPathColor : colors[index];\n\n        /**\n         * For matrix M, do not show direction arrows or direction matrices\n         * as there can be more than 4\n         * space is not enough\n         */\n        if (index===0) {\n            directionArrow = '';\n            directionMatrices=[];\n        }\n\n\n        const cell = (\n            <Fragment key={index}>\n                <tr\n                    style={{\n                        height: props.cellSize / 2,\n                        backgroundColor: bgColor,\n                    }}\n                >\n                    <td\n                        style={{\n                            width: props.cellSize,\n                            borderRight: 'thin dashed',\n                        }}\n                    >\n                        {directionArrow}\n                    </td>\n                    <td\n                        rowSpan=\"2\"\n                        style={{width: props.cellSize * 2, fontSize: 18}}>\n                        <b>\n                            {`${matrixIds[index]} : ${props.scores[index]}`}\n                        </b>\n                    </td>\n                </tr>\n                <tr\n                    style={{\n                        height: props.cellSize / 2,\n                        backgroundColor: bgColor,\n                    }}\n                >\n                    <td\n                        style={{\n                            width: props.cellSize,\n                            borderRight: 'thin dashed',\n                        }}\n                    >\n                        {directionMatrices.join(' ')}\n                    </td>\n                </tr>\n            </Fragment>\n\n        );\n\n\n        cellData.push(cell);\n    }\n    return (\n        <div style={{width: props.cellSize * 3, height: props.cellSize * 3}}>\n            <table className={classes.table}>\n                <tbody className={classes.zeroPadding}>\n                    {cellData}\n                </tbody>\n            </table>\n\n        </div>\n    );\n}\n\nExtendedCell.propTypes = {\n    cellSize: PropTypes.number,\n    inPathSegment: PropTypes.number,\n    scores: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.number, PropTypes.string,\n        ]),\n    ),\n    directions: PropTypes.arrayOf(\n        PropTypes.arrayOf(\n            PropTypes.oneOfType(\n                [\n                    PropTypes.number,\n                    PropTypes.arrayOf(PropTypes.number),\n                ],\n            ),\n        ),\n    ),\n};\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport HeaderCell from './HeaderCell';\nimport {FixedSizeGrid} from 'react-window';\nimport {makeStyles} from '@material-ui/core/styles';\nimport LeftHeaderCell from './LeftHeaderCell';\nimport {Grid} from '@material-ui/core';\nimport ExtendedCell from './ExtendedCell';\n\n\nconst useStyles = makeStyles((theme) => ({\n    cell: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        verticalAlign: 'middle',\n        borderWidth: 2,\n        borderStyle: 'solid',\n    },\n    inpath: {\n        backgroundColor: 'lightgreen',\n    },\n    /**\n     * making scrollbars smaller for better usability\n     */\n    hideScroll: {\n        '&::-webkit-scrollbar': {\n            width: '0.5em',\n            height: '0.5em',\n        },\n        '&::-webkit-scrollbar-button': {\n            background: '#aaa',\n        },\n        '&::-webkit-scrollbar-track-piece': {\n            background: '#000',\n        },\n        '&::-webkit-scrollbar-thumb': {\n            background: '#fff',\n        },\n    },\n    matrix: {\n        borderWidth: 1,\n        borderStyle: 'solid',\n        padding: 10,\n    },\n}));\n\nconst cellSize = 40;\nconst matrixSize = 400;\n\n/**\n * Component to display DP matrix for extended scoring method (with affine gaps)\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function ExtendedMatrix(props) {\n    /**\n     * Ref s are used to synchronize matrix scrolling with\n     * header rows and header columns\n     */\n    const headerRef = React.createRef();\n    const leftHeaderRef = React.createRef();\n    const gridRef = React.createRef();\n\n    const classes = useStyles();\n\n    const inputLenA = props.input.seqA.length;\n    const inputLenB = props.input.seqB.length;\n    const scoreMatrix = props.result.score_matrix;\n    const directionMatrix = props.result.direction_matrix;\n    const path = props.result.alignments.length>0 ?\n        props.result.alignments[props.selected].path : [];\n    const pathSet = new Set();\n\n    /**\n     * convering path array to a set of string elements for faster lookups\n     */\n    path.forEach((p) => {\n        pathSet.add(`${p[0]}|${p[1]}|${p[2]}`);\n    });\n\n    /**\n     * During initial rendering, scroll to the begining\n     * of the path in the matrix\n     */\n    const scrollToPath = () => {\n        if (path.length > 0) {\n            gridRef.current.scrollToItem({\n                align: 'center',\n                columnIndex: path[path.length - 1][1],\n                rowIndex: path[path.length - 1][0],\n            });\n        }\n    };\n    useEffect(() => {\n        scrollToPath();\n    });\n\n    /**\n     * Function to create a header cell\n     * @param {Object} param\n     * @param {Number} param.columnIndex - column index of cell\n     * @return {React.ReactElement}\n     */\n    const makeHeaderCell = ({columnIndex, style}) => {\n        const cIdx = columnIndex;\n        const headerCell = cIdx === 0 ? 'Seq. 2' :\n            <HeaderCell value={props.input.seqB[cIdx - 1]} index={cIdx} />;\n        return (\n            <div style={style} className={classes.cell}>\n                {headerCell}\n            </div>\n        );\n    };\n    makeHeaderCell.propTypes = {\n        columnIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n\n    /**\n     * Function to create a left header cell\n     * @param {Object} param\n     * @param {Number} param.rowIndex - row index of cell\n     * @return {React.ReactElement}\n     */\n    const makeLeftHeaderCell = ({rowIndex, style}) => {\n        const rIdx = rowIndex;\n        const leftHeaderCell = rIdx === 0 ? 'Seq. 1' :\n            <LeftHeaderCell value={props.input.seqA[rIdx - 1]} index={rIdx} />;\n        return (\n            <div style={style} className={classes.cell}>\n                {leftHeaderCell}\n            </div>\n        );\n    };\n    makeLeftHeaderCell.propTypes = {\n        rowIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n\n    /**\n     * Function to create a cell in matrix\n     * @param {Object} param\n     * @param {Number} param.columnIndex - column index of cell\n     * @param {Number} param.rowIndex - row index of cell\n     * @return {React.ReactElement}\n     */\n    const makeCell = ({columnIndex, rowIndex, style}) => {\n        const cIdx = columnIndex;\n        const rIdx = rowIndex;\n        let inPathSegment;\n        for (let index = 0; index < 3; index++) {\n            if (pathSet.has(`${rIdx}|${cIdx}|${index}`)) {\n                inPathSegment = index;\n                break;\n            }\n        }\n\n\n        const cell = <ExtendedCell\n            scores={scoreMatrix[rIdx][cIdx]}\n            directions={directionMatrix[rIdx][cIdx]}\n            cellSize={cellSize}\n            inPathSegment={inPathSegment}/>;\n\n\n        return (\n            <div style={style}\n                className={`${classes.cell}`}>\n                {cell}\n            </div>\n        );\n    };\n\n    makeCell.propTypes = {\n        columnIndex: PropTypes.number.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n    return (\n        <div className={classes.matrix}>\n            <Grid container direction=\"row\" spacing={1} align=\"center\"\n                justify=\"center\"\n                alignItems=\"center\">\n                <Grid item>\n                    <div style={{height: cellSize}}>&nbsp;</div>\n                    <br />\n                    <FixedSizeGrid\n                        className=\"Grid\"\n                        columnCount={1}\n                        columnWidth={cellSize}\n                        height={matrixSize}\n                        rowCount={inputLenA + 1}\n                        rowHeight={cellSize*3}\n                        width={cellSize}\n                        ref={leftHeaderRef}\n                        style={{\n                            overflowX: 'hidden',\n                            overflowY: 'hidden',\n                        }}\n                    >\n\n                        {makeLeftHeaderCell}\n                    </FixedSizeGrid>\n                </Grid>\n                <Grid item>\n                    <FixedSizeGrid\n                        className=\"Grid\"\n                        columnCount={inputLenB + 1}\n                        columnWidth={cellSize*3}\n                        height={cellSize}\n                        rowCount={1}\n                        rowHeight={cellSize}\n                        width={matrixSize}\n                        ref={headerRef}\n                        style={{\n                            overflowX: 'hidden',\n                            overflowY: 'hidden',\n                        }}\n\n                    >\n                        {makeHeaderCell}\n                    </FixedSizeGrid>\n                    <br />\n\n                    <FixedSizeGrid\n                        className={classes.hideScroll}\n                        columnCount={inputLenB + 1}\n                        columnWidth={cellSize*3}\n                        height={matrixSize}\n                        rowCount={inputLenA + 1}\n                        rowHeight={cellSize*3}\n                        width={matrixSize}\n                        ref={gridRef}\n                        /**\n                         * synchronizing scorlling of matrix and\n                         * header rows, header columns\n                         */\n                        onScroll={({scrollLeft, scrollTop}) => {\n                            headerRef.current.scrollTo({scrollLeft});\n                            leftHeaderRef.current.scrollTo({scrollTop});\n                        }\n                        }\n\n                    >\n                        {makeCell}\n                    </FixedSizeGrid>\n\n                </Grid>\n            </Grid>\n\n        </div>\n\n    );\n}\n\n\nExtendedMatrix.propTypes = {\n    input: PropTypes.shape({\n        seqA: PropTypes.string,\n        seqB: PropTypes.string,\n    }),\n    result: PropTypes.shape({\n        score_matrix: PropTypes.arrayOf(PropTypes.arrayOf(\n            PropTypes.arrayOf(PropTypes.oneOfType(\n                [PropTypes.number, PropTypes.string])))),\n        direction_matrix: PropTypes.arrayOf(\n            PropTypes.arrayOf(\n                PropTypes.arrayOf(PropTypes.number))),\n        alignments: PropTypes.arrayOf(\n            PropTypes.shape({\n                path: PropTypes.arrayOf(\n                    PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number))),\n            })),\n    }),\n    selected: PropTypes.number,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport PairAlignAlignment from './PairAlignAlignment';\nimport Matrix from './Matrix/Matrix';\nimport {Grid, IconButton, Divider, Tooltip} from '@material-ui/core';\nimport PlayableResut from './PlayableResut';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport PairAlignReport from './PairAlignReport';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExtendedMatrix from './Matrix/ExtendedMatrix';\n\n\nconst useStyles = makeStyles((theme) => ({\n    reportModal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    directionArrow: {\n        backgroundColor: '#0000FF30',\n    },\n}));\n\n/**\n * Wrapper component to display results of PairAlign\n * @param {Object} props\n * @return {React.ReactElement}\n */\nexport default function PairAlignResult(props) {\n    const classes = useStyles();\n    const max = props.result.alignments.length;\n\n\n    /**\n     * ref is used to automatically scroll to this section\n     * when the results are fetched\n     */\n    const divRef = React.useRef(null);\n    React.useEffect(() => {\n        divRef.current.scrollIntoView({behavior: 'smooth'});\n    }, [props.result]);\n\n\n    /**\n     * Currently selected alignmment\n     *\n     * Used when cycling through different alignments in\n     * Smith Waterman Algorithm\n     */\n    const [selectedAlignment, setselectedAlignment] = React.useState(0);\n\n\n    /**\n     * Open status of modal of final report\n     */\n    const [reportOpen, setReportOpen] = React.useState(false);\n\n\n    const alignments = props.result.alignments.length > 0 ? [\n        <PairAlignAlignment\n            alignment={props.result.alignments[selectedAlignment]}\n            index={selectedAlignment}\n            key={selectedAlignment}\n            genomeType={props.input.genomeType}\n        />,\n    ] : <h4>Could not find alignments according\n        to the provided scoring schema</h4>;\n\n    /**\n     * on click to show next alignment\n     */\n    const onNext = () => {\n        setselectedAlignment((selectedAlignment + 1) % max);\n    };\n\n\n    /**\n     * on click to show previous alignment\n     */\n    const onPrevious = () => {\n        setselectedAlignment(\n            selectedAlignment - 1 === -1 ? max - 1 : selectedAlignment - 1,\n        );\n    };\n\n    const handleReportOpen = () => {\n        setReportOpen(true);\n    };\n\n    const handleReportClose = () => {\n        setReportOpen(false);\n    };\n\n    let matrix;\n    let playableResult;\n\n\n    /**\n     * Selecting relevant matrix depending on the scoring method\n     */\n    if (props.input.scoringMethod === 'BASIC') {\n        matrix = <Matrix input={props.input}\n            result={props.result}\n            selected={selectedAlignment} />;\n        playableResult = <PlayableResut input={props.input}\n            result={props.result} />;\n    } else {\n        matrix = <ExtendedMatrix\n            input={props.input}\n            result={props.result}\n            selected={selectedAlignment}\n        />;\n        playableResult = null;\n    }\n\n    return (\n        <div ref={divRef}>\n            <h2>PariAlign Result</h2>\n            <Grid container direction='row' spacing={2}>\n                <Grid item xs={12} lg={4}>\n                    <Tooltip\n                        title=\"Dynamic Programming matrix\n                        used to calculate the score\"\n                        interactive arrow>\n                        <h3>DP Matrix</h3>\n                    </Tooltip>\n                    <br />\n                    {matrix}\n                </Grid>\n                <Divider\n                    orientation=\"vertical\"\n                    flexItem\n                    style={{marginLeft: 20}} />\n                <Grid item xs={12} lg={6}>\n                    <div>\n                        <Grid container spacing={0} align=\"center\"\n                            justify=\"center\"\n                            alignItems=\"center\" direction='row'>\n                            <Grid item xs={1}>\n                                <h4>Previous</h4>\n                                <IconButton size='small'\n                                    className={classes.directionArrow}\n                                    onClick={onNext}>\n                                    <KeyboardArrowLeftIcon />\n                                </IconButton>\n                            </Grid>\n                            <Grid item xs={9}>\n                                <h3>Alignment(s)</h3>\n                                <br />\n                                {alignments}\n                            </Grid>\n                            <Grid item xs={1}>\n                                <h4>Next</h4>\n                                <IconButton size='small'\n                                    className={classes.directionArrow}\n                                    onClick={onPrevious}>\n                                    <KeyboardArrowRightIcon />\n                                </IconButton>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Grid>\n                <Divider orientation=\"vertical\" flexItem />\n\n                <Grid item xs={12} lg={'auto'}>\n                    <h3>Report</h3>\n                    <br />\n                    <div style={{marginBottom: 10}}>\n                        {props.result.alignments.length > 0 ?\n                            `Identity : ${props.result.alignments[\n                                selectedAlignment].identity.toFixed(5)}` :\n                            ''}\n                        <br />\n                        Score : {props.result.score}\n                        <br />\n                    </div>\n                    <Button variant=\"outlined\" onClick={handleReportOpen}>\n                        Generate Report\n                    </Button>\n                    <Modal\n                        open={reportOpen}\n                        className={classes.reportModal}\n                        onClose={handleReportClose}\n                        aria-labelledby=\"report-modal-title\"\n                        aria-describedby=\"report-modal-description\"\n\n                    >\n                        <PairAlignReport\n                            input={props.input}\n                            result={props.result}\n                        />\n                    </Modal>\n                </Grid>\n            </Grid>\n            {playableResult}\n\n        </div>\n    );\n}\n\nPairAlignResult.propTypes = {\n    result: PropTypes.shape({\n        score_matrix: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)),\n        alignments: PropTypes.arrayOf(\n            PropTypes.shape({\n                algn_a: PropTypes.string,\n                algn_b: PropTypes.string,\n                identity: PropTypes.number,\n            }),\n        ),\n        score: PropTypes.number,\n    }),\n    input: PropTypes.shape({\n        genomeType: PropTypes.string,\n        scoringMethod: PropTypes.string,\n        seqA: PropTypes.string,\n        seqB: PropTypes.string,\n        match: PropTypes.number,\n        mismatch: PropTypes.number,\n        gap: PropTypes.number,\n    }),\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: 'yellow',\n      backgroundColor: '#000000CC',\n    },\n    circularProgress: {\n        color: 'white',\n    },\n  }));\n\n/**\n * Component to display loading overlay while fetching data\n * @return {React.ReactElement}\n */\nexport default function LoadingOverlay() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Backdrop\n            className={classes.backdrop}\n            open={true}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <CircularProgress\n                            thickness={6}\n                            className={classes.circularProgress}/>\n                        </Grid>\n                        <Grid item>\n                            Fetching Results\n                        </Grid>\n                    </Grid>\n            </Backdrop>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setGenomeType} from '../../Redux/Actions/Mode';\n\n/**\n * Component to select between DNA and protein genome types.\n * Contains 2 radio buttons.\n * @return {React.ReactElement}\n */\nexport default function GenomeTypeInput() {\n    const dispatch = useDispatch();\n\n    const handleChange = (event)=>{\n        dispatch(setGenomeType(event.target.value));\n    };\n\n    const value = useSelector((state) => state.genomeType);\n    return (\n        <div>\n            <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">Select Genome Type</FormLabel>\n            <RadioGroup aria-label=\"genome-type\"\n                value={value} name='genome-type' onChange={handleChange}>\n                <FormControlLabel\n                    value='DNA' control={<Radio />} label=\"DNA\" />\n                <FormControlLabel\n                    value='PROTEIN' control={<Radio />} label=\"Protein\" />\n\n            </RadioGroup>\n            </FormControl>\n\n        </div>\n    );\n}\n","export const getSubstring = (data)=>{\n    const start = Math.max(0, data.range[0]-1);\n    const end = data.range[1];\n    return data.seq.slice(start, end);\n};\n","import React from 'react';\nimport PairAlignInput from './PairAlignInput';\nimport Button from '@material-ui/core/Button';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {\n    fetchNW, fetchSW,\n    fetchNWExtended, fetchSWExtended,\n} from '../../API/PairAlign';\nimport PairAlignResult from './PairAlignResult';\nimport LoadingOverlay from './LoadingOverlay';\nimport GenomeTypeInput from '../GeomeType/GenomeTypeInput';\nimport {Box} from '@material-ui/core';\nimport {getSubstring} from '../../util/substring';\nimport {setSnackBar} from '../../Redux/Actions/Snackbar';\n\n/**\n * Wrapper component for PairAlign section\n * @return {React.ReactElement}\n */\nexport default function PairAlignContent() {\n    const dispatch = useDispatch();\n\n    /**\n     * state variable to store result from backend\n     */\n    const [result, setResult] = React.useState(false);\n\n    /**\n     * loading status when fetching data\n     */\n    const [loading, setloading] = React.useState(false);\n\n    /**\n     * getting all input data from redux-store\n     */\n    const genomeType = useSelector((state) => state.genomeType);\n    const seqA = getSubstring(useSelector((state) => state.P1));\n    const seqAname = useSelector((state) => state.P1.name);\n    const seqBname = useSelector((state) => state.P2.name);\n    const seqB = getSubstring(useSelector((state) => state.P2));\n    const match = useSelector((state) => state.matchScore);\n    const mismatch = useSelector((state) => state.mismatchPenalty);\n    const gap = useSelector((state) => state.gapPenalty);\n    const gapOpen = useSelector((state) => state.gapOpenPenalty);\n    const gapExtend = useSelector((state) => state.gapExtendPenalty);\n    const scoringMethod = useSelector((state) => state.scoringMethod);\n    const tracebackPriority = useSelector((state) => state.tracebackPriority);\n    const similarityMatrixName =\n        useSelector((state) => state.similarityMatrixName);\n    const DNASimilarityMatrix =\n        useSelector((state) => state.DNASimilarityMatrix);\n    const algo = useSelector((state) => state.pAlgo);\n\n\n    /**\n     * Callback function when data is received\n     * @param {Object} data - data from backend API\n     */\n    const onReceive = (data) => {\n        console.log(data);\n        setloading(false);\n        if (data.error === undefined) {\n            setResult({\n                result: data.response.result, input: {\n                    seqA, seqAname, seqB, seqBname, match,\n                    mismatch, gap, gapOpen, gapExtend, scoringMethod,\n                    tracebackPriority, similarityMatrixName,\n                    DNASimilarityMatrix, genomeType,\n                },\n            });\n        } else if (data.error === 400) {\n            dispatch(setSnackBar('Plese check your input'));\n        } else {\n            dispatch(setSnackBar('Could not load results. Try again later'));\n        }\n    };\n\n\n    /**\n     * Callback function when Submit button is clicked\n     */\n    const onSubmit = () => {\n        setResult(undefined);\n        setloading(true);\n\n        /**\n         * Selecting backend endpoint\n         * according to the algorithm and scoring method\n         */\n        if (algo === 'GLOBAL') {\n            if (scoringMethod === 'BASIC') {\n                fetchNW(seqA, seqB, match, mismatch, gap, onReceive);\n            } else {\n                fetchNWExtended(seqA, seqB, match, mismatch, gapOpen,\n                    gapExtend, tracebackPriority, genomeType,\n                    similarityMatrixName, DNASimilarityMatrix, onReceive);\n            }\n        } else {\n            if (scoringMethod === 'BASIC') {\n                fetchSW(seqA, seqB, match, mismatch, gap, onReceive);\n            } else {\n                fetchSWExtended(seqA, seqB, match, mismatch, gapOpen,\n                    gapExtend, tracebackPriority, genomeType,\n                    similarityMatrixName, DNASimilarityMatrix, onReceive);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h2>PairAlign Mode</h2>\n            <Box boxShadow={3} padding={5} marginBottom={3}>\n                <GenomeTypeInput />\n            </Box>\n            <PairAlignInput />\n            <br />\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                fullWidth\n                onClick={onSubmit}>\n                Submit\n            </Button>\n            <br />\n            {loading ? <LoadingOverlay /> : ''}\n\n            <br />{result ?\n                <Box boxShadow={3} padding={2}> <PairAlignResult\n                    input={result.input}\n                    result={result.result} />\n                </Box> :\n                ''}\n\n        </div>\n    );\n}\n","export const addNewMSA = ()=>{\n    return {\n        type: 'ADD_NEW_MSA',\n    };\n};\n\nexport const setMSAInput = (seq, key)=>{\n    return {\n        type: 'SET_MSA',\n        payload: {seq: seq, key: key},\n    };\n};\n\nexport const setMSAInputRange = (range, key)=>{\n    return {\n        type: 'SET_MSA_RANGE',\n        payload: {range, key},\n    };\n};\n\nexport const setMSAInputName = (name, key)=>{\n    return {\n        type: 'SET_MSA_NAME',\n        payload: {name, key},\n    };\n};\n\nexport const removeMSA = (key)=>{\n    return {\n        type: 'REMOVE_MSA',\n        payload: {key},\n    };\n};\n\nexport const setMSAAlgo = (algo)=>{\n    return {\n        type: 'SET_MSA_ALGO',\n        payload: algo,\n    };\n};\n\nexport const setMSAOrder = (order)=>{\n    return {\n        type: 'SET_MSA_ORDER',\n        payload: order,\n    };\n};\n","import React from 'react';\nimport CommonInput from '../../CommonInput/CommonInput';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport {useSelector, useDispatch} from 'react-redux';\nimport {addNewMSA, setMSAInput, removeMSA,\n     setMSAInputRange, setMSAInputName} from '../../../Redux/Actions/MSA';\nimport {Divider} from '@material-ui/core';\n\n/**\n * Component to display upto 6 sequence input sections\n * @return {React.ReactElement}\n */\nexport default function MSASequencesInput() {\n    const dispatch = useDispatch();\n\n    /**\n     * onClick \"Add More\" button for MSA\n     * @param {Object} e - onClick event\n     */\n    const handleMSAadd = (e) => {\n        dispatch(addNewMSA());\n    };\n\n    const MSASeq = useSelector((state) => state.MSASeq);\n\n    const inputs = [];\n\n    MSASeq.forEach((element, index) => {\n        const title = 'Input Sequence '.concat(index + 1, ' for MSA');\n        inputs.push(<Grid item key={element.key}>\n            <CommonInput\n                inputHandler={setMSAInput}\n                rangeInputHandler={setMSAInputRange}\n                nameInputHandler={setMSAInputName}\n                closeHandler={removeMSA}\n                value={element.seq}\n                range={element.range}\n                sequenceName={element.name}\n                MSAkey={element.key} title={title} type='MSA' />\n        </Grid>);\n    });\n    return (\n        <div style={{maxHeight: 500, overflowY: 'auto'}}>\n            <Grid\n            container\n            direction=\"column\"\n            spacing={0}\n            style={{width: '98%'}}\n            >\n                {inputs}\n                <Divider style={{marginBottom: 10}}/>\n                <Grid item>\n                    <Button variant=\"contained\"\n                        color=\"secondary\"\n                        style={{color: 'white', backgroundColor: 'green'}}\n                        onClick={handleMSAadd}>Add More</Button>\n                </Grid>\n            </Grid>\n\n        </div>\n    );\n}\n","import React, {useState} from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        width: 120,\n        margin: theme.spacing(1),\n    },\n    submitButton: {\n        color: 'green',\n    },\n}));\n\n/**\n * Wrapper component for 2 dropdown inputs.\n * Accepts a set of options and displays them in 2 dropdown menus.\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function DropDownInput(props) {\n    const classes = useStyles();\n    /**\n     * erorr status - same option can not be selected in the 2 dropdown menus\n     */\n    const [errorStatus, seterrorStatus] = useState(false);\n\n    /**\n     * selected option 1\n     */\n    const [seq1, setseq1] = useState(' ');\n\n    /**\n     * selected option 2\n     */\n    const [seq2, setseq2] = useState(' ');\n    const errorText = 'Invalid Pair';\n    const items = [];\n    props.availableSet.forEach((element) => {\n        items.push(\n            <MenuItem\n                key={element}\n                value={element}>\n                {element}\n            </MenuItem>,\n        );\n    });\n\n    const onChangeSeq1 = (event) => {\n        const newSeq1 = event.target.value;\n        if ((newSeq1 !== seq2) &&\n            (props.availableSet.has(newSeq1))) {\n            seterrorStatus(false);\n        } else {\n            seterrorStatus(true);\n        }\n        setseq1(newSeq1);\n    };\n    const onChangeSeq2 = (event) => {\n        const newSeq2 = event.target.value;\n        if ((newSeq2 !== seq1) &&\n            (props.availableSet.has(newSeq2))) {\n            seterrorStatus(false);\n        } else {\n            seterrorStatus(true);\n        }\n        setseq2(newSeq2);\n    };\n    const onSubmitPair = () => {\n        if ((seq1 !== seq2) &&\n            (props.availableSet.has(seq1)) &&\n            (props.availableSet.has(seq2))) {\n            console.log(seq1, seq2);\n            props.onSubmitPair(seq1, seq2);\n        } else {\n            seterrorStatus(true);\n        }\n    };\n    return (\n        <div>\n\n            <Grid container direction='row'>\n                <Grid item>\n                    <FormControl\n                        disabled={props.disabledStatus}\n                        error={errorStatus}\n                        className={classes.formControl}>\n                        <Select value={seq1} onChange={onChangeSeq1}>\n                            <MenuItem value={' '}>{' '}</MenuItem>\n                            {items}\n\n                        </Select>\n                        {errorStatus ?\n                            <FormHelperText>{errorText}</FormHelperText> :\n                            ''}\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    <FormControl\n                        disabled={props.disabledStatus}\n                        error={errorStatus}\n                        className={classes.formControl}>\n                        <Select value={seq2} onChange={onChangeSeq2}>\n                            <MenuItem value={' '}>{' '}</MenuItem>\n                            {items}\n                        </Select>\n                        {errorStatus ?\n                            <FormHelperText>{errorText}</FormHelperText> :\n                            ''}\n                    </FormControl>\n                </Grid>\n                <Grid item>\n                    <Button\n                        disabled={props.disabledStatus}\n                        variant=\"outlined\"\n                        onClick={onSubmitPair}\n                        className={classes.submitButton}\n                    >Add Pair</Button>\n\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nDropDownInput.propTypes = {\n    availableSet: PropTypes.instanceOf(Set),\n    onSubmitPair: PropTypes.func,\n    disabledStatus: PropTypes.bool,\n};\n","export default function msaOrderValidate(order, sequencesN) {\n    const currentSequences = Array(\n        sequencesN).fill().map((_, i) => i + 1,\n        );\n    const currentSet = new Set(currentSequences);\n    if (!(order.length === sequencesN - 1)) {\n        return false;\n    }\n    let flag = true;\n    order.forEach((pair, index) => {\n        if (!(currentSet.has(pair[0]) &&\n            currentSet.has(pair[1]) &&\n            pair[2] === sequencesN + index + 1)) {\n            flag = false;\n        }\n        currentSet.delete(pair[0]);\n        currentSet.delete(pair[1]);\n        currentSet.add(sequencesN + index + 1);\n    });\n    return flag;\n}\n","export const sampleSequences = ['AGCTCT', 'AAAA', 'GGCTTC',\n    'CCCCC', 'GGGCT', 'TTTTT'];\n\nexport const samplePairings = [[1, 2, 7],\n    [3, 5, 8],\n    [7, 4, 9],\n    [6, 9, 10],\n    [8, 10, 11]];\n\nexport const sampleGraph = {\n    'children': [\n        {\n            'children': [\n                {\n                    'id': 3,\n                },\n                {\n                    'id': 5,\n                },\n            ],\n            'id': 8,\n        },\n        {\n            'children': [\n                {\n                    'id': 6,\n                },\n                {\n                    'children': [\n                        {\n                            'children': [\n                                {\n                                    'id': 1,\n                                },\n                                {\n                                    'id': 2,\n                                },\n                            ],\n                            'id': 7,\n                        },\n                        {\n                            'id': 4,\n                        },\n                    ],\n                    'id': 9,\n                },\n            ],\n            'id': 10,\n        },\n    ],\n    'id': 11,\n};\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n\nconst useStyles = makeStyles((theme) => ({\n    availableIconsGrid: {\n        margin: 5,\n    },\n    submitButton: {\n        color: 'green',\n    },\n    avatar: {\n        color: 'white',\n        backgroundColor: 'red',\n        width: 25,\n        height: 25,\n        fontSize: 15,\n    },\n}));\n\n/**\n * Component to display current pairing order\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function PairingOrderList(props) {\n    const classes = useStyles();\n    function makeAvatar(character) {\n        return (\n            <Avatar className={classes.avatar}>{character}</Avatar>\n        );\n    }\n\n    const orderList = props.pairingOrder.map((element) => {\n        return (\n            <div key={element[2]}>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>\n                                {makeAvatar(element[0])}\n                            </td>\n                            <td>\n                                <AddIcon />\n                            </td>\n                            <td>\n                                {makeAvatar(element[1])}\n                            </td>\n                            <td>\n                                <ArrowForwardIcon />\n                            </td>\n                            <td>\n                                {makeAvatar(element[2])}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    });\n    return (\n        <div>\n            {orderList}\n        </div>\n    );\n}\n\nPairingOrderList.propTypes = {\n    pairingOrder: PropTypes.arrayOf(PropTypes.number),\n};\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport G6 from '@antv/g6';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    tree: {\n        borderWidth: 2,\n        borderStyle: 'solid',\n        width: 600,\n        height: 400,\n        margin: 'auto',\n    },\n    sampleTree: {\n        width: 600,\n        height: 200,\n    },\n}));\n\n\n/**\n * Component to view phylogenetic tree. Created with @antv/g6 package.\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function MSATree(props) {\n    const classes = useStyles();\n    const ref = React.useRef(null);\n    const {treeData, setSelected} = props;\n    const treeType = props.type;\n    const sequencesNames = props.sequencesNames;\n\n    /**\n     * same component is used in MSA result and MSA helper dialog overlay.\n     * seperating those two occasions with 'type' attribute\n     */\n    const htmlId = props.type === 'sample' ? 'MSA-tree-sample' :\n        'MSA-tree-result';\n\n\n    useEffect(() => {\n        let graph = null;\n        if (!graph) {\n            graph = new G6.TreeGraph({\n                container: ref.current,\n                fitView: true,\n                width: 600,\n                height: treeType === 'sample' ? 200 : 400,\n                modes: {\n                    default: [\n                        {\n                            // graph can be collapsed and expanded from any node\n                            type: 'collapse-expand',\n                            onChange: function onChange(item, collapsed) {\n                                const data = item.get('model').data;\n                                data.collapsed = collapsed;\n                                return true;\n                            },\n                        },\n                        // dragging and moving is enabled in the graph\n                        'drag-canvas',\n                        'zoom-canvas',\n                    ],\n                },\n                defaultNode: {\n                    size: 26,\n                    anchorPoints: [\n                        [0, 0.5],\n                        [1, 0.5],\n                    ],\n                    style: {\n                        fill: '#FF0000',\n                        stroke: '#FF0000',\n                    },\n                },\n                defaultEdge: {\n                    type: 'cubic-horizontal',\n                    style: {\n                        stroke: '#0000FF',\n                        startArrow: true,\n                    },\n                },\n                layout: {\n                    type: 'mindmap',\n                    direction: 'H',\n                    getHeight: () => {\n                        return 16;\n                    },\n                    getWidth: () => {\n                        return 16;\n                    },\n                    getVGap: () => {\n                        return 10;\n                    },\n                    getHGap: () => {\n                        return 100;\n                    },\n                    getSide: () => {\n                        return 'left';\n                    },\n                },\n            });\n            let centerX = 0;\n            graph.node(function(node) {\n                if (node.id === '1') {\n                    centerX = node.x;\n                }\n                /**\n                 * for input sequenced node label is the sequence name\n                 * for others profile id\n                 */\n                let nodeLabel = node.id;\n                if (treeType==='result' &&\n                    Number(node.id)<=sequencesNames.length) {\n                    nodeLabel = sequencesNames[Number(node.id)-1];\n                }\n\n                return {\n                    label: nodeLabel,\n                    labelCfg: {\n                        position:\n                            node.children && node.children.length > 0 ?\n                                'right' :\n                                node.x > centerX ?\n                                    'right' :\n                                    'left',\n                        offset: 5,\n                        style: {\n                            fill: '#0000FF',\n                            fontSize: 17,\n                        },\n                    },\n                };\n            });\n            /**\n             * view the relevent sequence/profile when\n             *      mouse is hovering over a node\n             */\n            graph.on('node:mouseover', (e) => {\n                const id = e.item.defaultCfg.id;\n                setSelected(id);\n            });\n            /**\n             * reset graph on double click on canvas\n             */\n            graph.on('canvas:dblclick', (e) => {\n                graph.fitView(0);\n            });\n        }\n        graph.data(treeData);\n        graph.render();\n        graph.fitView(0);\n    }, [setSelected, treeData, treeType, sequencesNames]);\n\n    return (\n        <div ref={ref} id={htmlId} className={`${classes.tree} \n        ${props.type === 'sample' ? classes.sampleTree : ''}`}>\n        </div>\n    );\n};\n\nMSATree.propTypes = {\n    treeData: PropTypes.shape({\n        id: PropTypes.number,\n        children: PropTypes.array,\n    }),\n    setSelected: PropTypes.func,\n    type: PropTypes.string,\n    sequencesNames: PropTypes.arrayOf(PropTypes.string),\n};\n\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport {\n    sampleSequences,\n    samplePairings,\n    sampleGraph,\n} from '../../../util/msaHelpData';\nimport PairingOrderList from './PairingOrderList';\nimport MSATree from '../MSATree';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    seqListItem: {\n        backgroundColor: '#00000010',\n        marginBottom: 3,\n    },\n}));\n\n/**\n * Component to display helper dialog box for MSA pairing order\n * @return {React.ReactElement}\n */\nexport default function HelpModal() {\n    const classes = useStyles();\n\n    /**\n     * open state of the dialog box\n     */\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const seqList = sampleSequences.map((seq, index) => {\n        return (\n            <ListItem key={index} className={classes.seqListItem}>\n                {index + 1} - {seq}\n            </ListItem>\n        );\n    });\n\n    const bottomInfo = <>\n        Above pairing order will give the following tree.\n        <br />\n        Indices 7, 8, 9, 10 correspond to intermediate profiles.\n        <br />\n        11 denotes the final alignment\n    </>;\n\n    return (\n        <div>\n            <Link\n                component=\"button\"\n                variant=\"body2\"\n                onClick={handleOpen}>\n                Need help for this?\n            </Link>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={4}>\n                                Sequences with their indices\n                                <List>\n                                    {seqList}\n                                </List>\n                            </Grid>\n                            <Grid item xs={8}>\n                                Sample pairing\n                                <br/>\n                                <PairingOrderList\n                                    pairingOrder={samplePairings} />\n                                <br />\n                                {bottomInfo}\n                            </Grid>\n                        </Grid>\n\n\n                        <MSATree\n                            treeData={sampleGraph}\n                            type='sample'\n                            setSelected={() => { }} />\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}\n","import React, {useState, useEffect, useCallback} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles} from '@material-ui/core/styles';\nimport DropDownInput from './DropDownInput';\nimport PropTypes from 'prop-types';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setMSAOrder} from '../../../Redux/Actions/MSA';\nimport msaOrderValidate from '../../../Validators/MSA/MSAOrderValidator';\nimport HelpModal from './HelpModal';\nimport PairingOrderList from './PairingOrderList';\nimport {CircularProgress} from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\n\nconst useStyles = makeStyles((theme) => ({\n    availableIconsGrid: {\n        margin: 5,\n    },\n    submitButton: {\n        color: 'green',\n    },\n    avatar: {\n        color: 'white',\n        backgroundColor: 'red',\n        width: 25,\n        height: 25,\n        fontSize: 15,\n    },\n}));\n\n/**\n * Component to view the user input for user defined MSA order\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function MSAOrderInput(props) {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    /**\n     * state variable to store pairing order\n     */\n    const pairingOrder = useSelector((state) => state.msaOrder);\n    const setpairingOrder = useCallback((p) => {\n        dispatch(setMSAOrder(p));\n    }, [dispatch]);\n\n    /**\n     * when sequences are added or removed, reset all pairing order data\n     */\n    useEffect(() => {\n        const currentSequences = Array(\n            props.sequences.length).fill().map((_, i) => i + 1,\n            );\n        setavailableSet(new Set(currentSequences));\n\n        setpairingOrder(new Array(0));\n        setnextProfileIndex(props.sequences.length + 1);\n    }, [props.sequences, setpairingOrder]);\n\n\n    const currentSequences = Array(\n        props.sequences.length).fill().map((_, i) => i + 1,\n        );\n\n    /**\n     * currently available sequences for pairing\n     */\n    const [availableSet, setavailableSet] = useState(new Set(currentSequences));\n\n\n    const [nextProfileIndex,\n        setnextProfileIndex] = useState(props.sequences.length + 1);\n\n    /**\n     * Callback function when \"Add Pair\" is clicked\n     * @param {Number} seq1 - first sequence in the pair\n     * @param {Number} seq2 - second sequence in the pair\n     */\n    const onSubmitPair = (seq1, seq2) => {\n        const newOrder = pairingOrder;\n        newOrder.push([seq1, seq2, nextProfileIndex]);\n        setpairingOrder(newOrder);\n        const newSet = availableSet;\n        newSet.delete(seq1);\n        newSet.delete(seq2);\n        newSet.add(nextProfileIndex);\n        setavailableSet(newSet);\n        setnextProfileIndex(nextProfileIndex + 1);\n    };\n\n    /**\n     * reset all pairing data\n     */\n    const onReset = () => {\n        setavailableSet(new Set(currentSequences));\n        setpairingOrder(new Array(0));\n        setnextProfileIndex(props.sequences.length + 1);\n        dispatch(setMSAOrder([]));\n    };\n\n    function makeAvatar(character) {\n        return (\n            <Avatar className={classes.avatar}>{character}</Avatar>\n        );\n    }\n\n    const available = [];\n    availableSet.forEach((element) => {\n        available.push(\n            <Grid item key={element}>\n                {makeAvatar(element)}\n            </Grid>,\n        );\n    });\n\n    let pairingValidityStatus;\n    if (msaOrderValidate(pairingOrder, currentSequences.length)) {\n        pairingValidityStatus =\n            <>\n                <p>Valid </p>\n                <CheckCircleOutlineIcon style={{color: 'green'}} size={20} />\n            </>;\n    } else {\n        pairingValidityStatus =\n            <>\n                <p>Waiting for complete list</p>\n                <CircularProgress size={20} />\n            </>;\n    }\n\n    return (\n        <div>\n            <Divider />\n            <br />\n            Sequences will be compared progressively\n            with Global Alignment algorithm\n            <br/>\n            according to the user defined phylogenetic tree.\n            <br />\n            <HelpModal />\n            <br />\n            <br />\n            Currently available for pairing\n            <Grid\n                container\n                direction='row'\n                spacing={2}\n                align=\"center\"\n                justify=\"center\"\n                alignItems=\"center\"\n                className={classes.availableIconsGrid}>\n                {pairingOrder.length < currentSequences.length - 1 ?\n                    available : <Grid item>-None-</Grid>}\n            </Grid>\n            <br />\n            <Grid container\n                direction='row'\n                spacing={7}\n                align=\"center\"\n                justify=\"center\"\n                alignItems=\"center\"\n\n            >\n                <Grid item xs={4}>\n                    Your Pair Aligns Will Appear Here\n                    {/* {pairingOrderComponent} */}\n                    <PairingOrderList pairingOrder={pairingOrder} />\n                    <br />\n                    {pairingOrder.length > 0 ?\n                        <Button\n                            variant='outlined'\n                            size='small'\n                            onClick={onReset}>\n                            Reset Pairings\n                        </Button> :\n                        ''}\n                </Grid>\n                <Grid item xs={4}>\n                    <DropDownInput\n                        availableSet={availableSet}\n                        onSubmitPair={onSubmitPair}\n                        disabledStatus={\n                            pairingOrder.length === currentSequences.length - 1\n                        } />\n                </Grid>\n            </Grid>\n            <div>\n                <h4>Pairing Validity Status</h4>\n                {pairingValidityStatus}\n            </div>\n\n\n        </div>\n    );\n}\n\nMSAOrderInput.propTypes = {\n    sequences: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.number,\n            seq: PropTypes.string,\n        }),\n    ),\n};\n","import React from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setMSAAlgo} from '../../../Redux/Actions/MSA';\nimport MSAOrderInput from './MSAOrderInput';\nimport Box from '@material-ui/core/Box';\n\n/**\n * Component to view MSA algorithm selector\n * @return {React.ReactElement}\n */\n\nexport default function MSAAlgoSelector() {\n    const dispatch = useDispatch();\n\n    /**\n     * Callback function when radio button group is changed\n     * @param {Object} event - onChange event\n     * @param {String} event.target.value - new algorithm id\n     */\n    const handleChange = (event) => {\n        dispatch(setMSAAlgo(event.target.value));\n    };\n\n    const value = useSelector((state) => state.msaAlgo);\n    const msaSequences = useSelector((state) => state.MSASeq);\n\n    let msaOrderInput = '';\n    if (value === '2') {\n        msaOrderInput = <MSAOrderInput sequences={msaSequences} />;\n    }\n    return (\n        <div>\n            <Box boxShadow={3} marginTop={7} padding={5}>\n                <div>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel\n                            component=\"label\">\n                            Select Algorithm\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label=\"algorithm\"\n                            value={value}\n                            name='algorithm'\n                            onChange={handleChange}>\n                            <FormControlLabel\n                                value='1'\n                                control={<Radio />}\n                                label=\"Progressive Algorithm\" />\n                            <FormControlLabel\n                                value='2'\n                                control={<Radio />}\n                                label=\"User Defined\" />\n\n                        </RadioGroup>\n                    </FormControl>\n                </div>\n                <div>\n                    {msaOrderInput}\n                </div>\n            </Box>\n\n        </div>\n    );\n}\n","import React from 'react';\n\nimport CommonScore from '../CommonScoreSchema/ScoreSchema';\nimport MSASequencesInput from './Input/MSASequencesInput';\nimport MSAAlgoSelector from './Input/MSAAlgoSelector';\nimport {Box, FormLabel} from '@material-ui/core';\nimport SimilarityMatrixInput from '../CommonScoreSchema/SimilarityMatrixInput';\n\n/**\n * Wrapper component for MSA input section.\n * Contains inputs for maximum 6 sequences, algorithm selector\n *  and score schema input.\n * @return {React.ReactElement}\n */\nexport default function MSAInput() {\n    return (\n        <div>\n            <Box boxShadow={3} paddingBottom={3}>\n                <MSASequencesInput/>\n            </Box>\n            <MSAAlgoSelector/>\n            <Box boxShadow={3} marginTop={7} marginBottom={7} padding={5}>\n                <div>\n                    <FormLabel>Define your score schema</FormLabel>\n                    <br/><br/>\n                    <CommonScore />\n                    <br/><br/>\n                    <SimilarityMatrixInput style={{marginTop: 5}}/>\n                </div>\n            </Box>\n\n\n        </div>\n    );\n}\n","import {fetchPost} from '../util/fetch';\nimport {apiHost} from '../config/config';\n\nexport const fetchMSAProgressive = async function(\n    sequences, order, match, mismatch, gap,\n    genomeType, matrixName, DNAmatrix, callback) {\n    const url = apiHost + '/msa/progressive';\n    const data = {sequences, match, mismatch, gap};\n    const formattedOrder = order.map((element) => {\n        return [element[0], element[1]];\n    });\n    data.order = formattedOrder;\n\n    data.seq_type = genomeType;\n    if (genomeType === 'PROTEIN') {\n        data.sub_mat = matrixName;\n    } else {\n        if (matrixName === 'DEFAULT') {\n            data.sub_mat = 'DEFAULT';\n        } else {\n            data.sub_mat = DNAmatrix;\n        }\n    }\n    await fetchPost(url, data, callback);\n};\n\nexport const fetchMSAProgressiveOptimal = async function(\n    sequences, match, mismatch, gap, genomeType,\n    matrixName, DNAmatrix, callback) {\n    const url = apiHost + '/msa/progressive-optimal';\n    const data = {sequences, match, mismatch, gap};\n\n    data.seq_type = genomeType;\n    if (genomeType === 'PROTEIN') {\n        data.sub_mat = matrixName;\n    } else {\n        if (matrixName === 'DEFAULT') {\n            data.sub_mat = 'DEFAULT';\n        } else {\n            data.sub_mat = DNAmatrix;\n        }\n    }\n    await fetchPost(url, data, callback);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {FixedSizeGrid} from 'react-window';\nimport {Avatar} from '@material-ui/core';\nimport genomeStyles from '../../styles/GenomeStyles.module.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        height: '20px',\n        width: '20px',\n        fontSize: '12px',\n\n    },\n    emptyRow: {\n        '& tr': {\n            height: '20px',\n\n        },\n    },\n\n}));\n\n/**\n * Component to display the alignment result of MSA.\n * Displays different colors for each DNA/Protein base\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nfunction MSAAlignment(props) {\n    const classes = useStyles();\n    const totalLen = props.alignments[0].length;\n\n    /**\n     * function to create single protein/DNA base element.\n     * @param {Object} obj\n     * @param {Number} obj.columnIndex - index of the base in\n     *      the aligned sequence\n     * @param {Number} obj.rowIndex - index of the sequence in the alignment\n     * @return {React.ReactElement}\n     */\n    const makeBase = ({columnIndex, rowIndex, style}) => {\n        const character = props.alignments[rowIndex].charAt(columnIndex);\n        const styleClass = character === '-' ? 'gap' :\n            props.genomeType.concat('-', character.toUpperCase());\n\n        return (\n            <div style={style}>\n                <Avatar variant=\"square\"\n                        className={\n                            `${classes.avatar} ${genomeStyles['genome-base']}\n                             ${genomeStyles[styleClass]}`\n                            }>\n                        {character}</Avatar>\n\n\n            </div>\n        );\n    };\n    makeBase.propTypes = {\n        columnIndex: PropTypes.number.isRequired,\n        rowIndex: PropTypes.number.isRequired,\n        style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    };\n\n\n    return (\n        <div onClick={onclick}>\n            <FixedSizeGrid\n                columnCount={totalLen}\n                columnWidth={20}\n                height={20*(props.alignments.length+1)}\n                rowCount={props.alignments.length}\n                rowHeight={20}\n                width={560}\n            >\n                {makeBase}\n            </FixedSizeGrid>\n        </div>\n    );\n}\n\nMSAAlignment.propTypes = {\n    alignments: PropTypes.arrayOf(PropTypes.string),\n    genomeType: PropTypes.string,\n\n};\n\nexport default MSAAlignment;\n\n","import React, {Component, Fragment} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\nimport {Button} from '@material-ui/core';\n\n\nconst useStyles = (theme) => ({\n    paper: {\n        width: '90%',\n        height: '90%',\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2),\n    },\n    wrapped: {\n        wordWrap: 'break-word',\n    },\n    printableComponent: {\n        overflowY: 'auto',\n        height: '90%',\n        padding: theme.spacing(2),\n\n    },\n    line: {\n        width: '100%',\n        textAlign: 'left',\n        marginLeft: 0,\n    },\n});\n\nconst DNAbases = ['A', 'G', 'C', 'T'];\n\n/**\n * Component to display MSA report overlay\n */\nclass MSAReport extends Component {\n    constructor(props) {\n        super(props);\n        this.downloadTxtFile = this.downloadTxtFile.bind(this);\n    }\n\n    /**\n     * Function to download the report as a text file\n     */\n    downloadTxtFile() {\n        const element = document.createElement('a');\n        const file = new Blob(\n            [document.getElementById('printable-component').innerText],\n            {type: 'text/plain'});\n        element.href = URL.createObjectURL(file);\n        element.download = 'report.txt';\n        document.body.appendChild(element);\n        element.click();\n    }\n\n\n    render() {\n        const {classes} = this.props;\n        const date = new Date();\n        const dateStr = date.getFullYear() + '-' +\n            (date.getMonth() + 1) + '-' +\n            date.getDate() + ' ' +\n            date.getHours() + ':' +\n            date.getMinutes() + ':' +\n            date.getSeconds();\n\n        const inputSequences = this.props.input.sequences.map((seq, index) => {\n            return <>\n                <br />\n                {`>${this.props.input.sequencesNames[index]}`}\n                <br />\n                {seq}<br />\n            </>;\n        });\n        const line = <hr className={classes.line} />;\n        const scores = <>\n            Match Score : {this.props.input.match}<br />\n        Mismatch Penalty : {this.props.input.mismatch}<br />\n        Gap Penalty : {this.props.input.gap}<br />\n        </>;\n\n\n        let DNASimilarityScores = null;\n\n        if (this.props.input.genomeType === 'DNA' &&\n            this.props.input.similarityMatrixName === 'CUSTOM') {\n            DNASimilarityScores = [];\n            DNAbases.forEach((base1) => {\n                DNAbases.forEach((base2) => {\n                    const pair = base1.concat(base2);\n                    if (this.props.input.DNASimilarityMatrix.hasOwnProperty(\n                        pair)) {\n                        DNASimilarityScores.push(\n                            <Fragment key={pair}>\n                                {pair} : {\n                                    this.props.input.DNASimilarityMatrix[pair]}\n                                <br />\n                            </Fragment>);\n                    }\n                });\n            });\n        }\n\n\n        const alignmets = this.props.result.alignments.map((element, index) => {\n            return <><br />\n                {`>${this.props.input.sequencesNames[index]}`}<br />\n                {element}<br />\n            </>;\n        });\n\n\n        return (\n            <div className={classes.paper} tabIndex={-1}>\n                <Button variant='outlined'\n                    onClick={this.downloadTxtFile}>\n                    Download as a text file\n                </Button>\n                <div\n                    id='printable-component'\n                    className={classes.printableComponent}>\n                    Report created with BioViz\n                <br />\n            on {dateStr}\n                    <br />\n                    {line}\n                    Sequence Type : {this.props.input.genomeType}\n                    <br/>\n                    <br/>\n                    {line}\n                    <br />\n            InputSequences\n                <div className={classes.wrapped}>\n                        {inputSequences}\n                    </div>\n                    {line}\n                    <br />\n            Scoring method : BASIC (without affine gaps)\n                    <br />\n                    <br />\n                    <div>\n                        {scores}\n                    </div>\n                    <br />\n            Similarity Matrix : {this.props.input.similarityMatrixName}\n                    <br />\n                    {DNASimilarityScores}\n                    <br />\n                    <br />\n                    {line}\n                    <br />\n\n            Alignments\n                <div className={classes.wrapped}>\n                        {alignmets}\n                        <br/>\n                        {`Identity : ${this.props.result.identity}`}<br />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nMSAReport.propTypes = {\n    classes: PropTypes.object,\n    result: PropTypes.shape({\n        alignments: PropTypes.arrayOf(PropTypes.string),\n        identity: PropTypes.number,\n    }),\n    input: PropTypes.shape({\n        match: PropTypes.number,\n        mismatch: PropTypes.number,\n        gap: PropTypes.number,\n        similarityMatrixName: PropTypes.string,\n        genomeType: PropTypes.string,\n        sequences: PropTypes.arrayOf(PropTypes.string),\n        sequencesNames: PropTypes.arrayOf(PropTypes.string),\n        DNASimilarityMatrix: (props, propName, componentName) => {\n            const keys = Object.keys(props[propName]);\n            for (let index = 0; index < keys.length; index++) {\n                if (!(DNAbases.includes(keys[index][0]) &&\n                        DNAbases.includes(keys[index][1]))) {\n                    return new Error(\n                        'Invalid key `' + keys[index] + '` supplied to ' +\n                        '`' + componentName +\n                        '`; expected to match with two characters in' +\n                        DNAbases + '.',\n                    );\n                }\n            }\n        },\n    }),\n};\nexport default withStyles(useStyles)(MSAReport);\n","import React, {useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\nimport MSATree from './MSATree';\nimport MSAAlignment from './MSAAlignment';\nimport {Modal} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport MSAReport from './MSAReport';\n\nconst useStyles = makeStyles((theme) => ({\n    reportModal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\n/**\n * Wrapper component for MSA result section.\n *      Contains phylogenetic tree, alignment view and report\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function MSAResult(props) {\n    const classes = useStyles();\n    const divRef = useRef(null);\n\n    /**\n     * scroll into this component once the results are fetched from backend\n     */\n    useEffect(() => {\n        divRef.current.scrollIntoView({behavior: 'smooth'});\n    }, [props.result]);\n\n    /**\n     * currently viewing intermediate profile\n     */\n    const [selectedProfile, setselectedProfile] = React.useState(undefined);\n\n    const [reportOpen, setReportOpen] = React.useState(false);\n    const nInputSequences = props.result.alignments.length;\n    let intermediateProf = null;\n    if (selectedProfile) {\n        if (selectedProfile <= nInputSequences) {\n            const heading = <p>\n                Input Sequence\n                ({`${props.input.sequencesNames[selectedProfile - 1]}`})\n                </p>;\n            intermediateProf = <>{heading} <MSAAlignment\n                genomeType={props.input.genomeType}\n                alignments={[props.result.profiles[selectedProfile]]} /></>;\n        } else {\n            const heading = <p>\n                Intermediate Profile ({`${selectedProfile}`})\n                </p>;\n            intermediateProf = <>{heading} <MSAAlignment\n                genomeType={props.input.genomeType}\n                alignments={props.result.profiles[selectedProfile]} /></>;\n        }\n    }\n\n    /**\n     * download the phylogenetic tree as a png file\n     */\n    const onClickDownload = () => {\n        const canvas = document.getElementById(\n            'MSA-tree-result').getElementsByTagName('canvas')[0];\n\n\n        const link = document.createElement('a');\n        link.setAttribute('download', 'tree.png');\n        link.setAttribute('href',\n            canvas.toDataURL('image/png').replace('image/png',\n                'image/octet-stream'));\n        link.click();\n    };\n    const handleReportOpen = () => {\n        setReportOpen(true);\n    };\n\n    const handleReportClose = () => {\n        setReportOpen(false);\n    };\n\n    return (\n        <div ref={divRef}>\n\n            <br />\n            <Grid container direction='row' spacing={0}>\n                <Grid item xs={12} lg={5}>\n                    <h3>Phylogenetic Tree</h3>\n                    <br />\n                    Hover on nodes to view intermediate profiles.\n                    Double click on canvas to recenter the graph.\n                    <br />\n                    <div style={{textAlign: 'right'}}>\n                        <Button\n                            variant=\"outlined\"\n                            onClick={onClickDownload}\n                            size=\"small\">\n                            Print this\n                        </Button>\n                    </div>\n                    <br />\n                    <div>\n                        <MSATree\n                            type='result'\n                            treeData={props.result.graph}\n                            setSelected={setselectedProfile}\n                            sequencesNames={props.input.sequencesNames} />\n                    </div>\n                </Grid>\n\n                <Divider\n                    orientation=\"vertical\"\n                    flexItem\n                    style={{marginLeft: 15}} />\n                <Grid item container direction='column' xs={12} lg={5}\n                    align=\"center\"\n                    alignItems=\"center\">\n                    <Grid item >\n                        <h3>Final Alignment</h3>\n                        <br />\n                        <MSAAlignment\n                            alignments={props.result.alignments}\n                            genomeType={props.input.genomeType} />\n                    </Grid>\n                    <Grid item>\n                        <h4>Intermediate Profiles</h4>\n                        <h5>(Hover over the graph to view profiles)</h5>\n                        {intermediateProf}\n                    </Grid>\n\n                </Grid>\n\n                <Divider orientation=\"vertical\" flexItem />\n                <Grid item xs={12} lg={'auto'} align=\"center\">\n                    <h3>Report</h3>\n                    <br />\n                    <div style={{marginBottom: 10}}>\n                        Identity : {props.result.identity.toFixed(5)}\n                        <br />\n                    </div>\n                    <Button variant=\"outlined\" size=\"small\"\n                        onClick={handleReportOpen}>\n                        Generate Report\n                    </Button>\n                    <Modal\n                        open={reportOpen}\n                        className={classes.reportModal}\n                        onClose={handleReportClose}\n                        aria-labelledby=\"report-modal-title\"\n                        aria-describedby=\"report-modal-description\"\n\n                    >\n                        <MSAReport\n                            input={props.input}\n                            result={props.result}\n                        />\n                    </Modal>\n                </Grid>\n            </Grid>\n\n\n        </div>\n    );\n}\n\nMSAResult.propTypes = {\n    result: PropTypes.shape({\n        alignments: PropTypes.arrayOf(PropTypes.string),\n        graph: PropTypes.shape({\n            id: PropTypes.number,\n            children: PropTypes.array,\n        }),\n        profiles: PropTypes.arrayOf(\n            PropTypes.oneOfType(\n                [PropTypes.string, PropTypes.array],\n            ),\n        ),\n        identity: PropTypes.number,\n    }),\n    input: PropTypes.shape({\n        sequencesNames: PropTypes.arrayOf(PropTypes.string),\n        genomeType: PropTypes.string,\n    }),\n\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {Grid} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: 'yellow',\n      backgroundColor: '#000000CC',\n    },\n    circularProgress: {\n        color: 'white',\n    },\n  }));\n\n/**\n * Component to display loading overlay while fetching data\n * @return {React.ReactElement}\n */\nexport default function LoadingOverlay() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Backdrop\n            className={classes.backdrop}\n            open={true}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <CircularProgress\n                            thickness={6}\n                            className={classes.circularProgress}/>\n                        </Grid>\n                        <Grid item>\n                            Fetching Results\n                        </Grid>\n                    </Grid>\n            </Backdrop>\n\n        </div>\n    );\n}\n","import React from 'react';\nimport MSAInput from './MSAInput';\nimport {useSelector, useDispatch} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\n\nimport {fetchMSAProgressiveOptimal, fetchMSAProgressive} from '../../API/MSA';\nimport MSAResult from './MSAResult';\nimport LoadingOverlay from './LoadingOverlay';\nimport msaOrderValidate from '../../Validators/MSA/MSAOrderValidator';\nimport {getSubstring} from '../../util/substring';\nimport {setSnackBar} from '../../Redux/Actions/Snackbar';\nimport GenomeTypeInput from '../GeomeType/GenomeTypeInput';\n\n/**\n * Wrapper component for MSA section\n * @return {React.ReactElement}\n */\nexport default function MSAContent() {\n    const dispatch = useDispatch();\n\n    /**\n     * state variable to store result from backend\n     */\n    const [result, setResult] = React.useState(undefined);\n\n    /**\n     * loading status when fetching data\n     */\n    const [loading, setloading] = React.useState(false);\n\n    /**\n     * getting all input data from redux-store\n     */\n    const genomeType = useSelector((state) => state.genomeType);\n    const sequences_ = useSelector((state) => state.MSASeq);\n    const match = useSelector((state) => state.matchScore);\n    const mismatch = useSelector((state) => state.mismatchPenalty);\n    const gap = useSelector((state) => state.gapPenalty);\n    const msaAlgo = useSelector((state) => state.msaAlgo);\n    const msaOrder = useSelector((state) => state.msaOrder);\n    const similarityMatrixName =\n        useSelector((state) => state.similarityMatrixName);\n    const DNASimilarityMatrix =\n        useSelector((state) => state.DNASimilarityMatrix);\n\n    /**\n     * slicing sequences according to the given range\n     */\n    const sequences = sequences_.map((element) => getSubstring(element));\n\n    const sequencesNames = sequences_.map((element) => element.name);\n\n    /**\n     * Callback function when data is received\n     * @param {Object} data - data from backend API\n     * @param {Number} data.error - error status\n     * @param {Object} data.respone - actual data\n     */\n    const onReceive = (data) => {\n        console.log(data);\n        setloading(false);\n        if (data.error === undefined) {\n            setResult({\n                result: data.response.result,\n                input: {sequences, sequencesNames, match, mismatch, gap,\n                    genomeType, similarityMatrixName, DNASimilarityMatrix}});\n        } else if (data.error === 400) {\n            dispatch(setSnackBar('Plese check your input'));\n        } else {\n            dispatch(setSnackBar('Could not load results. Try again later'));\n        }\n    };\n\n    /**\n     * Callback function when Submit button is clicked\n     */\n    const onSubmit = () => {\n        /**\n         * selecting the endpoint based on the algorithm type\n         */\n        if (msaAlgo === '2') {\n            if (msaOrderValidate(msaOrder, sequences.length)) {\n                setResult(undefined);\n                setloading(true);\n                fetchMSAProgressive(\n                    sequences,\n                    msaOrder,\n                    match,\n                    mismatch,\n                    gap,\n                    genomeType,\n                    similarityMatrixName,\n                    DNASimilarityMatrix,\n                    onReceive);\n            } else {\n                dispatch(setSnackBar('Invalid pairing order.'));\n            }\n        } else {\n            setResult(undefined);\n            setloading(true);\n            fetchMSAProgressiveOptimal(\n                sequences,\n                match,\n                mismatch,\n                gap,\n                genomeType,\n                similarityMatrixName,\n                DNASimilarityMatrix,\n                onReceive);\n        }\n    };\n    return (\n        <div>\n            <h2>MSA Mode</h2>\n            <Box boxShadow={3} padding={5} marginBottom={3}>\n                <GenomeTypeInput/>\n            </Box>\n            <MSAInput />\n            <Button\n                variant=\"contained\"\n                fullWidth\n                color=\"primary\"\n                onClick={onSubmit}>\n                Submit\n            </Button>\n            {loading ? <LoadingOverlay /> : ''}\n            <br />\n            {result ?\n                <Box boxShadow={3} padding={3} marginTop={7}>\n                    <div>\n                        <MSAResult\n                            result={result.result}\n                            input={result.input} />\n                    </div>\n                </Box> :\n                ''}\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PropTypes from 'prop-types';\n\n// import css modules\nimport style from './assets/css/image.module.css';\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n\nexport default function ViewMore({title, description}) {\n  const classes = useStyles();\n\n  return (\n    <div className='view' >\n      <div className={classes.root} >\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography\n              className={classes.heading}\n              testid='ViewMore_title'>{title}\n            </Typography>\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <Typography className={style.subTitle}>\n              {description}\n            </Typography>\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n      </div>\n    </div>\n  );\n}\n\n\nViewMore.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\n// Material UI\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\n// import css modules\nimport style from './assets/css/image.module.css';\n\n// import HomeSections component\nimport ViewMore from './ViewMore';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        display: 'flex',\n        // height: 425,\n        width: 300,\n        margin: 25,\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n    DivDecoration: {\n        marginTop: 0,\n        paddingTop: 25,\n    },\n    image: {\n        height: 255,\n        maxWidth: 400,\n        overflow: 'hidden',\n        display: 'block center',\n        width: '75%',\n        borderRadius: 20,\n      },\n\n}));\n\n/**\n * Component to visualize single service\n * @param {String} title - title of the single service\n * @param {String} description - details of the single service\n * @param {node} image - the image of single service\n * @return {React.ReactElement}\n */\n\n\nexport default function SingleService({title, description, image}) {\n    const classes = useStyles();\n\n\n    return (\n        <div>\n\n            <Grid item>\n                <Paper className={classes.paper} >\n\n                    <div className={classes.DivDecoration}>\n                        <img className={style.image} src={image} alt='' />\n                        <h3 className={style.title} >{title}</h3>\n                        <ViewMore\n                            testid='viewMoreId'\n                            title={'More details..'}\n                            description={description} />\n                    </div>\n                </Paper>\n            </Grid>\n\n\n        </div>\n    );\n}\n\nSingleService.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.node,\n  };\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\n\n// import css modules\nimport style from './assets/css/image.module.css';\n\n// import images\nimport analyzeImage from './assets/img/1.jpg';\nimport visualizeImage from './assets/img/2.jpg';\nimport gamePlayImage from './assets/img/3.png';\n\n// import HomeSections component\nimport SingleService from './SingleService';\n\nconst services = [\n     {\n    title: 'Analyze DNA Sequence',\n     description: `Sequences are analyling according to \n        intetnational standards or user customizations.`,\n     image: analyzeImage,\n    },\n\n    {\n    title: 'Visualize DNA Alignment',\n    description: `Results are visualize with \n        user-friendly with matrixes and alignments.`,\n    image: visualizeImage,\n    },\n\n    {\n    title: 'Simple GamePlay',\n    description: `This activity is to some enterainment \n        and also get a basic knowledge about how alignments work.`,\n    image: gamePlayImage,\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: 20,\n    },\n\n}));\n\n/**\n * Component to visualize services of the website\n * @return {React.ReactElement}\n */\n\nexport default function Services() {\n    const classes = useStyles();\n\n    return (\n        <div >\n\n            <h2 className={style.heading}>Services</h2>\n            <p className={style.subHeading}>\n                These are the services providing by this website.\n            </p>\n\n            <Grid container className={classes.root} >\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" >\n\n                        {services.map((service, index) => {\n                            return <SingleService {...service} key={index} />;\n                        })}\n\n                    </Grid>\n\n                    <p>\n                        These services will help you to analyze and visualize\n                        the Bioinformatics sequences with different ways of\n                        alignments and gather more knowledge about these areas.\n                        <br />\n                        This website provide userfriendly visualizations\n                        to easily understand the result.\n                    </p>\n\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 1000,\n  },\n});\n\n/**\n *Component to show the core details of Pairwise\n * @return {React.ReactElement}\n */\n\nexport default function PWCoreDetails() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <Typography component={'span'} variant=\"h4\"\n        gutterBottom testid='typographyHeaderId'>\n        What is Pairwise Alignment\n        <br />\n        <Divider />\n      </Typography>\n\n      <Typography component={'span'} variant=\"body1\" gutterBottom>\n        Pairwise Sequence Alignment is used to identify regions of similarity\n        that may indicate functional, structural and/or evolutionary\n        relationships between two biological sequences\n        (protein or nucleic acid).\n        <br />\n      </Typography>\n\n      <br />\n\n      <Typography component={'span'} variant=\"h5\" gutterBottom>\n        Types of pairwise alignment\n        <br />\n      </Typography>\n\n      <Typography component={'span'} variant=\"subtitle1\" gutterBottom>\n        1. Needleman Wunsch\n        <br />\n      </Typography>\n      <Typography component={'span'} variant=\"subtitle1\" gutterBottom>\n        2. Smith Waterman\n        <br />\n      </Typography>\n\n      <br />\n\n      <Typography component={'span'} variant=\"h6\" gutterBottom>\n        Needleman Wunsch Algorithm\n        <br />\n      </Typography>\n\n      <Typography component={'span'} variant=\"body2\" gutterBottom>\n        This is the most basic and important algorithm of bioinformatics\n        Needleman–Wunsch Algorithm developed by Saul B. Needleman and\n        Christian D. Wunsch in 1970. It was designed to compare biological\n        sequences and was one of the first applications of dynamic programming\n         to the biological sequence comparison. This algorithm is usually used\n          for global alignment of two sequences (nucleotide or amino acids).\n          which now find application in the Human Genome Project.\n        <br />\n      </Typography>\n\n      <br />\n\n      <Typography component={'span'} variant=\"h6\" gutterBottom>\n\n        Smith Waterman Algorithm\n        <br />\n      </Typography>\n\n      <Typography component={'span'} variant=\"body2\" gutterBottom>\n        The Smith-Waterman algorithm which is also called as local alignment\n        is a database search algorithm\n        developed byT.F. Smith and M.S. Waterman, and based\n        on an earlier model appropriately named Needleman and Wunsch\n        after its original creators. The S-W Algorithm\n        implements a technique called dynamic programming, which\n        takes alignments of any length, at any location, in any\n        sequence, and determines whether an optimal alignment\n        can be found. Based on these calculations, scores or\n        weights are assigned to each character-to-character\n        comparison: positive for exact matches/substitutions,\n        negative for insertions/deletions. In weight matrices,\n        scores are added together and the highest scoring alignment is reported.\n        <br />\n      </Typography>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\n// import HomeSections component\nimport PWCoreDetails from './PWCoreDetails';\n\nconst ExpansionPanel = withStyles({\n  root: {\n    'border': '1px solid rgba(0, 0, 0, .125)',\n    'boxShadow': 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    'backgroundColor': 'rgba(0, 0, 0, .03)',\n    'borderBottom': '1px solid rgba(0, 0, 0, .125)',\n    'marginBottom': -1,\n    'minHeight': 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\n/**\n *Component to show the details of Pairwise to expansion panel\n * @return {React.ReactElement}\n */\n\nexport default function PairwiseDetails() {\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    /* istanbul ignore next */\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n      <ExpansionPanel\n        testid='expansionPanelId'\n        square expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n        >\n        <ExpansionPanelSummary testid='expansionPanelSummaryId'\n            aria-controls=\"panel1d-content\" id=\"panel1d-header\"\n        >\n            <Typography component={'span'} testid='typographyId1'>\n                Want to know about Pairwise alignment? Click here\n            </Typography>\n        </ExpansionPanelSummary>\n\n        <ExpansionPanelDetails testid='expansionPanelDetailsId'>\n          <Typography component={'span'} testid='typographyId1'>\n            {/* Details of PW in PWCoreDetails component*/}\n            <PWCoreDetails />\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    maxWidth: 1000,\n  },\n});\n\n/**\n *Component to show the core details of MSA Alignment\n * @return {React.ReactElement}\n */\n\nexport default function MSACoreDetails() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n\n      <Typography component={'span'} variant=\"h4\"\n        gutterBottom testid='typographyHeaderId'>\n        What is MSA Alignment\n        <br />\n        <Divider />\n      </Typography>\n\n      <Typography component={'span'} variant=\"body1\" gutterBottom>\n        Multiple Sequence Alignment (MSA) is generally the alignment\n        of three or more biological sequences (protein or nucleic acid)\n        of similar length. From the output, homology can be inferred and\n        the evolutionary relationships between the sequences studied.\n        <br />\n      </Typography>\n\n      <br />\n\n      <Typography component={'span'} variant=\"h5\" gutterBottom>\n        Types of MSA alignment\n        <br />\n      </Typography>\n\n      <Typography component={'span'} variant=\"subtitle1\" gutterBottom>\n        1. Progressive\n        <br />\n      </Typography>\n      <Typography variant=\"subtitle1\" gutterBottom>\n        2. Progressive Optimal\n        <br />\n      </Typography>\n\n        <br />\n\n      <Typography component={'span'} variant=\"h6\" gutterBottom>\n        Progressive Algorithm\n        <br />\n      </Typography>\n\n      <Typography component={'span'} variant=\"body2\" gutterBottom>\n        The most widely used approach to multiple sequence alignments\n        uses a heuristic search known as progressive technique.\n        Progressive alignment builds up a final MSA by combining pairwise\n        alignments beginning with the most similar pair and progressing\n        to the most distantly related.\n        <br />\n      </Typography>\n\n      <br />\n\n      <Typography component={'span'} variant=\"h6\" gutterBottom>\n        Progressive Optimal Algorithm\n        <br />\n      </Typography>\n\n      <Typography component={'span'} variant=\"body2\" gutterBottom>\n        This is also same as the Progressive Algorithm only difference\n        of Progressive Optimal Algorithm is user define the pairs of alignment.\n        So this is very fast algorithm to get the final result.\n        <br />\n      </Typography>\n\n      <br />\n\n    </div>\n  );\n}\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport MuiExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MuiExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\n\n// import HomeSections component\nimport MSACoreDetails from './MSACoreDetails';\n\nconst ExpansionPanel = withStyles({\n  root: {\n    'border': '1px solid rgba(0, 0, 0, .125)',\n    'boxShadow': 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0,\n    },\n    '&:before': {\n      display: 'none',\n    },\n    '&$expanded': {\n      margin: 'auto',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n  root: {\n    'backgroundColor': 'rgba(0, 0, 0, .03)',\n    'borderBottom': '1px solid rgba(0, 0, 0, .125)',\n    'marginBottom': -1,\n    'minHeight': 56,\n    '&$expanded': {\n      minHeight: 56,\n    },\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0',\n    },\n  },\n  expanded: {},\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiExpansionPanelDetails);\n\n/**\n *Component to show the details of MSA to expansion panel\n * @return {React.ReactElement}\n */\n\nexport default function PairwiseDetails() {\n  const [expanded, setExpanded] = React.useState('panel1');\n\n  const handleChange = (panel) => (event, newExpanded) => {\n    /* istanbul ignore next */\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  return (\n    <div>\n      <ExpansionPanel\n        testid='expansionPanelId'\n        square expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}\n        >\n        <ExpansionPanelSummary testid='expansionPanelSummaryId'\n            aria-controls=\"panel1d-content\" id=\"panel1d-header\"\n        >\n            <Typography component={'span'} testid='typographyId1'>\n                Want to know about MSA alignment? Click here\n            </Typography>\n        </ExpansionPanelSummary>\n\n        <ExpansionPanelDetails testid='expansionPanelDetailsId'>\n          <Typography component={'span'} testid='typographyId2'>\n            {/* Details of MSA in MSACoreDetails component*/}\n            <MSACoreDetails />\n\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PropTypes from 'prop-types';\n\n/**\n * Component to visualize Snackbar\n * @param {String} message - massage of the snackbar\n * @return {React.ReactElement}\n */\n\nexport default function SimpleSnackbar({message}) {\n  const [open, setOpen] = React.useState(true);\n\n//   const handleClick = () => {\n//     setOpen(true);\n//   };\n\n  const handleClose = (event, reason) => {\n    // if (reason === 'clickaway') {\n    //   return;\n    // }\n\n    setOpen(false);\n  };\n\n  return (\n      <Snackbar\n        testid='snackbarId'\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={open}\n        autoHideDuration={6000}\n        onClose={handleClose}\n        message={message}\n        action={\n          <React.Fragment>\n            <Button\n                testid='buttonId'\n                color=\"secondary\" size=\"small\"\n                onClick={handleClose}>\n              close\n            </Button>\n            <IconButton\n                testid='iconButtonId'\n                size=\"small\"\n                aria-label=\"close\"\n                color=\"inherit\"\n                onClick={handleClose}>\n              <CloseIcon fontSize=\"small\" />\n            </IconButton>\n          </React.Fragment>\n        }\n      />\n  );\n}\nSimpleSnackbar.propTypes = {\n    message: PropTypes.string,\n  };\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    position: {\n      marginTop: '20px',\n      marginLeft: '85%',\n    },\n  }));\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const {children, classes, onClose, ...other} = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n            aria-label=\"close\"\n            className={classes.closeButton}\n            onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\n/**\n * Component to visualize a Alert\n * @param {String} viewResult - type of result\n * @param {String} title - title of the alert\n * @param {String} description - description of the alert\n * @return {React.ReactElement}\n */\n\nexport default function CustomizedDialogs({viewResult, title, description}) {\n    const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n\n    {\n      viewResult?\n        <Button\n        testid='saveButtonId'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={<VisibilityIcon />}\n        onClick={handleClickOpen}\n      >\n        view Result\n        </Button> :\n        <Button\n        testid='saveButtonId'\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        className={classes.button}\n        startIcon={<SaveIcon />}\n        onClick={handleClickOpen}\n        >\n        Save\n        </Button>\n    }\n      <Dialog\n        testid='dialogId'\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n        >\n        <DialogTitle\n            testid='dialogTitleId'\n            id=\"customized-dialog-title\"\n            onClose={handleClose}\n            >\n          {title}\n        </DialogTitle>\n        <DialogContent testid='dialogContentId' dividers>\n          <Typography testid='typographyId' gutterBottom>\n            {description}\n          </Typography>\n        </DialogContent>\n        <DialogActions testid='dialogActionsId'>\n          <Button\n            testid='closeButtonId'\n            autoFocus onClick={handleClose}\n            color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nCustomizedDialogs.propTypes = {\n    viewResult: PropTypes.bool,\n    title: PropTypes.string,\n    description: PropTypes.string,\n  };\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport List from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\n\n// import HomeSections component\nimport Snackbar from './Snackbar';\nimport Alert from './Alert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: 'auto',\n  },\n  cardHeader: {\n    padding: theme.spacing(1, 2),\n  },\n  list: {\n    width: 400,\n    height: 230,\n    backgroundColor: theme.palette.background.paper,\n    overflow: 'auto',\n  },\n  button: {\n    margin: theme.spacing(0.5, 0),\n  },\n}));\n\n\nfunction not(a, b) {\n  return a.filter((value) => b.indexOf(value) === -1);\n}\n\nfunction intersection(a, b) {\n  return a.filter((value) => b.indexOf(value) !== -1);\n}\n\n// function union(a, b) {\n//   return [...a, ...not(b, a)];\n// }\n\n/**\n *Component is to move the items of game\n * @return {React.ReactElement}\n */\nexport default function TransferList() {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([]);\n  // const [answer, setAnswer] = React.useState(false);\n  const [Alertcomponent, setAlertcomponent] = React.useState(null);\n\n  // update the sentences\n  const [left, setLeft] = React.useState(\n      ['Good for same length',\n      'Can compaire two sequences',\n      'Can compare more than 2 sequeneces',\n    ]);\n\n  const [right, setRight] = React.useState(\n      ['Time proportianal to O(n^2)',\n      'Easy to calculate',\n      'Time proposinal based on no of input sequences',\n    ]);\n\n    const pairwise =\n        ['Good for same length',\n        'Can compaire two sequences',\n        'Time proportianal to O(n^2)',\n        'Easy to calculate',\n        ];\n\n    const msa =\n        ['Can compare more than 2 sequeneces',\n        'Time proposinal based on no of input sequences',\n        ];\n\n\n  const leftChecked = intersection(checked, left);\n  const rightChecked = intersection(checked, right);\n\n  /*\n    This function is to mark an unmark items\n  */\n  const handleToggle = (value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const numberOfChecked = (items) => intersection(checked, items).length;\n\n  // const handleToggleAll = (items) => () => {\n  //   if (numberOfChecked(items) === items.length) {\n  //     setChecked(not(checked, items));\n  //   } else {\n  //     setChecked(union(checked, items));\n  //   }\n  // };\n\n  /*\n    This function is to change left side selected item move to right\n  */\n  const handleCheckedRight = () => {\n    setRight(right.concat(leftChecked));\n    setLeft(not(left, leftChecked));\n    setChecked(not(checked, leftChecked));\n  };\n\n    /*\n    This function is to change right side selected item move to left\n  */\n\n  const handleCheckedLeft = () => {\n    setLeft(left.concat(rightChecked));\n    setRight(not(right, rightChecked));\n    setChecked(not(checked, rightChecked));\n  };\n\n  const customList = (title, items) => (\n    <Card testid='cardId'>\n      <CardHeader testid='cardHeaderId'\n        className={classes.cardHeader}\n        // avatar={\n        //   <Checkbox\n        //     testid='checkBoxId'\n        //     onClick={handleToggleAll(items)}\n        //     checked=\n        //     {numberOfChecked(items) === items.length && items.length !== 0}\n        //     indeterminate=\n        //     {numberOfChecked(items) !== items.length &&\n        //         numberOfChecked(items) !== 0}\n        //     disabled={items.length === 0}\n        //     inputProps={{'aria-label': 'all items selected'}}\n        //   />\n        // }\n        title={title}\n        subheader={`${numberOfChecked(items)}/${items.length} selected`}\n      />\n      <Divider testid='dividerId' />\n      <List className={classes.list} dense component=\"div\" role=\"list\"\n        testid='listId'>\n        {items.map((value) => {\n          const labelId = `transfer-list-all-item-${value}-label`;\n\n          return (\n            <ListItem\n                testid='listItemId'\n                key={value}\n                role=\"listitem\"\n                button\n                onClick={handleToggle(value)}\n            >\n              <ListItemIcon testid='listItemIconId'>\n                <Checkbox testid='checkBox2Id'\n                  checked={checked.indexOf(value) !== -1}\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{'aria-labelledby': labelId}}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={` ${value}`} />\n            </ListItem>\n          );\n        })}\n        <ListItem />\n      </List>\n    </Card>\n  );\n\n  const instruction = {\n    message: 'Select and move the rows into relavant alignment.',\n  };\n\n  const rightAnswerAlert = {\n    viewResult: true,\n    title: 'Congrats!',\n    description: 'Your anser is right.',\n  };\n\n  const wrongAnswerAlert = {\n    viewResult: true,\n    title: 'Try again!',\n    description: 'Your anser is wrong.',\n  };\n\n  const checkResult = () => {\n    if (left.length === pairwise.length && right.length === msa.length) {\n        return (\n          setAlertcomponent(\n          <Alert onClick = {checkResult} {...rightAnswerAlert} />,\n          )\n        );\n    } else {\n      return (\n        setAlertcomponent(\n        <Alert onClick = {checkResult} {...wrongAnswerAlert} />,\n        )\n      );\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container testid='gridId'\n          spacing={2}\n          justify=\"center\"\n          alignItems=\"center\"\n          className={classes.root}\n      >\n        <Grid item testid='gridItemId1'>\n          {customList('Pairwise Alignment', left)}</Grid>\n        <Grid item testid='gridItemId2'>\n          <Grid container direction=\"column\" alignItems=\"center\"\n            testid='gridContainerId'>\n            <Button testid='buttonId1'\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.button}\n              onClick={handleCheckedRight}\n              disabled={leftChecked.length === 0}\n              aria-label=\"move selected right\"\n            >\n              &gt;\n            </Button>\n\n            <Button testid='buttonId2'\n              onClick = {checkResult}\n              >{\n                Alertcomponent?\n                  'Re-submit':\n                    'Submit'}\n                </Button>\n\n              {Alertcomponent}\n\n            <Button testid='buttonId3'\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.button}\n              onClick={handleCheckedLeft}\n              disabled={rightChecked.length === 0}\n              aria-label=\"move selected left\"\n            >\n              &lt;\n            </Button>\n          </Grid>\n        </Grid>\n        <Snackbar {...instruction} testid='snackbarId' />\n        <Grid item testid='gridItemId3'>\n          {customList('MSA Alignment', right)}</Grid>\n\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\n\n// import HomeSections component\nimport Game from './Game';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\n/**\n *function is to animation of dialog screen\n * @return {Component}\n */\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n/**\n *Component to open a dialog screen\n * @return {React.ReactElement}\n */\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}\n        testid='buttonId'>\n        Knowlege Game\n      </Button>\n      <Dialog fullScreen open={open} testid='dialogId'\n        onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar} testid='appBarId'>\n          <Toolbar testid='toolbarId'>\n            <IconButton edge=\"start\" testid='iconButtonId'\n                color=\"inherit\" onClick={handleClose} aria-label=\"close\" >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}\n              testid='typographyId'>\n                Test your knowledge of alignment\n            </Typography>\n            <Button\n              autoFocus\n              color=\"inherit\"\n              onClick={handleClose}\n              testid='InnerButtonId'\n              >Close</Button>\n          </Toolbar>\n        </AppBar>\n        <Game />\n\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\n// import css modules\nimport style from './assets/css/image.module.css';\n\n// import components\nimport PairwaiseDetails from './Details/PairwiseDetails';\nimport MSADetails from './Details/MSADetails';\nimport DialogScreen from './DialogScreen';\n\n// import react-redux\nimport {useDispatch, useSelector} from 'react-redux';\nimport {setDrawerOpen} from '../../Redux/Actions/Mode';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '80%',\n        marginTop: 80,\n        marginLeft: '11%',\n        marginBottom: 100,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n    },\n    image: {\n        height: 255,\n        maxWidth: 400,\n        overflow: 'hidden',\n        display: 'block center',\n        width: '100%',\n        borderRadius: 20,\n      },\n      details: {\n          marginTop: 50,\n      },\n}),\n);\n\n\n/**\n * Component to visualize one step path\n * @param {String} HeadTitle - Main titile of the VerticalLinearStepper\n * @param {String} title - title of each step(title1,title2,title3,title4)\n * @param {String} step - description of each step(step1,step2,step3,step4)\n * @param {node} image - the image in the VerticalLinearStepper\n * @return {React.ReactElement}\n */\n\n// eslint-disable-next-line max-len\nexport default function VerticalLinearStepper({HeadTitle, image, title1, title2, title3, title4, step1, step2, step3, step4}) {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n    const drawerOpenStatus = useSelector((state) => state.drawerOpen);\n\n    const dispatch = useDispatch();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const onMove = () =>{\n        dispatch(setDrawerOpen(!drawerOpenStatus));\n    };\n\n    function getSteps() {\n        return [\n            `${title1}`,\n            `${title2}`,\n            `${title3}`,\n            `${title4}`,\n        ];\n    }\n    function getStepContent(step) {\n        switch (step) {\n            case 0:\n                return `${step1}`;\n            case 1:\n                return `${step2}`;\n            case 2:\n                return `${step3}`;\n            case 3:\n                return `${step4}`;\n            default:\n                /* istanbul ignore next */\n                return 'Unknown step';\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n\n            <h2>{HeadTitle}</h2>\n\n            <Stepper activeStep={activeStep} orientation=\"vertical\"\n                testid='stepperId'>\n                {steps.map((label, index) => (\n                    <Step key={label} testid='stepId'>\n                        <StepLabel testid='stepLabelId'>{label}</StepLabel>\n                        <StepContent testid='stepContentId'>\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                    <img\n                                        className={style.img}\n                                        src={image} alt=''\n                                    />\n\n                                    <Typography testid='typographyId'>\n                                        {getStepContent(index)}\n                                    </Typography>\n\n                                    <Button testid='backButtonId'\n                                        id = 'BackButtonId'\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        className={classes.button}\n                                    >\n                                        Back\n                                    </Button>\n                                    <Button testid='nextButtonId'\n                                        id = 'NextButtonId'\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ?\n                                         'Finish' : 'Next'}\n                                    </Button>\n\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n\n                ))}\n            </Stepper>\n            {activeStep === steps.length && (\n                <Paper square elevation={0} className={classes.resetContainer}\n                    testid='paperId'>\n                    <Typography component={'span'} testid='finishTypographyId'>\n                        All steps completed - you&apos;re finished\n                    </Typography>\n                    <Button onClick={handleReset} className={classes.button}\n                        id = 'ResetButtonId'\n                        testid='resetButtonId'>\n                        Reset\n                    </Button>\n                    <br />\n                    <Button testid='finalButtonId'\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={onMove}\n                        >\n                    {\n                        `${HeadTitle}` === 'Pairwise' ?\n                            'Go To Pairwise Alignment' :\n                        `${HeadTitle}` === 'MSA' ?\n                            'Go To MSA Alignment':\n                            'Go To Game Alignment'\n                    }\n                    </Button>\n                </Paper>\n\n            )}\n\n            <div className={classes.details}>\n\n                {\n                    `${HeadTitle}` === 'Pairwise' ?\n                        <PairwaiseDetails testid = 'testPWDetails' /> :\n                     `${HeadTitle}` === 'MSA' ?\n                        <MSADetails testid = 'testPWDetails' /> :\n                        <DialogScreen />\n                }\n            </div>\n        </div>\n    );\n}\nVerticalLinearStepper.propTypes = {\n    HeadTitle: PropTypes.string,\n    image: PropTypes.node,\n    title1: PropTypes.string,\n    title2: PropTypes.string,\n    title3: PropTypes.string,\n    title4: PropTypes.string,\n    step1: PropTypes.string,\n    step2: PropTypes.string,\n    step3: PropTypes.string,\n    step4: PropTypes.string,\n  };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n// import component\nimport StepByStep from './StepByStep';\n\n// import css modules\nimport style from './assets/css/image.module.css';\n\n// icons\nimport Icon from '@material-ui/core/Icon';\nimport DnaIcon from '../../assets/icons/dna.svg';\nimport SportsEsportsRoundedIcon from '@material-ui/icons/SportsEsportsRounded';\n\n// images\nimport msaImage from './assets/img/Steps/MSA.png';\nimport pwImage from './assets/img/Steps/pw.png';\nimport gameImage from './assets/img/Steps/game.jpg';\n\n\nconst pairwiseData = {\n  HeadTitle: 'Pairwise',\n  image: pwImage,\n  title1: `Select the BioInformatic Pairwise Alignment`,\n  title2: `Enter your DNA sequences`,\n  title3: `Select and enter your variables`,\n  title4: `Get final results`,\n  step1: `First click the menu icon. \n          Then you can see some menu items in leftside.\n          After that click 'PairAlign' to visit Pairwise Alignment.`,\n  step2: `This alignment needs two sequences.\n          There are many options to enter the sequences.\n          You can type your two DNA sequences, Upload text file with \n          'FASTA' format or Query from database by using 'Ensembl-id'.`,\n  step3: `First you need to select a alignment type. Then either you can choose\n          scoring method 'Basic' or 'Extended' According to that\n          you need to enter variables.\n          'Extended' is more advanced and user customizable option to user. \n          If you willing to change the values \n          you can enter new values and try the result.`,\n  step4: `If you are finished the all above steps just click \n        'Enter' to get the result. This may can get few \n          secounds to visualize the result with final alignment with matrix.`,\n};\n\nconst MSAData = {\n  HeadTitle: 'MSA',\n  image: msaImage,\n  title1: `Select the BioInformatic MSA Alignment`,\n  title2: `Enter your DNA sequences`,\n  title3: `Select and enter your variables`,\n  title4: `Get final results`,\n  step1: `First click the menu icon. Then you can see some menu\n        items in leftside. After that click 'MSA' to visit\n        Multiple Sequence Alignment.`,\n  step2: `This alignment can give input upto six sequences.\n        There are many options to enter the sequences.\n        You can type your two DNA sequences, Upload text file with \n        'FASTA' format or Query from database by using 'Ensembl-id'.`,\n   step3: `First you need to select 'Genome Type'. Then either you can choose \n        'Algorithm Type' Progressive Algorithm or User Defined algorithm.\n        'Progressive Algorithm' is the most standard way and \n        'User Defined algorithm' is more custamizable option to user.\n        If you willing to change the values you can \n        enter new values and try the result.`,\n  step4: `If you are finished the all above steps just click \n      'Enter' to get the result. This may can get few \n      secounds/minutes to visualize the result.`,\n};\n\nconst gameData = {\n  HeadTitle: 'Gameplay',\n  image: gameImage,\n  title1: `Select the Gameplay`,\n  title2: `Read the instruction`,\n  title3: `Enter your answer`,\n  title4: `Click enter to get score`,\n  step1: `First click the menu icon. \n        Then you can see some menu items in leftside. After that click \n        'Alignment Game' to play Alignment Game.`,\n  step2: `Read the instruction...`,\n  step3: `There are defaultly set values of \n         'mismatch' and 'gap'. You need to enter your answers.`,\n  step4: `If you are finished the all above steps just \n        click 'Enter' to get the result. This may can get \n        few secounds to visualize the score.`,\n};\n\n\nfunction TabPanel(props) {\n  const {children, value, index, ...other} = props;\n\n  return (\n    <Typography component={'span'} testid='typography2Id'\n      // component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box testid='boxId' p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    'id': `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n    // width: '100%',\n    // backgroundColor: theme.palette.background.paper,\n\n    paddingLeft: '10%',\n    paddingRight: '10%',\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 50,\n  },\n}));\n\n/**\n *Component to visualize steps of the website to get alignments\n * @return {React.ReactElement}\n */\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n\n      <h2 className={style.heading}>Steps</h2>\n      <p className={style.subHeading}>\n        This will help you how to enter sequences and\n        step by stept to get the final results.\n      </p>\n\n      <AppBar position=\"static\" color=\"default\" testid='appBarId'>\n        <Tabs testid='tabsId'\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n          centered\n        >\n          <Tab testid='tabsId1' label=\"Pairwise Alignment\"\n            icon={\n            <Icon key='1'><img src={DnaIcon} alt=\"PairAlign Icon\" /></Icon>\n            } {...a11yProps(0)} />\n\n          <Tab testid='tabsId2' label=\"MSA Alignment\"\n            icon={\n              <span>\n                <Icon><img src={DnaIcon} alt=\"MSA Icon\" /></Icon>\n                <Icon><img src={DnaIcon} alt=\"MSA Icon\" /></Icon>\n              </span>\n            } {...a11yProps(1)} />\n\n          <Tab testid='tabsId3' label=\"Game Play\"\n            icon={<SportsEsportsRoundedIcon />} {...a11yProps(2)} />\n\n        </Tabs>\n      </AppBar>\n\n      <TabPanel value={value} index={0} testid='tabPanelId1'>\n        <StepByStep {...pairwiseData} testid='tabPstepByStepId1'/>\n      </TabPanel>\n\n      <TabPanel value={value} index={1} testid='tabPanelId2'>\n      <StepByStep {...MSAData} testid='tabPstepByStepId2' />\n      </TabPanel>\n\n      <TabPanel value={value} index={2} testid='tabPanelId3'>\n      <StepByStep {...gameData} testid='tabPstepByStepId3' />\n      </TabPanel>\n\n    </div>\n  );\n}\n","/* eslint-disable max-len */\nimport React from 'react';\nimport {withStyles, makeStyles} from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport {useDispatch} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    height: theme.spacing(3),\n  },\n}));\n\nconst iOSBoxShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n  {\n    value: 0,\n  },\n  {\n    value: 25,\n  },\n  {\n    value: 50,\n  },\n  {\n    value: 75,\n  },\n  {\n    value: 100,\n  },\n];\n\nconst IOSSlider = withStyles({\n  root: {\n    color: '#3880ff',\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    'height': 28,\n    'width': 28,\n    'backgroundColor': '#fff',\n    'boxShadow': iOSBoxShadow,\n    'marginTop': -14,\n    'marginLeft': -14,\n    '&:focus, &:hover, &$active': {\n      'boxShadow': '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    'left': 'calc(-50% + 12px)',\n    'top': -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#bfbfbf',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\n/**\n * Component to visualize the rating slider\n * @param {prop} prop - Get slider props\n * @return {React.ReactElement}\n */\n\nexport default function CustomizedSlider(props) {\n  const classes = useStyles();\n// eslint-disable-next-line\n  const dispatch = useDispatch();\n\n  const [value, setValue] = React.useState(75);\n\n  const handleChange = (event, newValue) => {\n    /* istanbul ignore next */\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.margin}>\n      <IOSSlider\n        testid='IOSSliderId'\n        aria-label=\"ios slider\"\n        // defaultValue={75}\n        marks={marks}\n        valueLabelDisplay=\"on\"\n        // getAriaValueText={valuetext}\n        value={value}\n        onChange={handleChange}\n        />\n        {/* {value} */}\n    </div>\n  );\n}\n\nCustomizedSlider.propTypes = {\n  inputSliderAction: PropTypes.func,\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\n// import css modules\nimport style from './assets/css/image.module.css';\n\n// import HomeSections component\nimport Alert from './Alert';\nimport Rating from './Rating';\n\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    // minWidth: 650,\n  },\n  root: {\n    paddingLeft: '20%',\n    paddingRight: '20%',\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n    marginTop: 50,\n    paddingBottom: 50,\n  },\n  position: {\n    marginTop: '20px',\n    marginLeft: '85%',\n  },\n}));\n\n\nfunction createData(name, rate) {\n  return {name, rate};\n}\n\nconst rows = [\n  createData('Atraction of website', <Rating />),\n  createData('Satistification of fuctionalities', <Rating />),\n  createData('Satistification of visualizing the result', <Rating />),\n  createData('Satistification of response time', <Rating />),\n];\n\nconst details = {\n  title: 'Thank you!',\n  description: 'This help us to imorove our website better in the future.',\n};\n\n/**\n *Component to get feedback\n * @return {React.ReactElement}\n */\n\nexport default function Feedback() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <h2 className={style.heading}>Give us feedback</h2>\n      <p className={style.subHeading}>\n        We are happy to have your valueble feedback to\n        improve our website better.\n        </p>\n\n      <TableContainer testid='tableContainerId' component={Paper}>\n        <Table\n          testid='tableId' className={classes.table} aria-label=\"caption table\">\n          <caption>We are happy to get your feedback.</caption>\n          <TableHead testid='tableHeadId'>\n            <TableRow testid='tableRowId'>\n              <TableCell testid='tableCellId1'>Facilities</TableCell>\n              <TableCell testid='tableCellId2' align=\"right\">Ratings</TableCell>\n\n            </TableRow>\n          </TableHead>\n          <TableBody testid='tableBodyId'>\n            {rows.map((row) => (\n              <TableRow testid='tableRowId2' key={row.name}>\n                <TableCell testid='tableCellId3' component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell\n                  testid='tableCellId4' align=\"right\">{row.rate}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <div className={classes.position}>\n        <Alert {...details} />\n      </div>\n\n    </div>\n  );\n}\n","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\n\n// import components\nimport Services from './Services';\nimport Steps from './Steps';\nimport Feedback from './Feedback';\n\n/**\n * Component to visualize Home page\n * @return {React.ReactElement}\n */\n\nexport default function HomeSection() {\n    return (\n        <div>\n            <Services />\n            <Divider />\n            <Steps />\n            <Feedback />\n        </div>\n    );\n}\n\n","import React from 'react';\nimport {Avatar} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    avatar: {\n        height: '25px',\n        width: '25px',\n        fontSize: '14px',\n    },\n    A: {\n        color: 'white',\n        backgroundColor: 'red',\n    },\n    C: {\n        color: 'white',\n        backgroundColor: 'blue',\n    },\n    G: {\n        color: 'white',\n        backgroundColor: 'purple',\n    },\n    T: {\n        color: 'white',\n        backgroundColor: 'green',\n    },\n    ga: {\n        color: 'black',\n        backgroundColor: 'black',\n    },\n    e: {\n        color: 'black',\n        backgroundColor: 'black',\n    },\n\n}));\n\n/**\n * Component to get the type(color and letter) of an element in a sequence\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function Base(props) {\n    const classes = useStyles();\n    const index = props.index;\n    const base = props.base;\n\n    return (\n        <Avatar variant='square' id={index}\n            className={`${classes.avatar} ${classes[base]}`} >\n            {base}</Avatar>\n    );\n}\n\nBase.propTypes = {\n    index: PropTypes.number,\n    base: PropTypes.string,\n};\n","import React from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const {children, classes, onClose, ...other} = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton\n                aria-label=\"close\"\n                className={classes.closeButton}\n                onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n/**\n * Component to handle popup dialog for game instructions\n * @return {React.ReactElement}\n */\nexport default function GameInstruction() {\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button\n                testid = \"openBtn\"\n                style={{fontWeight: 'bolder'}}\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={handleClickOpen}>\n                    instructions\n            </Button>\n            <Dialog\n                testid={'dialog'}\n                onClose={handleClose}\n                aria-labelledby=\"customized-dialog-title\"\n                open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    How to Play\n                </DialogTitle>\n                <DialogContent dividers>\n                        <ul>\n                            <li><h3>Click on an element in the sequence\n                                    to move the sub sequence starting\n                                    from that point, to the right.</h3></li>\n                            <li><h3 style={{fontWeight: 'bolder'}}>\n                                    Try to avoid unnecessary gaps\n                                    in the middle of the sequences.</h3></li>\n                            <li><h3>Trailing gaps cannot be removed.</h3></li>\n                            <li><h3 style={{fontWeight: 'bolder'}}>\n                                    Increase the identity\n                                    as much as possible.</h3></li>\n                            <li><h3>Change the Match,Mismatch and Gap scores\n                                    to get a higher score.</h3></li>\n                            <li><h3 style={{fontWeight: 'bolder'}}>\n                                    You can go to a best identity state\n                                     you achieved at any time</h3></li>\n                        </ul>\n                        <h3 style={{color: '#af9617'}}>\n                            Hint: start from the left</h3>\n                </DialogContent>\n                <DialogActions>\n                    <Button autoFocus onClick={handleClose}\n                            testid = \"closeBtn\" color=\"primary\">\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n","import React from 'react';\nimport CommonScore from '../CommonScoreSchema/ScoreSchema';\nimport GameInstruction from './GameInstruction';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    title: {\n        fontSize: 24,\n    },\n}));\n\n/**\n * Component to view game instructions and score input\n * @return {React.ReactElement}\n */\nexport default function GamePlay() {\n    const classes = useStyles();\n    return (\n        <div>\n        <h2 className={classes.title}>GamePlay</h2>\n        <GameInstruction />\n        <br />\n        <h3>\n            Change input values for Match score, Mismatch penalty and\n             Gap penalty on your preference</h3>\n        <div style={{textAlign: 'center'}}>\n            <div style={{display: 'inline-block'}}>\n            <CommonScore />\n            </div>\n        </div>\n        </div>\n    );\n}\n\n","import React from 'react';\nimport {Icon} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport DnaIcon from '../../assets/icons/dna.svg';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    table: {\n        maxWidth: 1100,\n        overflowX: 'auto',\n        display: 'block',\n    },\n    iconTable: {\n        display: 'inline-block',\n        float: 'left',\n    },\n}));\n\n/**\n * Component to display two sequences in game\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function GameAlignTable(props) {\n    const classes = useStyles();\n    return (\n        <div>\n            <table className={classes.iconTable}>\n                <tbody>\n                    <tr>\n                        <td style={{minWidth: 50}}>\n                            <Icon><img src={DnaIcon} alt=\"seq 1\" /></Icon>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style={{minWidth: 50}}>\n                            <Icon><img src={DnaIcon} alt=\"seq 2\" /></Icon>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n            <table className={classes.table}>\n                <tbody>\n                    <tr>\n                        {props.align1}\n                    </tr>\n                    <tr>\n                        {props.align2}\n                    </tr>\n                    <tr>\n                        {props.indexLine}\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nGameAlignTable.propTypes = {\n    align1: PropTypes.array,\n    align2: PropTypes.array,\n    indexLine: PropTypes.array,\n};\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {Tooltip} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    labe: {\n        fontWeight: 'bolder',\n    },\n    value: {\n        fontWeight: 'normal',\n        paddingLeft: 10,\n        paddingRight: 30,\n    },\n}));\n\n/**\n * Component to view attributes of game aligning\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function GameLable(props) {\n    const classes = useStyles();\n\n    return (\n        <div style={{float: 'left', paddingLeft: 60, fontSize: 16}}>\n            <Tooltip title={'Maximum identity achieved so far'}\n                placement=\"top\" arrow>\n                <label className={classes.labe} style={{float: 'left'}}>\n                    Best Identity:\n                    <label className={classes.value}>\n                        {props.bestIdentity.toFixed(3)}</label>\n                </label>\n            </Tooltip>\n            <Tooltip title={'Maximum matches achieved so far'}\n                placement=\"top\" arrow>\n                <label className={classes.labe} style={{float: 'left'}}>\n                    Best Matches:\n                    <label className={classes.value}>\n                        {props.bestMatch}</label>\n                </label>\n            </Tooltip>\n            <br/><br/>\n            <label className={classes.labe}>Current Identity\n                <label className={classes.value}>\n                    {props.identity.toFixed(3)}</label>\n            </label>\n            <label className={classes.labe}>Matches:\n                <label className={classes.value}>{props.match}</label>\n            </label>\n            <label className={classes.labe}>Mismatches:\n                <label className={classes.value}>{props.mismatch}</label>\n            </label>\n            <label className={classes.labe}>Gaps:\n                <label className={classes.value}>{props.gap}</label>\n            </label>\n        </div>\n    );\n}\n\nGameLable.propTypes = {\n  match: PropTypes.number,\n  mismatch: PropTypes.number,\n  gap: PropTypes.number,\n  identity: PropTypes.number,\n  bestMatch: PropTypes.number,\n  bestIdentity: PropTypes.number,\n};\n","import React, {useState, useEffect, useRef} from 'react';\nimport Base from './Base';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport {Tooltip, Box} from '@material-ui/core';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport {makeStyles} from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport GamePlay from './GamePlay';\nimport GameAlignTable from './GameAlignTable';\nimport GameLable from './GameLable';\n\nconst useStyles = makeStyles(() => ({\n    seq: {\n        minWidth: 25,\n        minHeight: 25,\n        padding: 4,\n        borderRadius: 2,\n        backgroundColor: '#0a22536e',\n    },\n    match: {\n        minWidth: 25,\n        minHeight: 25,\n        padding: 4,\n        borderRadius: 2,\n        backgroundColor: 'lightgreen',\n    },\n    gameplay: {\n        // backgroundColor: '#b7c0d138',\n        borderRadius: '10px',\n        padding: 20,\n    },\n    box: {\n        // backgroundColor: '#b7c0d138',\n        borderRadius: '10px',\n        padding: 10,\n        paddingBottom: 40,\n        paddingTop: 40,\n    },\n    resetBtn: {\n        marginRight: 20,\n        // color: '#1e2e51',\n        fontWeight: 'bolder',\n    },\n    submitBtn: {\n        // color: '#1e2e51',\n        fontWeight: 'bolder',\n    },\n    bestStateBtn: {\n        // backgroundColor: '#9e9e9499',\n        // color: '#222c5a',\n        fontWeight: 'bolder',\n        padding: 10,\n    },\n}));\n\n/**\n * Component to control the state of the game and view the game sequences\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function GameAlign(props) {\n    const classes = useStyles();\n    const initialInput = props.input;\n    /**\n     * current state of game aligns\n     */\n    const [align, setAlign] = useState(props.input);\n    /**\n     * handle 'back' button\n     * false -> disabled\n     */\n    const [prev, setPrev] = useState(false);\n    /**\n     * maximum identity state\n     */\n    const [bestAlign, setBestAlign] = useState({\n        matches: 0,\n        identity: 0,\n        alignment: {}});\n\n    useEffect(() => {\n        setAlign(props.input);\n        setBestAlign({\n            matches: 0,\n            identity: 0,\n            alignment: {},\n        });\n    }, [props.input]);\n\n    const indexLine = [];\n    const row1 = [];\n    const row2 = [];\n    let match = 0;\n    let mismatch = 0;\n    let gap = 0;\n    let identity = 0;\n    for (let i = 0; i < align.seqA.length; i++) {\n        const index = i;\n        const baseA = align.seqA.charAt(i) === '-' ? 'ga': align.seqA.charAt(i);\n        const titleA = baseA === 'ga' ? 'Remove Gap' :\n            baseA === 'e' ? 'end' : 'move -->';\n        const baseB = align.seqB.charAt(i) === '-' ? 'ga': align.seqB.charAt(i);\n        const titleB = baseB === 'ga' ? 'Remove Gap' :\n            baseB === 'e' ? 'end' : 'move -->';\n        let T = 0;\n        if ((align.seqA.charAt(i) === '-' || align.seqB.charAt(i) === '-') ||\n        (align.seqA.charAt(i) === 'e' || align.seqB.charAt(i) === 'e')) {\n            gap+=1;\n        } else if (align.seqA.charAt(i) === align.seqB.charAt(i)) {\n            match+=1;\n            T = 1;\n        } else {\n            mismatch+=1;\n        }\n        indexLine.push(\n            <td key={index}><h4>{index+1}</h4></td>,\n        );\n        row1.push(\n            <td key={index} testid={'outputSeqA'}>\n                <Tooltip title={titleA} placement=\"top\" arrow>\n                    <span>\n                    <Button\n                        className={T===1? classes.match:classes.seq}\n                        testid={'A' + index}\n                        variant=\"contained\"\n                        size=\"small\"\n                        onClick={() => changeSeqA(index)}\n                        disabled={baseA==='e'?true:false}\n                        style={baseA==='e'? {backgroundColor: '#0a22536e'} : {}}\n                        label={align.seqA.charAt(i)} >\n                            <Base index={index} base={baseA} />\n                    </Button>\n                    </span>\n                </Tooltip></td>,\n        );\n        row2.push(\n            <td key={index} testid={'outputSeqB'}>\n            <Tooltip title={titleB} placement=\"bottom\" arrow>\n                <span>\n                    <Button\n                        className={T===1?classes.match:classes.seq}\n                        testid={'B' + index}\n                        variant=\"contained\"\n                        size=\"small\"\n                        onClick={() => changeSeqB(index)}\n                        disabled={baseB==='e'?true:false}\n                        style={baseB==='e'? {backgroundColor: '#0a22536e'} : {}}\n                        label={align.seqB.charAt(i)} >\n                            <Base index={index} base={baseB} />\n                    </Button>\n                </span>\n            </Tooltip></td>,\n        );\n    }\n\n    identity = match/align.seqA.length;\n\n    /**\n     * if current identity is greater\n     */\n    if (identity>bestAlign.identity) {\n       setBestAlign({\n        matches: match,\n        identity: identity,\n        alignment: align,\n       });\n    }\n\n    /**\n     * change seqA in state object 'align' when button in seqA is clicked\n     * @param {Number} index - index of element in seqA\n     */\n    function changeSeqA(index) {\n        setPrev(true);\n        const lastIndex = align.seqA.length - 1;\n        /**\n         * remove a gap in seqA\n         */\n        if (align.seqA.charAt(index) === '-') {\n            if (align.seqB.charAt(lastIndex) === 'e') {\n                /**\n                 * 'e'-trailing gaps, only one seq has 'e's at a time\n                 * if there is a gap at end of the seqB remove '-' from seqA\n                 * and remove last 'e' of seqB to keep equal lengths\n                 */\n                setAlign({\n                    seqA: align.seqA.substring(0, index) +\n                        align.seqA.substring(index + 1),\n                    seqB: align.seqB.substring(0, lastIndex),\n                });\n            } else {\n                /**\n                 * remove '-' from seqA and add 'e' to the end of seqA\n                 * to keep equal lengths in 2 sequences\n                 */\n                setAlign({\n                    seqA: align.seqA.substring(0, index) +\n                        align.seqA.substring(index + 1) + 'e',\n                    seqB: align.seqB,\n                });\n            }\n        /**\n         * add a gap before element at index in seqA\n         */\n        } else {\n            if (align.seqA.charAt(lastIndex) === 'e') {\n                /**\n                 * if there is a gap at end of the seqA, add '-'\n                 * and remove that 'e' in seqA\n                 */\n                setAlign({\n                    seqA: align.seqA.substring(0, index) + '-' +\n                        align.seqA.substring(index, lastIndex),\n                    seqB: align.seqB,\n                });\n            } else {\n                /**\n                 * add '-' to seqA and 'e' to end of seqB to keep equal lengths\n                 */\n                setAlign({\n                    seqA: align.seqA.substring(0, index) + '-' +\n                        align.seqA.substring(index),\n                    seqB: align.seqB + 'e',\n                });\n            }\n        }\n    }\n\n     /**\n     * change seqB in state object 'align' when button in seqB is clicked\n     * @param {Number} index - index of element in seqB\n     */\n    function changeSeqB(index) {\n        setPrev(true);\n        const lastIndex = align.seqA.length - 1;\n        /**\n         * remove a gap in seqB\n         */\n        if (align.seqB.charAt(index) === '-') {\n            if (align.seqA.charAt(lastIndex) === 'e') {\n                /**\n                 * 'e'-trailing gaps, only one seq has 'e's at a time\n                 * if there is a gap at end of the seqA remove '-' from seqB\n                 * and remove last 'e' of seqA to keep equal lengths\n                 */\n                setAlign({\n                    seqA: align.seqA.substring(0, lastIndex),\n                    seqB: align.seqB.substring(0, index) +\n                        align.seqB.substring(index + 1),\n                });\n            } else {\n                /**\n                 * remove '-' from seqB and add 'e' to the end of seqB\n                 * to keep equal lengths in 2 sequences\n                 */\n                setAlign({\n                    seqA: align.seqA,\n                    seqB: align.seqB.substring(0, index) +\n                        align.seqB.substring(index + 1) + 'e',\n                });\n            }\n         /**\n         * add a gap before element at index in seqB\n         */\n        } else {\n            if (align.seqB.charAt(lastIndex) === 'e') {\n                /**\n                 * if there is a gap at end of the seqB, add '-'\n                 * and remove that 'e' in seqB\n                 */\n                setAlign({\n                    seqA: align.seqA,\n                    seqB: align.seqB.substring(0, index) + '-' +\n                        align.seqB.substring(index, lastIndex),\n                });\n            } else {\n                /**\n                 * add '-' to seqA and 'e' to end of seqB to keep equal lengths\n                 */\n                setAlign({\n                    seqA: align.seqA + 'e',\n                    seqB: align.seqB.substring(0, index) + '-' +\n                        align.seqB.substring(index),\n                });\n            }\n        }\n    }\n\n    /**\n     * set current state with maximum identity state\n     */\n    function setBestIdentityState() {\n        setAlign(bestAlign.alignment);\n        setPrev(true);\n    }\n\n    /**\n     * set current state with initialInput in props.input\n     */\n    function reset() {\n        setAlign(initialInput);\n        setPrev(true);\n    }\n\n    /**\n     * keep previous state\n     * @param {Object} value - align object\n     * @return {Object} - previous state\n     */\n    function usePrevious(value) {\n        const ref = useRef();\n        useEffect(() => {\n          ref.current = value;\n        });\n        return ref.current;\n    }\n\n    /**\n     * variable to keep previous state\n     */\n    const prevState = usePrevious(align);\n    /**\n     * set current state with previous state\n     */\n    function back() {\n        setAlign(prevState);\n        setPrev(false);\n    }\n\n    /**\n     * when submit send alignment details to\n     * callback function in GameSection Component\n     */\n    function onSubmit() {\n        props.fetchAlign({alignA: align.seqA, alignB: align.seqB,\n                        identity: identity});\n    }\n\n    return (\n        <Box className={classes.gameplay}>\n            <GamePlay/>\n            <br /><br />\n            <Box boxShadow={6} className={classes.box}>\n                <div>\n                    <h3>\n                        Sequences can be replaced at any time by the state\n                        with the maximum identity you have achieved.\n                        <br/>Feel free to play and get the\n                         maximum identity possible.\n                    </h3>\n                </div>\n                <Tooltip\n                title={'Go to a state with maximum identity achieved so far'}\n                placement=\"bottom\" arrow>\n                    <Button\n                        testid='bestIdentityBtn'\n                        className={classes.bestStateBtn}\n                        onClick={setBestIdentityState}>\n                        Go to a your best identity state\n                    </Button>\n                </Tooltip>\n                <br/><br/>\n                <GameLable match={match} mismatch={mismatch} gap={gap}\n                    identity={identity} bestMatch={bestAlign.matches}\n                    bestIdentity={bestAlign.identity}/>\n                 <br/><br/><br/><br/>\n                <GameAlignTable align1={row1} align2={row2}\n                indexLine={indexLine}/>\n                <div testid={'checkState'} value={align}/>\n                <br />\n                <Button\n                    testid='prevBtn'\n                    className={classes.resetBtn}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={back}\n                    disabled={prev?false:true}\n                    endIcon={<UndoIcon/>}>\n                    back\n                </Button>\n                <Button\n                    testid='resetBtn'\n                    className={classes.resetBtn}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={reset} endIcon={<RestoreIcon/>}>\n                    Reset\n                </Button>\n                <Button\n                    testid='submitBtn'\n                    variant=\"outlined\"\n                    className={classes.submitBtn}\n                    color=\"primary\"\n                    onClick={onSubmit} endIcon={<Icon>send</Icon>}\n                >\n                    Submit\n                </Button>\n            </Box>\n        </Box>\n    );\n}\n\nGameAlign.propTypes = {\n    input: PropTypes.shape({\n        seqA: PropTypes.string,\n        seqB: PropTypes.string,\n    }),\n    fetchAlign: PropTypes.func,\n};\n\n\n","import React, {useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport {useDispatch} from 'react-redux';\nimport PropTypes from 'prop-types';\n\n/**\n * Component to handle text input\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function GameTextInput(props) {\n    const dispatch = useDispatch();\n    const pattern = /^[AGCT-]+$/;\n    const [inputErr, setInputErr] = useState(false);\n\n    /**\n     * store text input in state and handle error status\n     * @param {Object} event\n     */\n    function inputSeq(event) {\n        dispatch(props.inputAction(event.target.value.trim()));\n        if (!event.target.value.match(pattern)) {\n            setInputErr(true);\n        } else {\n            setInputErr(false);\n        }\n    }\n\n    return (\n        <div>\n            <TextField\n                testid={'inputfield'}\n                multiline\n                rowsMax={4}\n                placeholder={'DNA Sequence'}\n                style={{width: '100%'}}\n                value={props.value}\n                onChange={inputSeq}\n                inputProps={{spellCheck: 'false'}}\n                error = {inputErr}\n                helperText={inputErr ?\n                    'Invalid DNA sequence' : null}\n                >\n            </TextField>\n        </div>\n    );\n}\n\nGameTextInput.propTypes = {\n    inputAction: PropTypes.func,\n    value: PropTypes.string,\n};\n","export const setGameInputA = (input) => {\n    return {\n        type: 'SET_SEQ_A',\n        payload: input,\n    };\n};\n\nexport const setGameInputB = (input) => {\n    return {\n        type: 'SET_SEQ_B',\n        payload: input,\n    };\n};\n","import React, {useState} from 'react';\nimport {Button} from '@material-ui/core';\nimport {useDispatch} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {parseFASTA} from '../../util/FASTA';\n\n/**\n * Component to handle input file upload\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function GameFileUpload(props) {\n    let fileReader;\n    const dispatch = useDispatch();\n    const pattern = /^[AGCT]+$/;\n    const [inputErr, setInputErr] = useState(false);\n\n    const handleFileRead = async () => {\n        const content = fileReader.result;\n        const parsedData =\n            await parseFASTA(content);\n        const sequence = parsedData.sequence.toUpperCase().trim();\n        dispatch(props.inputAction(sequence));\n        if (!sequence.match(pattern)) {\n            setInputErr(true);\n        } else {\n            setInputErr(false);\n        }\n    };\n\n    /**\n     * handle file error\n     * @param {Object} error\n     */\n    const handleError = (error) => {\n        fileReader.abort();\n        console.log(error);\n    };\n\n    /**\n     * read file content\n     * @param {File} file - input file\n     */\n    const handleFileChosen = (file) => {\n        if (file) {\n            fileReader = new FileReader();\n            fileReader.onerror = handleError;\n            fileReader.onloadend = handleFileRead;\n            const extension = file.name.split('.').pop().toLowerCase();\n            if (extension === 'txt') {\n                fileReader.readAsText(file);\n            } else {\n                console.log('invalid file type');\n            }\n        }\n    };\n\n    return (\n        <div className='upload-expense'>\n            <Button variant=\"contained\" color=\"primary\"\n                component=\"label\" size=\"small\" testid={'uploadbtn'}>\n                Upload Text File\n                    <input\n                    type='file'\n                    id='file'\n                    testid='file'\n                    className='input-file'\n                    accept='.txt'\n                    onChange={(e) => handleFileChosen(e.target.files[0])}\n                    style={{display: 'none'}} />\n            </Button>\n            {inputErr ? <div><br />\n                <span style={{color: '#ea0909'}}>invalid input</span>\n            </div> : null}\n            <button style={{display: 'none'}}\n                testid={'handleErrorTest'} onClick={() => handleError()} />\n        </div>\n    );\n}\n\nGameFileUpload.propTypes = {\n    inputAction: PropTypes.func,\n};\n","import React from 'react';\nimport GameTextInput from './GameTextInput';\nimport {Grid} from '@material-ui/core';\nimport {setGameInputA, setGameInputB} from '../../Redux/Actions/Game';\nimport GameFileUpload from './GameFileUpload';\nimport {useSelector} from 'react-redux';\n\n/**\n * Component to display file upload and text input fields for 2 sequences\n * @return {React.ReactElement}\n */\nexport default function GameInput() {\n    return (\n        <div>\n            <Grid container direction=\"column\" spacing={3}>\n                <Grid item>\n                    <h3>Input Sequence 1</h3>\n                    <div testid={'file1'}>\n                    <GameFileUpload\n                        inputAction={setGameInputA}\n                        value={useSelector((state) => state.GameSeqA)} />\n                    </div>\n                    <h3>or</h3>\n                    <h3 >\n                        Type sequence in the input field</h3>\n                    <GameTextInput\n                        inputAction={setGameInputA}\n                        value={useSelector((state) => state.GameSeqA)} />\n                </Grid>\n                <Grid item>\n                    <h3>Input Sequence 2</h3>\n                    <GameFileUpload\n                        inputAction={setGameInputB}\n                        value={useSelector((state) => state.GameSeqB)} />\n                    <h3>or</h3>\n                    <h3 >\n                        Type sequence in the input field</h3>\n                    <GameTextInput\n                        inputAction={setGameInputB}\n                        value={useSelector((state) => state.GameSeqB)} />\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport DoneOutlineRoundedIcon from '@material-ui/icons/DoneOutlineRounded';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n    A: {\n        color: 'red',\n    },\n    C: {\n        color: 'blue',\n    },\n    G: {\n        color: 'purple',\n    },\n    T: {\n        color: 'green',\n    },\n    label: {\n        color: '#7984d3de',\n    },\n    scLabel: {\n        color: '#c7ba78de',\n        paddingRight: 5,\n        fontWeight: 'bolder',\n        fontSize: 17,\n    },\n    sc: {\n        color: '#d3d6f0',\n        paddingRight: 30,\n        fontWeight: 'bolder',\n        fontSize: 16,\n    },\n    box: {\n        backgroundColor: '#141938',\n        color: '#e9e3e3de',\n        borderRadius: '10px',\n        padding: 30,\n        paddingTop: 10,\n        paddingBottom: 40,\n    },\n    table: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    tablerow: {\n        maxWidth: 1100,\n        overflowX: 'scroll',\n        display: 'block',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n}));\n\n/**\n * Component to calculate game scores and view results\n * @param {Object} props - props\n * @return {React.ReactElement}\n */\nexport default function GameResult(props) {\n    const classes = useStyles();\n    const alignA = props.aligns.alignA;\n    const alignB = props.aligns.alignB;\n    const matchScore = props.aligns.match;\n    const mismatchPenanlty = props.aligns.mismatch;\n    const gapPenalty = props.aligns.gap;\n    const identity = props.aligns.identity;\n    /**\n     * array to keep a status icon for each element in alignmet\n     */\n    const row = [];\n    let score = 0;\n    let matchSc = 0;\n    let mismatchSc = 0;\n    let gapSc = 0;\n\n    for (let i = 0; i < alignA.length; i++) {\n        if ((alignA.charAt(i) === '-' || alignB.charAt(i) === '-') ||\n            (alignA.charAt(i) === 'e' || alignB.charAt(i) === 'e')) {\n            score += gapPenalty;\n            gapSc += gapPenalty;\n            row.push({type: <MinimizeIcon />, index: i+1});\n        } else if (alignA.charAt(i) === alignB.charAt(i)) {\n            score += matchScore;\n            matchSc += matchScore;\n            row.push({type: <DoneOutlineRoundedIcon\n                 className={classes[alignA.charAt(i)]} />, index: i+1});\n        } else {\n            score += mismatchPenanlty;\n            mismatchSc += mismatchPenanlty;\n            row.push({type: <CloseRoundedIcon style={{color: '#9b8989'}} />,\n             index: i+1});\n        }\n    }\n\n    const result = row.map(\n        (ele) => <td key={ele.index}>{ele.type}\n            <h4 style={{color: '#868dac'}}>{ele.index}</h4></td>);\n\n    return (\n        <Box className={classes.box}>\n            <h2>Result</h2>\n            <h3>Alignment Status</h3>\n            <table className={classes.tablerow}>\n                <tbody>\n                    <tr>\n                        {result}\n                    </tr>\n                </tbody>\n            </table>\n            <table className={classes.table}>\n                <tbody>\n                    <tr>\n                        <td className={classes.label}><h4>Match</h4></td>\n                        <td><DoneOutlineRoundedIcon\n                            style={{color: '#787d94', marginRight: 15}} /></td>\n                        <td className={classes.label}><h4>Mismatch</h4></td>\n                        <td><CloseRoundedIcon\n                            style={{color: '#9b8989', marginRight: 15}} /></td>\n                        <td className={classes.label}><h4>Gap</h4></td>\n                        <td><MinimizeIcon\n                            style={{color: '#e9e3e3de'}} /></td>\n                    </tr>\n                </tbody>\n            </table>\n            <label className={classes.scLabel}>Identity\n                <label\n                    className={classes.sc}\n                    style={{paddingLeft: 10, paddingRight: 0}}>\n                    {identity.toFixed(3)}\n                </label>\n            </label>\n            <h3>Alignment Score</h3>\n            <table className={classes.table}>\n                <tbody>\n                    <tr>\n                        <td className={classes.scLabel}>Total Score</td>\n                        <td className={classes.sc}\n                            testid={'score'} value={score}>\n                            {score}</td>\n                        <td className={classes.scLabel}>Match Score</td>\n                        <td className={classes.sc}\n                            testid={'matchSc'} value={matchSc}>\n                            {matchSc}</td>\n                        <td className={classes.scLabel}>Mismatch Penalty</td>\n                        <td className={classes.sc}\n                            testid={'mismatchSc'} value={mismatchSc}>\n                            {mismatchSc}</td>\n                        <td className={classes.scLabel}>Gap Penalty</td>\n                        <td className={classes.sc}\n                            testid={'gapSc'} value={gapSc}>\n                            {gapSc}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </Box>\n\n    );\n}\n\nGameResult.propTypes = {\n    aligns: PropTypes.shape({\n        alignA: PropTypes.string,\n        alignB: PropTypes.string,\n        match: PropTypes.number,\n        mismatch: PropTypes.number,\n        gap: PropTypes.number,\n        identity: PropTypes.number,\n\n    }),\n};\n","import React from 'react';\nimport {Box} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n        borderRadius: '10px',\n        padding: 5,\n    },\n\n    line: {\n        // color: '#1e2e51',\n        fontWeight: 'bolder',\n    },\n}));\n\n/**\n * Component to view introduction\n * @return {React.ReactElement}\n */\nexport default function GameIntroduction() {\n    const classes = useStyles();\n\n    return (\n        <Box boxShadow={6} className={classes.box}>\n            <h3>Introduction</h3>\n            <div className={classes.line}>\n            <p>In this game you have to align two sequences\n                 to get the same characters to the same\n                  position-which indicate matches\n                   in the alignment of two sequences.</p>\n            <p>Identity of the alignment is calculated as:\n                 no of matches/length of alignment. Try to acheive maximum\n                  identity by aligning more matches with lesser gaps.</p>\n            <p>Input sequence should only contain &apos;A&apos; &apos;C&apos;\n                &apos;G&apos; &apos;T&apos; characters.\n            </p>\n            </div>\n        </Box>\n    );\n}\n","import React from 'react';\nimport GameAlign from './GameAlign';\nimport GameInput from './GameInput';\nimport GameResult from './GameResult';\nimport {Button} from '@material-ui/core';\nimport {useSelector} from 'react-redux';\nimport GameIntroduction from './GameIntroduction';\n\n/**\n * Component to wrap all the components in Game mode\n * @return {React.ReactElement}\n */\nexport default function GameSection() {\n    /**\n     * object to keep input sequences\n     */\n    const [input, setInput] = React.useState(undefined);\n    /**\n     * object to keep align results\n     */\n    const [alignment, setAlignment] = React.useState(undefined);\n    /**\n     * keep error status of input score\n     */\n    const [scoreErr, setErrMsg] = React.useState(false);\n    const inputA = useSelector((state) => state.GameSeqA);\n    const inputB = useSelector((state) => state.GameSeqB);\n    const matchScore = useSelector((state) => state.matchScore);\n    const mismatchPenanlty = useSelector((state) => state.mismatchPenalty);\n    const gapPenalty = useSelector((state) => state.gapPenalty);\n    /**\n     * input sequence validation\n     */\n    const pattern = /^[AGCT]+$/;\n    let inputErr = false;\n    if (!inputA.match(pattern) || !inputB.match(pattern)) {\n        inputErr = true;\n    }\n\n    /**\n     * set align results and validate input scores\n     * @param {Object} data - align results from GameAlign Component\n     */\n    function callbackAlign(data) {\n        if (matchScore>0 && (mismatchPenanlty<0 && gapPenalty<0)) {\n            setAlignment({\n                alignA: data.alignA,\n                alignB: data.alignB,\n                identity: data.identity,\n                match: matchScore,\n                mismatch: mismatchPenanlty,\n                gap: gapPenalty,\n            });\n            if (scoreErr===true) {\n                setErrMsg(false);\n            }\n        } else {\n            setErrMsg(true);\n        }\n    }\n\n    /**\n     * adjust input sequences to same length and set to input object\n     */\n    function onSubmit() {\n        setAlignment(undefined);\n        if (inputB.length > 0 && inputA.length > inputB.length) {\n            const remain = 'e'.repeat(inputA.length - inputB.length);\n            /**\n             * add trailing gaps 'e', to end of inputB\n             */\n            setInput({\n                seqA: inputA,\n                seqB: inputB + remain,\n            });\n        } else if (inputA.length > 0 && inputB.length > inputA.length) {\n            const remain = 'e'.repeat(inputB.length - inputA.length);\n            /**\n             * add trailing gaps 'e', to end of inputA\n             */\n            setInput({\n                seqA: inputA + remain,\n                seqB: inputB,\n            });\n        } else {\n            setInput({\n                seqA: inputA,\n                seqB: inputB,\n            });\n        }\n    }\n\n    return (\n        <div>\n            <h2>Alignment Game</h2>\n            <GameIntroduction/>\n            <GameInput/>\n            <br />\n            <Button\n                testid='submitBtn'\n                variant=\"outlined\"\n                color=\"secondary\"\n                disabled={inputErr?true:false}\n                onClick={onSubmit} >\n                Submit\n            </Button>\n            {inputErr?\n                <div>\n                <span style={{color: '#ea0909'}}>invalid input</span>\n                </div>:null}\n            <br /><br />\n            {input ?\n                <GameAlign\n                    input={input}\n                    fetchAlign={callbackAlign} /> :\n                <div testid={'inputNotSet'}/>}\n            <button style={{display: 'none'}} testid={'testCallback'}\n                    onClick={callbackAlign}></button>\n            {scoreErr?\n                <div testid={'testscore'}>\n                    <h3 style={{color: '#ea0909'}}>\n                        INVALID SCORING SCHEMA. SUBMIT AGAIN\n                         WITH VALID SCORE/PENALTY\n                    </h3>\n                </div>:\n                alignment ? <GameResult aligns={alignment} />:\n                <div testid={'alignmentNotSet'}/>}\n        </div>\n    );\n}\n","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Box, IconButton} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {closeSnackbar} from '../../Redux/Actions/Snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n    message: {\n        color: 'white',\n        backgroundColor: '#F44336',\n        // paddingLeft: 3,\n        // paddingRight: 3,\n        borderRadius: 10,\n        fontSize: 15,\n        height: 20,\n    },\n    icon: {\n        color: 'white',\n    },\n}));\n\n\n/**\n * Components to diaply alerts and warnings in the buttom as a snackbar\n * @return {React.ReactElement}\n */\nexport default function SnackbarAlert() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    /**\n     * current message to display is fetched form redux state\n     */\n    const snackbarInfo = useSelector((state) => state.snackBar);\n\n\n    const handleClose = (event, reason) => {\n        console.log('closing');\n        if (reason === 'clickaway') {\n            return;\n        }\n        dispatch(closeSnackbar());\n    };\n\n    return (\n        <div>\n            <Snackbar\n                open={snackbarInfo.open}\n                autoHideDuration={6000}\n                onClose={handleClose}>\n                <Box >\n                    <table className={classes.message}>\n                        <tbody>\n                            <tr>\n                                <td style={{width: 50}}>\n                                    <div>\n                                        <ErrorOutlineIcon fontSize='small'/>\n                                    </div>\n                                </td>\n                                <td><div>{snackbarInfo.message}</div></td>\n                                <td>\n                                    {/* button to close */}\n                                    <IconButton\n                                        onClick={handleClose}\n                                        className={classes.icon}>\n                                        <CloseIcon fontSize='small'/>\n                                    </IconButton>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n\n                </Box>\n\n            </Snackbar>\n            {/* <Box color=\"red\">This is an error message!</Box>\n      <Box color=\"yellow\">This is a warning message!</Box> */}\n\n        </div>\n    );\n}\n","import React from 'react';\nimport {useSelector} from 'react-redux';\nimport PairAlignContent from './PairAlign/PairAlignContent';\nimport MSAContent from './MSA/MSAContent';\nimport HomeSection from './HomeSection/HomeSection';\nimport GameSection from './GameSection/GameSection';\nimport SnackbarAlert from './CommonAlert/SnackbarAlert';\n\n\n/**\n * Wrapper component for the displayed section\n * @return {React.ReactElement}\n */\nexport default function MainContent() {\n    const modeValue = useSelector((state) => state.mode);\n    let content;\n\n    /**\n     * content is changed according to the selected mode\n     * homesection, pairalign, msa, game\n     */\n    switch (modeValue) {\n        case 0:\n            content = <HomeSection/>;\n            break;\n        case 1:\n            content = <PairAlignContent/>;\n            break;\n\n        case 2:\n            content = <MSAContent/>;\n            break;\n\n        case 3:\n            content = <GameSection/>;\n            break;\n        default:\n            content = 'Other Mode';\n            break;\n    }\n\n    return (\n        <div style={{padding: 5}}>\n            {content}\n            <SnackbarAlert/>\n        </div>\n    );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport {useDispatch, useSelector} from 'react-redux';\n\n\nimport {DrawerList} from './DrawerList';\nimport MainContent from '../MainContent';\nimport {setDrawerOpen} from '../../Redux/Actions/Mode';\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    drawer: {\n        // [theme.breakpoints.up('xl')]: {\n        //     width: drawerWidth,\n        //     flexShrink: 0,\n        // },\n    },\n    appBar: {\n        // [theme.breakpoints.up('xl')]: {\n        //     width: `calc(100% - ${drawerWidth}px)`,\n        //     marginLeft: drawerWidth,\n        // },\n\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        // [theme.breakpoints.up('xl')]: {\n        //     display: 'none',\n        // },\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n    },\n    headerBox: {\n        width: '100%',\n    },\n\n}));\n\n/**\n * Component display main navigation drawer.\n * @param {Object} props\n * @return {React.ReactElement}\n */\nfunction MainDrawer(props) {\n    const {container} = props;\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const drawerOpenStatus = useSelector((state) => state.drawerOpen);\n    // const [mobileOpen, setMobileOpen] = React.useState(false);\n\n    const handleDrawerToggle = () => {\n        // setMobileOpen(!mobileOpen);\n        dispatch(setDrawerOpen(!drawerOpenStatus));\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    {/* button to open the drawer */}\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n\n                    <Box className={classes.headerBox}>\n                        <Typography variant=\"h6\" noWrap>\n                            BioViz Web Client\n              </Typography>\n                    </Box>\n\n                </Toolbar>\n            </AppBar>\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\n\n                    <Drawer\n                        container={container}\n                        variant=\"temporary\"\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                        open={drawerOpenStatus}\n                        onClose={handleDrawerToggle}\n                        classes={{\n                            paper: classes.drawerPaper,\n                        }}\n                        ModalProps={{\n                            keepMounted: true,\n                            // Better open performance on mobile.\n                        }}\n                    >\n                        <DrawerList closeDrawer={handleDrawerToggle}/>\n                    </Drawer>\n\n            </nav>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n\n                {/* content to display in each mode */}\n                <Box >\n                    <MainContent />\n\n                </Box>\n\n            </main>\n        </div>\n    );\n}\n\nMainDrawer.propTypes = {\n    container: PropTypes.object,\n};\n\nexport default MainDrawer;\n","import React from 'react';\nimport MainDrawer from './Drawer/MainDrawer';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport {useSelector} from 'react-redux';\n\n// Favicon attribution\n// Icons made by <a href=\"https://www.flaticon.com/authors/good-ware\" title=\"Good Ware\">Good Ware</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a>\n\n/**\n * Wrapper component for whole web page\n * @return {React.ReactElement}\n */\nexport const MainWrapper = () =>{\n    let currentTheme = useSelector((state) => state.currentTheme);\n    if (!(currentTheme === 'dark' || currentTheme === 'light')) {\n        currentTheme = 'light';\n    }\n    const darkTheme = createMuiTheme({\n        palette: {\n          type: currentTheme,\n        },\n      });\n    // changing the title\n    document.title = 'BioViz Web Client';\n    return (\n        <div>\n            <MuiThemeProvider theme={darkTheme}>\n            <MainDrawer/>\n            </MuiThemeProvider>\n        </div>\n    );\n};\n","import React from 'react';\nimport './App.css';\nimport { MainWrapper } from './Components/MainWrapper'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MainWrapper />\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const nwResult = {\n    'result': {\n      'alignments': [\n        {\n          'algn_a': 'CACCCCGATT-AA-GTGATATTGGAGATAGCT',\n          'algn_b': 'GTATTGGCTTGAACCTGATGTGTGGGGTA--A',\n          'identity': 0.4375,\n          'path': [\n            [\n              30,\n              30,\n            ],\n            [\n              29,\n              29,\n            ],\n            [\n              28,\n              29,\n            ],\n            [\n              27,\n              29,\n            ],\n            [\n              26,\n              28,\n            ],\n            [\n              25,\n              27,\n            ],\n            [\n              24,\n              26,\n            ],\n            [\n              23,\n              25,\n            ],\n            [\n              22,\n              24,\n            ],\n            [\n              21,\n              23,\n            ],\n            [\n              20,\n              22,\n            ],\n            [\n              19,\n              21,\n            ],\n            [\n              18,\n              20,\n            ],\n            [\n              17,\n              19,\n            ],\n            [\n              16,\n              18,\n            ],\n            [\n              15,\n              17,\n            ],\n            [\n              14,\n              16,\n            ],\n            [\n              13,\n              15,\n            ],\n            [\n              12,\n              14,\n            ],\n            [\n              12,\n              13,\n            ],\n            [\n              11,\n              12,\n            ],\n            [\n              10,\n              11,\n            ],\n            [\n              10,\n              10,\n            ],\n            [\n              9,\n              9,\n            ],\n            [\n              8,\n              8,\n            ],\n            [\n              7,\n              7,\n            ],\n            [\n              6,\n              6,\n            ],\n            [\n              5,\n              5,\n            ],\n            [\n              4,\n              4,\n            ],\n            [\n              3,\n              3,\n            ],\n            [\n              2,\n              2,\n            ],\n            [\n              1,\n              1,\n            ],\n          ],\n        },\n      ],\n      'direction_matrix': [\n        [\n          [\n            0,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            1,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            1,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            1,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n        ],\n        [\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n          ],\n          [\n            2,\n            3,\n          ],\n          [\n            2,\n            3,\n          ],\n        ],\n      ],\n      'score': -12,\n      'score_matrix': [\n        [\n          0,\n          -3,\n          -6,\n          -9,\n          -12,\n          -15,\n          -18,\n          -21,\n          -24,\n          -27,\n          -30,\n          -33,\n          -36,\n          -39,\n          -42,\n          -45,\n          -48,\n          -51,\n          -54,\n          -57,\n          -60,\n          -63,\n          -66,\n          -69,\n          -72,\n          -75,\n          -78,\n          -81,\n          -84,\n          -87,\n          -90,\n        ],\n        [\n          -3,\n          -1,\n          -4,\n          -7,\n          -10,\n          -13,\n          -16,\n          -19,\n          -20,\n          -23,\n          -26,\n          -29,\n          -32,\n          -35,\n          -38,\n          -41,\n          -44,\n          -47,\n          -50,\n          -53,\n          -56,\n          -59,\n          -62,\n          -65,\n          -68,\n          -71,\n          -74,\n          -77,\n          -80,\n          -83,\n          -86,\n        ],\n        [\n          -6,\n          -4,\n          -2,\n          -3,\n          -6,\n          -9,\n          -12,\n          -15,\n          -18,\n          -21,\n          -24,\n          -27,\n          -28,\n          -31,\n          -34,\n          -37,\n          -40,\n          -43,\n          -46,\n          -49,\n          -52,\n          -55,\n          -58,\n          -61,\n          -64,\n          -67,\n          -70,\n          -73,\n          -76,\n          -79,\n          -82,\n        ],\n        [\n          -9,\n          -7,\n          -5,\n          -3,\n          -4,\n          -7,\n          -10,\n          -13,\n          -14,\n          -17,\n          -20,\n          -23,\n          -26,\n          -29,\n          -30,\n          -33,\n          -36,\n          -39,\n          -42,\n          -45,\n          -48,\n          -51,\n          -54,\n          -57,\n          -60,\n          -63,\n          -66,\n          -69,\n          -72,\n          -75,\n          -78,\n        ],\n        [\n          -12,\n          -10,\n          -8,\n          -6,\n          -4,\n          -5,\n          -8,\n          -11,\n          -12,\n          -15,\n          -18,\n          -21,\n          -24,\n          -27,\n          -28,\n          -29,\n          -32,\n          -35,\n          -38,\n          -41,\n          -44,\n          -47,\n          -50,\n          -53,\n          -56,\n          -59,\n          -62,\n          -65,\n          -68,\n          -71,\n          -74,\n        ],\n        [\n          -15,\n          -13,\n          -11,\n          -9,\n          -7,\n          -5,\n          -6,\n          -9,\n          -10,\n          -13,\n          -16,\n          -19,\n          -22,\n          -25,\n          -26,\n          -27,\n          -30,\n          -33,\n          -36,\n          -39,\n          -42,\n          -45,\n          -48,\n          -51,\n          -54,\n          -57,\n          -60,\n          -63,\n          -66,\n          -69,\n          -72,\n        ],\n        [\n          -18,\n          -16,\n          -14,\n          -12,\n          -10,\n          -8,\n          -6,\n          -7,\n          -8,\n          -11,\n          -14,\n          -17,\n          -20,\n          -23,\n          -24,\n          -25,\n          -28,\n          -31,\n          -34,\n          -37,\n          -40,\n          -43,\n          -46,\n          -49,\n          -52,\n          -55,\n          -58,\n          -61,\n          -64,\n          -67,\n          -70,\n        ],\n        [\n          -21,\n          -17,\n          -17,\n          -15,\n          -13,\n          -11,\n          -7,\n          -5,\n          -8,\n          -9,\n          -12,\n          -13,\n          -16,\n          -19,\n          -22,\n          -25,\n          -26,\n          -27,\n          -30,\n          -33,\n          -36,\n          -39,\n          -42,\n          -45,\n          -48,\n          -51,\n          -54,\n          -57,\n          -60,\n          -63,\n          -66,\n        ],\n        [\n          -24,\n          -20,\n          -18,\n          -16,\n          -16,\n          -14,\n          -10,\n          -8,\n          -6,\n          -9,\n          -10,\n          -13,\n          -12,\n          -15,\n          -18,\n          -21,\n          -24,\n          -27,\n          -26,\n          -29,\n          -32,\n          -35,\n          -38,\n          -41,\n          -44,\n          -47,\n          -50,\n          -53,\n          -56,\n          -59,\n          -62,\n        ],\n        [\n          -27,\n          -23,\n          -19,\n          -19,\n          -15,\n          -15,\n          -13,\n          -11,\n          -9,\n          -5,\n          -8,\n          -11,\n          -14,\n          -13,\n          -16,\n          -19,\n          -20,\n          -23,\n          -26,\n          -25,\n          -28,\n          -31,\n          -34,\n          -37,\n          -40,\n          -43,\n          -46,\n          -49,\n          -52,\n          -55,\n          -58,\n        ],\n        [\n          -30,\n          -26,\n          -22,\n          -20,\n          -18,\n          -14,\n          -16,\n          -14,\n          -12,\n          -8,\n          -4,\n          -7,\n          -10,\n          -13,\n          -14,\n          -17,\n          -18,\n          -21,\n          -24,\n          -25,\n          -26,\n          -27,\n          -30,\n          -33,\n          -36,\n          -39,\n          -42,\n          -45,\n          -48,\n          -51,\n          -54,\n        ],\n        [\n          -33,\n          -29,\n          -25,\n          -21,\n          -21,\n          -17,\n          -15,\n          -17,\n          -15,\n          -11,\n          -7,\n          -5,\n          -6,\n          -9,\n          -12,\n          -15,\n          -18,\n          -19,\n          -20,\n          -23,\n          -26,\n          -27,\n          -28,\n          -31,\n          -34,\n          -37,\n          -40,\n          -43,\n          -46,\n          -47,\n          -50,\n        ],\n        [\n          -36,\n          -32,\n          -28,\n          -24,\n          -22,\n          -20,\n          -18,\n          -16,\n          -18,\n          -14,\n          -10,\n          -8,\n          -4,\n          -5,\n          -8,\n          -11,\n          -14,\n          -17,\n          -18,\n          -21,\n          -24,\n          -27,\n          -28,\n          -29,\n          -32,\n          -35,\n          -38,\n          -41,\n          -44,\n          -45,\n          -46,\n        ],\n        [\n          -39,\n          -35,\n          -31,\n          -27,\n          -25,\n          -23,\n          -19,\n          -17,\n          -17,\n          -17,\n          -13,\n          -9,\n          -7,\n          -5,\n          -6,\n          -9,\n          -12,\n          -13,\n          -16,\n          -19,\n          -20,\n          -23,\n          -26,\n          -29,\n          -28,\n          -31,\n          -34,\n          -37,\n          -40,\n          -43,\n          -46,\n        ],\n        [\n          -42,\n          -38,\n          -34,\n          -30,\n          -26,\n          -24,\n          -22,\n          -20,\n          -18,\n          -16,\n          -16,\n          -12,\n          -10,\n          -8,\n          -6,\n          -7,\n          -8,\n          -11,\n          -14,\n          -15,\n          -18,\n          -19,\n          -22,\n          -25,\n          -28,\n          -29,\n          -32,\n          -35,\n          -36,\n          -39,\n          -42,\n        ],\n        [\n          -45,\n          -41,\n          -37,\n          -33,\n          -29,\n          -27,\n          -23,\n          -21,\n          -21,\n          -19,\n          -17,\n          -15,\n          -13,\n          -11,\n          -9,\n          -7,\n          -8,\n          -7,\n          -10,\n          -13,\n          -14,\n          -17,\n          -18,\n          -21,\n          -24,\n          -27,\n          -28,\n          -31,\n          -34,\n          -37,\n          -40,\n        ],\n        [\n          -48,\n          -44,\n          -40,\n          -36,\n          -32,\n          -30,\n          -26,\n          -24,\n          -22,\n          -22,\n          -20,\n          -18,\n          -14,\n          -12,\n          -12,\n          -10,\n          -8,\n          -9,\n          -6,\n          -9,\n          -12,\n          -15,\n          -18,\n          -19,\n          -22,\n          -25,\n          -28,\n          -29,\n          -32,\n          -33,\n          -36,\n        ],\n        [\n          -51,\n          -47,\n          -43,\n          -39,\n          -35,\n          -31,\n          -29,\n          -27,\n          -25,\n          -21,\n          -21,\n          -21,\n          -17,\n          -15,\n          -13,\n          -13,\n          -9,\n          -9,\n          -9,\n          -5,\n          -8,\n          -11,\n          -14,\n          -17,\n          -20,\n          -23,\n          -26,\n          -29,\n          -28,\n          -31,\n          -34,\n        ],\n        [\n          -54,\n          -50,\n          -46,\n          -42,\n          -38,\n          -34,\n          -32,\n          -30,\n          -28,\n          -24,\n          -22,\n          -22,\n          -20,\n          -16,\n          -16,\n          -14,\n          -12,\n          -10,\n          -8,\n          -8,\n          -6,\n          -9,\n          -12,\n          -15,\n          -18,\n          -21,\n          -24,\n          -27,\n          -30,\n          -27,\n          -30,\n        ],\n        [\n          -57,\n          -53,\n          -49,\n          -45,\n          -41,\n          -37,\n          -35,\n          -33,\n          -31,\n          -27,\n          -23,\n          -23,\n          -23,\n          -19,\n          -17,\n          -17,\n          -13,\n          -13,\n          -11,\n          -7,\n          -9,\n          -5,\n          -8,\n          -11,\n          -14,\n          -17,\n          -20,\n          -23,\n          -26,\n          -29,\n          -28,\n        ],\n        [\n          -60,\n          -56,\n          -52,\n          -48,\n          -44,\n          -40,\n          -38,\n          -36,\n          -34,\n          -30,\n          -26,\n          -24,\n          -24,\n          -22,\n          -20,\n          -18,\n          -16,\n          -14,\n          -14,\n          -10,\n          -8,\n          -8,\n          -6,\n          -7,\n          -10,\n          -13,\n          -16,\n          -19,\n          -22,\n          -25,\n          -28,\n        ],\n        [\n          -63,\n          -59,\n          -55,\n          -51,\n          -47,\n          -43,\n          -39,\n          -37,\n          -37,\n          -33,\n          -29,\n          -25,\n          -25,\n          -25,\n          -23,\n          -21,\n          -19,\n          -15,\n          -15,\n          -13,\n          -9,\n          -9,\n          -7,\n          -7,\n          -6,\n          -9,\n          -12,\n          -15,\n          -18,\n          -21,\n          -24,\n        ],\n        [\n          -66,\n          -62,\n          -58,\n          -54,\n          -50,\n          -46,\n          -42,\n          -38,\n          -38,\n          -36,\n          -32,\n          -28,\n          -26,\n          -26,\n          -26,\n          -24,\n          -22,\n          -18,\n          -16,\n          -16,\n          -12,\n          -10,\n          -8,\n          -8,\n          -6,\n          -5,\n          -8,\n          -11,\n          -14,\n          -17,\n          -20,\n        ],\n        [\n          -69,\n          -65,\n          -61,\n          -57,\n          -53,\n          -49,\n          -45,\n          -41,\n          -39,\n          -39,\n          -35,\n          -31,\n          -27,\n          -25,\n          -27,\n          -27,\n          -25,\n          -21,\n          -17,\n          -17,\n          -15,\n          -13,\n          -11,\n          -9,\n          -9,\n          -7,\n          -6,\n          -9,\n          -12,\n          -13,\n          -16,\n        ],\n        [\n          -72,\n          -68,\n          -64,\n          -60,\n          -56,\n          -52,\n          -48,\n          -44,\n          -42,\n          -40,\n          -38,\n          -34,\n          -30,\n          -28,\n          -26,\n          -28,\n          -28,\n          -24,\n          -20,\n          -18,\n          -16,\n          -16,\n          -12,\n          -12,\n          -8,\n          -8,\n          -6,\n          -5,\n          -8,\n          -11,\n          -14,\n        ],\n        [\n          -75,\n          -71,\n          -67,\n          -63,\n          -59,\n          -55,\n          -51,\n          -47,\n          -45,\n          -43,\n          -41,\n          -37,\n          -33,\n          -29,\n          -29,\n          -27,\n          -29,\n          -27,\n          -23,\n          -21,\n          -19,\n          -17,\n          -15,\n          -13,\n          -11,\n          -9,\n          -9,\n          -7,\n          -6,\n          -7,\n          -10,\n        ],\n        [\n          -78,\n          -74,\n          -70,\n          -66,\n          -62,\n          -58,\n          -54,\n          -50,\n          -48,\n          -44,\n          -42,\n          -40,\n          -36,\n          -32,\n          -30,\n          -30,\n          -26,\n          -29,\n          -26,\n          -22,\n          -22,\n          -18,\n          -18,\n          -14,\n          -14,\n          -12,\n          -10,\n          -10,\n          -6,\n          -7,\n          -8,\n        ],\n        [\n          -81,\n          -77,\n          -73,\n          -69,\n          -65,\n          -61,\n          -57,\n          -53,\n          -51,\n          -47,\n          -45,\n          -43,\n          -39,\n          -35,\n          -33,\n          -31,\n          -29,\n          -27,\n          -28,\n          -25,\n          -23,\n          -21,\n          -19,\n          -17,\n          -15,\n          -15,\n          -13,\n          -11,\n          -9,\n          -5,\n          -6,\n        ],\n        [\n          -84,\n          -80,\n          -76,\n          -72,\n          -68,\n          -64,\n          -60,\n          -56,\n          -54,\n          -50,\n          -48,\n          -44,\n          -42,\n          -38,\n          -36,\n          -34,\n          -32,\n          -28,\n          -28,\n          -28,\n          -24,\n          -24,\n          -20,\n          -20,\n          -16,\n          -14,\n          -14,\n          -12,\n          -12,\n          -8,\n          -6,\n        ],\n        [\n          -87,\n          -83,\n          -79,\n          -75,\n          -71,\n          -67,\n          -63,\n          -59,\n          -55,\n          -53,\n          -51,\n          -47,\n          -45,\n          -41,\n          -37,\n          -35,\n          -35,\n          -31,\n          -29,\n          -29,\n          -27,\n          -25,\n          -23,\n          -21,\n          -19,\n          -17,\n          -15,\n          -15,\n          -13,\n          -11,\n          -9,\n        ],\n        [\n          -90,\n          -86,\n          -82,\n          -78,\n          -74,\n          -70,\n          -66,\n          -62,\n          -58,\n          -54,\n          -52,\n          -50,\n          -48,\n          -44,\n          -40,\n          -38,\n          -34,\n          -34,\n          -32,\n          -28,\n          -30,\n          -26,\n          -26,\n          -22,\n          -22,\n          -20,\n          -18,\n          -16,\n          -14,\n          -14,\n          -12,\n        ],\n      ],\n    },\n  };\nexport const paInput = {\n    seqA: {\n        seq: 'CAACGGCAGCTCACGAGGCCTAACCATATCACGCGA'+\n        'GTGGCAAGTCACATTCCTGAGTCTCAACGAGTCAATTTCTAGACACATAGGGTC',\n        range: [5, 30],\n        name: 'sequence a',\n    },\n    seqB: {\n        seq: 'ACTCAAGGCGGTCCTCAAATATGCCTGCCACAGCTAC'+\n    'ACAGGTGTCTATTAAGTCGAGCGTACTCGTTCCACCGGCGCCGTAAAAACCGG',\n        range: [5, 30],\n        name: 'sequence b',\n    },\n\n\n};\n// export const paInput = {\n//     seqA: 'AAAA',\n//     seqB: 'AAAG',\n// };\n","export const DNAsimilaritymatrixdata = {\n    'AA': 1,\n    'CC': 1,\n    'GG': 1,\n    'TT': 1,\n    'CA': -1,\n    'GA': -1,\n    'TA': -1,\n    'GC': -1,\n    'TC': -1,\n    'TG': -1,\n};\n","export const initialData = [\n    {\n        key: 0, seq: 'TCGAATTCCAAGACTAATAGACAGAAACAA',\n        range: [5, 30], name: 'sequence 1',\n    },\n    {\n        key: 1, seq: 'GTATTAAGATAAGACACAACAACAAAATTT',\n        range: [5, 30], name: 'sequence 2',\n    },\n    {\n        key: 2, seq: 'CAAATACGTCTAACGCATAATTTGATAAAG',\n        range: [5, 30], name: 'sequence 3',\n    },\n    {\n        key: 3, seq: 'GTAAACAAATACCCACCTGTCAATAATAGA',\n        range: [5, 30], name: 'sequence 4',\n    },\n    {\n        key: 4, seq: 'TGAAAACACATAAGCTCAATTATTTAATAG',\n        range: [5, 30], name: 'sequence 5',\n    },\n    {\n        key: 5, seq: 'GTAGGACAAAATACACCCAGTATTAAAAAA',\n        range: [5, 30], name: 'sequence 6',\n    },\n];\n\n// export const initialData = [\n//     {\n//       'key': 0,\n//       'seq': 'TCGTACTTCCCCCCAAGTTAAATACCCGTT',\n//     },\n//     {\n//       'key': 1,\n//       'seq': 'CCTGGCTCAATCTAAAGGGTAACTTGCTCT',\n//     },\n//     {\n//       'key': 2,\n//       'seq': 'CATCCCGTTAATATAGTCCGTCGATTCCTG',\n//     },\n//     {\n//       'key': 3,\n//       'seq': 'ACTCCTAGTGGGCGTCTAGGAGCACTCATC',\n//     },\n//     {\n//       'key': 4,\n//       'seq': 'CACCAGTTATGTCAAAGATGCTTCGTCGAT',\n//     },\n//     {\n//       'key': 5,\n//       'seq': 'CAAGAGAGTAGGCCTTTTCCACGCACTCTT',\n//     },\n//     {\n//       'key': 6,\n//       'seq': 'TGAGACGGCTTCAAAGCTCGCCTTCAAGTT',\n//     },\n//     {\n//       'key': 7,\n//       'seq': 'TTCATTAATTTCTGTGATGGTCGCTAATAA',\n//     },\n//     {\n//       'key': 8,\n//       'seq': 'CGGCGGATGCTGTTAGCATAATATCAAAAC',\n//     },\n//     {\n//       'key': 9,\n//       'seq': 'CAAAGGCGAGGACTACGAAAACCCCTGGTG',\n//     },\n//     {\n//       'key': 10,\n//       'seq': 'GTGGACGCTCCGCGCTTTCCTGCCCGGACC',\n//     },\n//     {\n//       'key': 11,\n//       'seq': 'ACGTAGTTGACGGACGCTAGCGCTTTAGAG',\n//     },\n//     {\n//       'key': 12,\n//       'seq': 'TTACGATGATTATTGCATTCCTCGTCTGAC',\n//     },\n//     {\n//       'key': 13,\n//       'seq': 'TAACGAAGTGTAAAGGTCTAAACCGATAAT',\n//     },\n//     {\n//       'key': 14,\n//       'seq': 'CACGATACCTGGGGAAGGATTTTTTTCTAA',\n//     },\n//   ];\n","import {modeReducer, genomeTypeReducer,\n    drawerOpenReducer, themeReducer} from './Mode';\nimport {P1Reducer, P2Reducer, PAlgoReducer} from './PairAlign';\nimport {combineReducers} from 'redux';\nimport {\n    MatchScoreReducer, MisMatchPenaltyReducer,\n    GapPenaltyReducer,\n    GapOpenPenaltyReducer,\n    GapExtendPenaltyReducer,\n    ScoringMethodReducer,\n    TracebackPriorityReducer,\n    SimilarityMatrixNameReducer,\n    DNASimilarityMatrixReducer,\n} from './Score';\nimport {MSASeqReducer, MSAAlgoReducer, MSAOrderReducer} from './MSA';\nimport {SeqAReducer, SeqBReducer} from './Game';\nimport {SnackbarReducer} from './Snackbar';\n\nconst allReducers = combineReducers({\n    drawerOpen: drawerOpenReducer,\n    currentTheme: themeReducer,\n    mode: modeReducer,\n    genomeType: genomeTypeReducer,\n    P1: P1Reducer,\n    P2: P2Reducer,\n    matchScore: MatchScoreReducer,\n    mismatchPenalty: MisMatchPenaltyReducer,\n    gapPenalty: GapPenaltyReducer,\n    gapOpenPenalty: GapOpenPenaltyReducer,\n    gapExtendPenalty: GapExtendPenaltyReducer,\n    scoringMethod: ScoringMethodReducer,\n    tracebackPriority: TracebackPriorityReducer,\n    similarityMatrixName: SimilarityMatrixNameReducer,\n    DNASimilarityMatrix: DNASimilarityMatrixReducer,\n    MSASeq: MSASeqReducer,\n    pAlgo: PAlgoReducer,\n    msaAlgo: MSAAlgoReducer,\n    msaOrder: MSAOrderReducer,\n    GameSeqA: SeqAReducer,\n    GameSeqB: SeqBReducer,\n    snackBar: SnackbarReducer,\n});\n\nexport default allReducers;\n","export const modeReducer = (state = 0, action)=>{\n    switch (action.type) {\n        case 'SET_MODE':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const genomeTypeReducer = (state = 'DNA', action)=>{\n    switch (action.type) {\n        case 'SET_GENOME_TYPE':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const drawerOpenReducer = (state = false, action)=>{\n    switch (action.type) {\n        case 'SET_DRAWER_OPEN':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const themeReducer = (state = 'light', action)=>{\n    switch (action.type) {\n        case 'SET_THEME':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n","import {paInput} from '../../Components/PairAlign/DummyData';\n\nexport const P1Reducer = (state = paInput.seqA, action)=>{\n    switch (action.type) {\n        case 'SET_P1':\n            const prev1_ = {...state};\n            prev1_.seq = action.payload;\n            prev1_.range = [Math.min(1, action.payload.length),\n                Math.min(100, action.payload.length)];\n            return prev1_;\n\n        case 'SET_P1_RANGE':\n            const prev1__ = {...state};\n            prev1__.range = action.payload;\n            return prev1__;\n\n        case 'SET_P1_NAME':\n            const prev1___ = {...state};\n            prev1___.name = action.payload;\n            return prev1___;\n\n        default:\n            return state;\n    }\n};\n\nexport const P2Reducer = (state = paInput.seqB, action)=>{\n    switch (action.type) {\n        case 'SET_P2':\n            const prev2_ = {...state};\n            prev2_.seq = action.payload;\n            prev2_.range = [Math.min(1, action.payload.length),\n                Math.min(100, action.payload.length)];\n            return prev2_;\n\n        case 'SET_P2_RANGE':\n            const prev2__ = {...state};\n            prev2__.range = action.payload;\n            return prev2__;\n\n        case 'SET_P2_NAME':\n            const prev2___ = {...state};\n            prev2___.name = action.payload;\n            return prev2___;\n        default:\n            return state;\n    }\n};\n\nexport const PAlgoReducer = (state = 'GLOBAL', action)=>{\n    switch (action.type) {\n        case 'SET_P_ALGO':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\n","import {DNAsimilaritymatrixdata} from '../../util/DNAmatrixdata';\n\nexport const MatchScoreReducer = (state = 1, action) => {\n    switch (action.type) {\n        case 'SET_MATCH':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const MisMatchPenaltyReducer = (state = -1, action) => {\n    switch (action.type) {\n        case 'SET_MISMATCH':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\n\nexport const GapPenaltyReducer = (state = -1, action) => {\n    switch (action.type) {\n        case 'SET_GAP':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const GapOpenPenaltyReducer = (state = -1, action) => {\n    switch (action.type) {\n        case 'SET_GAP_OPEN':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const GapExtendPenaltyReducer = (state = -1, action) => {\n    switch (action.type) {\n        case 'SET_GAP_EXTEND':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const ScoringMethodReducer = (state = 'BASIC', action) => {\n    switch (action.type) {\n        case 'SET_SCORING_METHOD':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const TracebackPriorityReducer = (state = 'LOWROAD', action) => {\n    switch (action.type) {\n        case 'SET_TRACEBACK_PRIORITY':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const SimilarityMatrixNameReducer = (state = 'DEFAULT', action) => {\n    switch (action.type) {\n        case 'SET_SIMILARITY_MATRIX_NAME':\n            return action.payload;\n\n        case 'SET_GENOME_TYPE':\n            return 'DEFAULT';\n\n        default:\n            return state;\n    }\n};\n\nexport const DNASimilarityMatrixReducer =\n    (state = DNAsimilaritymatrixdata, action) => {\n        switch (action.type) {\n            case 'EDIT_DNA_SIMILARIY_MATRIX':\n                const newMatrix = {...state};\n                newMatrix[action.payload.identifier] = action.payload.value;\n                return newMatrix;\n\n            default:\n                return state;\n        }\n    };\n","import {initialData} from '../../Components/MSA/DummyData';\n\nexport const MSASeqReducer = (state = initialData, action) => {\n    switch (action.type) {\n        case 'ADD_NEW_MSA':\n            const prev = [...state];\n            const newKey = prev[prev.length - 1].key + 1;\n            return [...prev,\n            {\n                key: newKey,\n                seq: '',\n                range: [0, 0],\n                name: `sequence ${newKey + 1}`,\n            }];\n\n        case 'SET_MSA':\n            const prev_ = [...state];\n            for (let i = 0; i < prev_.length; i++) {\n                if (action.payload.key === prev_[i].key) {\n                    prev_[i].seq = action.payload.seq;\n                    prev_[i].range = [Math.min(1, action.payload.seq.length),\n                    Math.min(100, action.payload.seq.length)];\n                }\n            }\n            return prev_;\n\n        case 'SET_MSA_RANGE':\n            const prev__ = [...state];\n            for (let i = 0; i < prev__.length; i++) {\n                if (action.payload.key === prev__[i].key) {\n                    prev__[i].range = action.payload.range;\n                }\n            }\n            return prev__;\n\n        case 'SET_MSA_NAME':\n            const prev___ = [...state];\n            for (let i = 0; i < prev___.length; i++) {\n                if (action.payload.key === prev___[i].key) {\n                    prev___[i].name = action.payload.name;\n                }\n            }\n            return prev___;\n\n        case 'REMOVE_MSA':\n            if (state.length === 1) {\n                return state;\n            } else {\n                const new_ = state.filter((element) => {\n                    return element.key !== action.payload.key;\n                });\n                return new_;\n            }\n\n\n        default:\n            return state;\n    }\n};\n\nexport const MSAAlgoReducer = (state = '1', action) => {\n    switch (action.type) {\n        case 'SET_MSA_ALGO':\n            return action.payload;\n\n        default:\n            return state;\n    }\n};\n\nexport const MSAOrderReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_MSA_ORDER':\n            return action.payload;\n        case 'SET_MODE':\n        case 'ADD_NEW_MSA':\n        case 'SET_MSA':\n        case 'REMOVE_MSA':\n        case 'SET_MSA_ALGO':\n            return [];\n\n        default:\n            return state;\n    }\n};\n","export const SeqAReducer = (state='AGCATACGCATCA', action)=>{\n    switch (action.type) {\n        case 'SET_SEQ_A':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport const SeqBReducer = (state='GCATCGACTCGCATCG', action)=>{\n    switch (action.type) {\n        case 'SET_SEQ_B':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n","export const SnackbarReducer =\n    (state = {open: false, message: 'test'}, action) => {\n        switch (action.type) {\n            case 'SET_SNACKBAR_MESSAGE':\n                const prev = {...state};\n                prev.message = action.payload.message;\n                prev.open = true;\n                return prev;\n\n            case 'CLOSE_SNACKBAR':\n                const prev2 = {...state};\n                prev2.open = false;\n                return prev2;\n\n            default:\n                return state;\n        }\n    };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { createStore } from 'redux';\nimport allReducers from './Redux/Reducers'\nimport { Provider } from 'react-redux'\n\nconst myStore = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={myStore}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"image_image__Kamfe\",\"img\":\"image_img__OLJYD\",\"heading\":\"image_heading__30QLD\",\"subHeading\":\"image_subHeading__3wewl\",\"title\":\"image_title__22ENT\",\"subTitle\":\"image_subTitle__1k-CS\",\"servicesBackground\":\"image_servicesBackground__2Wxzm\"};","module.exports = __webpack_public_path__ + \"static/media/dna.701c38d5.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"genome-base\":\"GenomeStyles_genome-base__3ci0f\",\"gap\":\"GenomeStyles_gap__3Cf9f\",\"DNA-A\":\"GenomeStyles_DNA-A__2QTRv\",\"DNA-C\":\"GenomeStyles_DNA-C__1P1AQ\",\"DNA-G\":\"GenomeStyles_DNA-G__2qHF3\",\"DNA-T\":\"GenomeStyles_DNA-T__2H0NW\",\"PROTEIN-A\":\"GenomeStyles_PROTEIN-A__2CwA1\",\"PROTEIN-I\":\"GenomeStyles_PROTEIN-I__1eHsc\",\"PROTEIN-L\":\"GenomeStyles_PROTEIN-L__3CCS7\",\"PROTEIN-F\":\"GenomeStyles_PROTEIN-F__Mm_py\",\"PROTEIN-W\":\"GenomeStyles_PROTEIN-W__aIXc0\",\"PROTEIN-V\":\"GenomeStyles_PROTEIN-V__p7ifV\",\"PROTEIN-M\":\"GenomeStyles_PROTEIN-M__MtEP-\",\"PROTEIN-K\":\"GenomeStyles_PROTEIN-K__2wnwc\",\"PROTEIN-R\":\"GenomeStyles_PROTEIN-R__3LIyi\",\"PROTEIN-E\":\"GenomeStyles_PROTEIN-E__2NrqQ\",\"PROTEIN-D\":\"GenomeStyles_PROTEIN-D__1FEVM\",\"PROTEIN-N\":\"GenomeStyles_PROTEIN-N__2fc6x\",\"PROTEIN-Q\":\"GenomeStyles_PROTEIN-Q__1QMwv\",\"PROTEIN-S\":\"GenomeStyles_PROTEIN-S__3hOSz\",\"PROTEIN-T\":\"GenomeStyles_PROTEIN-T__2o3Mb\",\"PROTEIN-C\":\"GenomeStyles_PROTEIN-C__2G_LI\",\"PROTEIN-G\":\"GenomeStyles_PROTEIN-G__3jijP\",\"PROTEIN-P\":\"GenomeStyles_PROTEIN-P__xc1Ew\"};"],"sourceRoot":""}